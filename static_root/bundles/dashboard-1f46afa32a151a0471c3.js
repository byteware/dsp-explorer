webpackJsonp([0],{

/***/ 299:
/* no static exports found */
/* all exports used */
/*!**************************************!*\
  !*** ./dashboard/static/js/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _angular = __webpack_require__(/*! angular */ 36);\n\nvar angular = _interopRequireWildcard(_angular);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n__webpack_require__(/*! ../../../~/ngmap */ 641);\n\n// Import this app style\n__webpack_require__(/*! ../style/index.scss */ 644);\n// Require static angular componenets\nvar baseImports = __webpack_require__(/*! ../../../static/js/index */ 51);\n// Angular form imports\nbaseImports.angularForm();\n\n// Stuff\n__webpack_require__(/*! ng-infinite-scroll */ 640);\n__webpack_require__(/*! ../../../~/vsGoogleAutocomplete/dist/vs-google-autocomplete */ 649);\n__webpack_require__(/*! ../../../~/vsGoogleAutocomplete/dist/vs-autocomplete-validator */ 648);\n\n// Init Angular APP\nvar app = angular.module('dashboard', ['ui.bootstrap', 'toastr', 'ui.select', 'ngSanitize', 'ngAnimate', 'mgcrea.ngStrap', 'infinite-scroll', 'vsGoogleAutocomplete', 'ngMap']).config(['$interpolateProvider', function ($interpolateProvider) {\n    $interpolateProvider.startSymbol('{$');\n    $interpolateProvider.endSymbol('$}');\n}]).config(['$httpProvider', function ($httpProvider) {\n    $httpProvider.defaults.xsrfCookieName = 'csrftoken';\n    $httpProvider.defaults.xsrfHeaderName = 'X-CSRFToken';\n}]).config(['$qProvider', function ($qProvider) {\n    $qProvider.errorOnUnhandledRejections(false);\n}]);\n\n// Require base angular componenets\nbaseImports.angularBase(app).directives(app).dataVizDirectives(app);\n\napp.factory('UserSearchFactory', __webpack_require__(/*! ./factories/UserSearchFactory */ 327).default);\napp.controller('landingController', __webpack_require__(/*! ./controllers/landing.controller */ 317).default);\napp.controller('dashboardController', __webpack_require__(/*! ./controllers/dashboard.controller */ 314).default);\napp.controller('insightController', __webpack_require__(/*! ./controllers/insight.controller */ 316).default);\napp.controller('onboardingController', __webpack_require__(/*! ./controllers/onboarding.controller */ 318).default);\napp.controller('themesController', __webpack_require__(/*! ./controllers/themes.controller */ 320).default);\napp.controller('eventsController', __webpack_require__(/*! ./controllers/events.controller */ 315).default);\napp.controller('searchController', __webpack_require__(/*! ./controllers/searchmembers.controller */ 319).default);\napp.directive('userStories', __webpack_require__(/*! ./directives/UserStories.directive */ 326).default);\n\napp.directive('challengeList', __webpack_require__(/*! ./directives/ChallengeList */ 322).default);\napp.directive('challenge', __webpack_require__(/*! ./directives/Challenge */ 321).default);\n\napp.directive('projectDetail', __webpack_require__(/*! ./directives/ProjectDetail */ 324).default);\napp.directive('projectList', __webpack_require__(/*! ./directives/ProjectList */ 325).default);\napp.directive('project', __webpack_require__(/*! ./directives/Project */ 323).default);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvaW5kZXguanM/ODgyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhbmd1bGFyIGZyb20gJ2FuZ3VsYXInO1xucmVxdWlyZSgnLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25nbWFwJylcblxuLy8gSW1wb3J0IHRoaXMgYXBwIHN0eWxlXG5yZXF1aXJlKFwiLi4vc3R5bGUvaW5kZXguc2Nzc1wiKVxuLy8gUmVxdWlyZSBzdGF0aWMgYW5ndWxhciBjb21wb25lbmV0c1xubGV0IGJhc2VJbXBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL3N0YXRpYy9qcy9pbmRleFwiKVxuLy8gQW5ndWxhciBmb3JtIGltcG9ydHNcbmJhc2VJbXBvcnRzLmFuZ3VsYXJGb3JtKClcblxuLy8gU3R1ZmZcbnJlcXVpcmUoJ25nLWluZmluaXRlLXNjcm9sbCcpXG5yZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3ZzR29vZ2xlQXV0b2NvbXBsZXRlL2Rpc3QvdnMtZ29vZ2xlLWF1dG9jb21wbGV0ZVwiKTtcbnJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnNHb29nbGVBdXRvY29tcGxldGUvZGlzdC92cy1hdXRvY29tcGxldGUtdmFsaWRhdG9yXCIpO1xuXG4vLyBJbml0IEFuZ3VsYXIgQVBQXG52YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ2Rhc2hib2FyZCcsIFtcbiAgICAndWkuYm9vdHN0cmFwJywgJ3RvYXN0cicsICd1aS5zZWxlY3QnLCAnbmdTYW5pdGl6ZScsICduZ0FuaW1hdGUnLCdtZ2NyZWEubmdTdHJhcCcsICdpbmZpbml0ZS1zY3JvbGwnLCAndnNHb29nbGVBdXRvY29tcGxldGUnLCAnbmdNYXAnXG5dKVxuICAgIC5jb25maWcoWyckaW50ZXJwb2xhdGVQcm92aWRlcicsIGZ1bmN0aW9uKCRpbnRlcnBvbGF0ZVByb3ZpZGVyKSB7XG4gICAgICAgICAgICAkaW50ZXJwb2xhdGVQcm92aWRlci5zdGFydFN5bWJvbCgneyQnKTtcbiAgICAgICAgICAgICRpbnRlcnBvbGF0ZVByb3ZpZGVyLmVuZFN5bWJvbCgnJH0nKTtcbiAgICB9XSlcbiAgICAuY29uZmlnKFsnJGh0dHBQcm92aWRlcicsIGZ1bmN0aW9uKCRodHRwUHJvdmlkZXIpIHtcbiAgICAgICAgJGh0dHBQcm92aWRlci5kZWZhdWx0cy54c3JmQ29va2llTmFtZSA9ICdjc3JmdG9rZW4nO1xuICAgICAgICAkaHR0cFByb3ZpZGVyLmRlZmF1bHRzLnhzcmZIZWFkZXJOYW1lID0gJ1gtQ1NSRlRva2VuJztcbiAgICB9XSlcbiAgICAuY29uZmlnKFsnJHFQcm92aWRlcicsIGZ1bmN0aW9uICgkcVByb3ZpZGVyKSB7JHFQcm92aWRlci5lcnJvck9uVW5oYW5kbGVkUmVqZWN0aW9ucyhmYWxzZSk7fV0pO1xuXG4vLyBSZXF1aXJlIGJhc2UgYW5ndWxhciBjb21wb25lbmV0c1xuYmFzZUltcG9ydHMuYW5ndWxhckJhc2UoYXBwKVxuICAgIC5kaXJlY3RpdmVzKGFwcClcbiAgICAuZGF0YVZpekRpcmVjdGl2ZXMoYXBwKVxuXG5cbmFwcC5mYWN0b3J5KCdVc2VyU2VhcmNoRmFjdG9yeScsIHJlcXVpcmUoJy4vZmFjdG9yaWVzL1VzZXJTZWFyY2hGYWN0b3J5JykuZGVmYXVsdCApXG5hcHAuY29udHJvbGxlcignbGFuZGluZ0NvbnRyb2xsZXInLCByZXF1aXJlKCcuL2NvbnRyb2xsZXJzL2xhbmRpbmcuY29udHJvbGxlcicpLmRlZmF1bHQgKVxuYXBwLmNvbnRyb2xsZXIoJ2Rhc2hib2FyZENvbnRyb2xsZXInLCByZXF1aXJlKCcuL2NvbnRyb2xsZXJzL2Rhc2hib2FyZC5jb250cm9sbGVyJykuZGVmYXVsdCApXG5hcHAuY29udHJvbGxlcignaW5zaWdodENvbnRyb2xsZXInLCByZXF1aXJlKCcuL2NvbnRyb2xsZXJzL2luc2lnaHQuY29udHJvbGxlcicpLmRlZmF1bHQgKVxuYXBwLmNvbnRyb2xsZXIoJ29uYm9hcmRpbmdDb250cm9sbGVyJywgcmVxdWlyZSgnLi9jb250cm9sbGVycy9vbmJvYXJkaW5nLmNvbnRyb2xsZXInKS5kZWZhdWx0IClcbmFwcC5jb250cm9sbGVyKCd0aGVtZXNDb250cm9sbGVyJywgcmVxdWlyZSgnLi9jb250cm9sbGVycy90aGVtZXMuY29udHJvbGxlcicpLmRlZmF1bHQgKVxuYXBwLmNvbnRyb2xsZXIoJ2V2ZW50c0NvbnRyb2xsZXInLCByZXF1aXJlKCcuL2NvbnRyb2xsZXJzL2V2ZW50cy5jb250cm9sbGVyJykuZGVmYXVsdCApXG5hcHAuY29udHJvbGxlcignc2VhcmNoQ29udHJvbGxlcicsIHJlcXVpcmUoJy4vY29udHJvbGxlcnMvc2VhcmNobWVtYmVycy5jb250cm9sbGVyJykuZGVmYXVsdCApXG5hcHAuZGlyZWN0aXZlKCd1c2VyU3RvcmllcycsIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy9Vc2VyU3Rvcmllcy5kaXJlY3RpdmUnKS5kZWZhdWx0IClcblxuYXBwLmRpcmVjdGl2ZSgnY2hhbGxlbmdlTGlzdCcsIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy9DaGFsbGVuZ2VMaXN0JykuZGVmYXVsdCApXG5hcHAuZGlyZWN0aXZlKCdjaGFsbGVuZ2UnLCByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvQ2hhbGxlbmdlJykuZGVmYXVsdCApXG5cbmFwcC5kaXJlY3RpdmUoJ3Byb2plY3REZXRhaWwnLCByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvUHJvamVjdERldGFpbCcpLmRlZmF1bHQgKVxuYXBwLmRpcmVjdGl2ZSgncHJvamVjdExpc3QnLCByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvUHJvamVjdExpc3QnKS5kZWZhdWx0IClcbmFwcC5kaXJlY3RpdmUoJ3Byb2plY3QnLCByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvUHJvamVjdCcpLmRlZmF1bHQgKVxuXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBkYXNoYm9hcmQvc3RhdGljL2pzL2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFEQTtBQUNBOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 314:
/* no static exports found */
/* all exports used */
/*!*****************************************************************!*\
  !*** ./dashboard/static/js/controllers/dashboard.controller.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Created by andreafspeziale on 06/07/17.\n */\n\nexports.default = ['$scope', '$http', function ($scope, $http) {\n\n    // $scope.get_om_events = function(){\n    //     $http({\n    //         'method': 'GET',\n    //         'url': '/api/v1.1/get_om_events'\n    //     })\n    // };\n    //\n    // $scope.get_om_events()\n\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvY29udHJvbGxlcnMvZGFzaGJvYXJkLmNvbnRyb2xsZXIuanM/M2U3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgYW5kcmVhZnNwZXppYWxlIG9uIDA2LzA3LzE3LlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IFsgJyRzY29wZScsICckaHR0cCcsIGZ1bmN0aW9uICgkc2NvcGUsICRodHRwKSB7XG4gICAgXG4gICAgLy8gJHNjb3BlLmdldF9vbV9ldmVudHMgPSBmdW5jdGlvbigpe1xuICAgIC8vICAgICAkaHR0cCh7XG4gICAgLy8gICAgICAgICAnbWV0aG9kJzogJ0dFVCcsXG4gICAgLy8gICAgICAgICAndXJsJzogJy9hcGkvdjEuMS9nZXRfb21fZXZlbnRzJ1xuICAgIC8vICAgICB9KVxuICAgIC8vIH07XG4gICAgLy9cbiAgICAvLyAkc2NvcGUuZ2V0X29tX2V2ZW50cygpXG5cbn1dXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGRhc2hib2FyZC9zdGF0aWMvanMvY29udHJvbGxlcnMvZGFzaGJvYXJkLmNvbnRyb2xsZXIuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 315:
/* no static exports found */
/* all exports used */
/*!**************************************************************!*\
  !*** ./dashboard/static/js/controllers/events.controller.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = ['$scope', '$http', function ($scope, $http) {\n\n    $scope.user_country = {\n        short_code: '',\n        label: ''\n    };\n\n    $scope.countries = [{\n        label: 'Italy',\n        short_code: 'it'\n    }, {\n        label: 'United Kingdom',\n        short_code: 'gb'\n    }, {\n        label: 'Slovakia',\n        short_code: 'sk'\n    }, {\n        label: 'Spain',\n        short_code: 'es'\n    }, {\n        label: 'All over the World',\n        short_code: ''\n    }];\n\n    var eventModel = {\n        theme: null,\n        cursor: 0,\n        user_location: null,\n\n        prev_cursor: null,\n        next_cursor: null,\n\n        top: $(window).scrollTop(),\n        data: [],\n\n        prev: function prev() {\n            eventModel.get_events(eventModel.theme, eventModel.user_location, eventModel.prev_cursor);\n        },\n        next: function next() {\n            eventModel.get_events(eventModel.theme, eventModel.user_location, eventModel.next_cursor);\n        },\n\n        get_events: function get_events() {\n            var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : eventModel.theme;\n            var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : eventModel.user_location;\n            var cursor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : eventModel.cursor;\n\n            var params = '';\n            if (location !== '') params = theme + '/' + location + '/' + cursor + '/';else params = theme + '/' + cursor + '/';\n\n            $http.get('/api/v1.3/events/' + params).then(function (response) {\n                eventModel.prev_cursor = _.get(response, 'data.result.previous_cursor');\n                eventModel.next_cursor = _.get(response, 'data.result.next_cursor');\n                eventModel.data = response.data.result.events;\n            }, function (err) {\n                console.log('ERROR:', err);\n            });\n            return eventModel;\n        }\n    };\n\n    $scope.EventModel = eventModel;\n\n    $scope.$watch('[topic_id,user_country.short_code,user_country.label]', function (newValue, oldValue) {\n        if (_.filter($scope.countries, { short_code: newValue[1] }).length == 0) $scope.countries.unshift({ label: newValue[2], short_code: newValue[1] });\n        $scope.EventModel.theme = newValue[0];\n        $scope.EventModel.user_location = newValue[1];\n        $scope.EventModel.get_events(newValue[0], newValue[1], -1);\n    });\n}]; /**\n     * Created by andreafspeziale on 24/05/17.\n     *///# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvY29udHJvbGxlcnMvZXZlbnRzLmNvbnRyb2xsZXIuanM/NWUzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgYW5kcmVhZnNwZXppYWxlIG9uIDI0LzA1LzE3LlxuICovXG5pbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCdcbmV4cG9ydCBkZWZhdWx0IFsgJyRzY29wZScsICckaHR0cCcsIGZ1bmN0aW9uICgkc2NvcGUsJGh0dHApIHtcblxuICAgICRzY29wZS51c2VyX2NvdW50cnkgPSB7XG4gICAgICAgIHNob3J0X2NvZGU6ICcnLFxuICAgICAgICBsYWJlbDogJydcbiAgICB9O1xuXG4gICAgJHNjb3BlLmNvdW50cmllcyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6ICdJdGFseScsXG4gICAgICAgICAgICBzaG9ydF9jb2RlOiAnaXQnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiAnVW5pdGVkIEtpbmdkb20nLFxuICAgICAgICAgICAgc2hvcnRfY29kZTogJ2diJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogJ1Nsb3Zha2lhJyxcbiAgICAgICAgICAgIHNob3J0X2NvZGU6ICdzaydcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6ICdTcGFpbicsXG4gICAgICAgICAgICBzaG9ydF9jb2RlOiAnZXMnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiAnQWxsIG92ZXIgdGhlIFdvcmxkJyxcbiAgICAgICAgICAgIHNob3J0X2NvZGU6ICcnXG4gICAgICAgIH1cbiAgICBdO1xuXG4gICAgbGV0IGV2ZW50TW9kZWwgPSB7XG4gICAgICAgIHRoZW1lIDogbnVsbCxcbiAgICAgICAgY3Vyc29yOiAwLFxuICAgICAgICB1c2VyX2xvY2F0aW9uOiBudWxsLFxuICAgICAgICBcbiAgICAgICAgcHJldl9jdXJzb3IgOiBudWxsLFxuICAgICAgICBuZXh0X2N1cnNvciA6IG51bGwsXG4gICAgICAgIFxuICAgICAgICB0b3A6ICAkKHdpbmRvdykuc2Nyb2xsVG9wKCksXG4gICAgICAgIGRhdGEgOiBbXSxcbiAgICAgICAgXG4gICAgICAgIHByZXYgOiBmdW5jdGlvbiAoKSB7IGV2ZW50TW9kZWwuZ2V0X2V2ZW50cyhldmVudE1vZGVsLnRoZW1lLCBldmVudE1vZGVsLnVzZXJfbG9jYXRpb24sIGV2ZW50TW9kZWwucHJldl9jdXJzb3IpIH0sXG4gICAgICAgIG5leHQgOmZ1bmN0aW9uICgpIHsgZXZlbnRNb2RlbC5nZXRfZXZlbnRzKGV2ZW50TW9kZWwudGhlbWUsIGV2ZW50TW9kZWwudXNlcl9sb2NhdGlvbiwgZXZlbnRNb2RlbC5uZXh0X2N1cnNvcikgfSxcbiAgICAgICAgXG4gICAgICAgIGdldF9ldmVudHMgOiBmdW5jdGlvbih0aGVtZT1ldmVudE1vZGVsLnRoZW1lLCBsb2NhdGlvbj1ldmVudE1vZGVsLnVzZXJfbG9jYXRpb24sIGN1cnNvcj1ldmVudE1vZGVsLmN1cnNvcil7XG4gICAgICAgICAgICBsZXQgcGFyYW1zID0gJydcbiAgICAgICAgICAgIGlmIChsb2NhdGlvbiE9PScnKSBwYXJhbXMgPSB0aGVtZSArICcvJyArIGxvY2F0aW9uICsgJy8nKyBjdXJzb3IgKyAnLydcbiAgICAgICAgICAgIGVsc2UgcGFyYW1zID0gdGhlbWUgKyAnLycgKyBjdXJzb3IgKyAnLydcblxuICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3YxLjMvZXZlbnRzLycgKyBwYXJhbXMpXG4gICAgICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRNb2RlbC5wcmV2X2N1cnNvciA9IF8uZ2V0KHJlc3BvbnNlLCAnZGF0YS5yZXN1bHQucHJldmlvdXNfY3Vyc29yJylcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50TW9kZWwubmV4dF9jdXJzb3IgPSBfLmdldChyZXNwb25zZSwgJ2RhdGEucmVzdWx0Lm5leHRfY3Vyc29yJylcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50TW9kZWwuZGF0YSA9IHJlc3BvbnNlLmRhdGEucmVzdWx0LmV2ZW50c1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAoZXJyKT0+eyBjb25zb2xlLmxvZygnRVJST1I6JywgZXJyKTsgfVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgIHJldHVybiBldmVudE1vZGVsXG4gICAgICAgIH0sXG4gICAgfVxuICAgIFxuICAgICRzY29wZS5FdmVudE1vZGVsID0gZXZlbnRNb2RlbFxuXG4gICAgJHNjb3BlLiR3YXRjaCgnW3RvcGljX2lkLHVzZXJfY291bnRyeS5zaG9ydF9jb2RlLHVzZXJfY291bnRyeS5sYWJlbF0nLCBmdW5jdGlvbiAobmV3VmFsdWUsIG9sZFZhbHVlKSB7XG4gICAgICAgIGlmKF8uZmlsdGVyKCRzY29wZS5jb3VudHJpZXMsIHsgc2hvcnRfY29kZTogbmV3VmFsdWVbMV0gfSkubGVuZ3RoID09IDApICRzY29wZS5jb3VudHJpZXMudW5zaGlmdCggeyBsYWJlbDogbmV3VmFsdWVbMl0sICBzaG9ydF9jb2RlOiBuZXdWYWx1ZVsxXX0gKVxuICAgICAgICAkc2NvcGUuRXZlbnRNb2RlbC50aGVtZSA9IG5ld1ZhbHVlWzBdXG4gICAgICAgICRzY29wZS5FdmVudE1vZGVsLnVzZXJfbG9jYXRpb24gPSBuZXdWYWx1ZVsxXVxuICAgICAgICAkc2NvcGUuRXZlbnRNb2RlbC5nZXRfZXZlbnRzKG5ld1ZhbHVlWzBdLCBuZXdWYWx1ZVsxXSwgLTEpXG4gICAgfSlcblxufV1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gZGFzaGJvYXJkL3N0YXRpYy9qcy9jb250cm9sbGVycy9ldmVudHMuY29udHJvbGxlci5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0E7QUFDQTtBQURBO0FBQ0E7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBRkE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUE3QkE7QUFDQTtBQStCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 316:
/* no static exports found */
/* all exports used */
/*!***************************************************************!*\
  !*** ./dashboard/static/js/controllers/insight.controller.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Created by andreafspeziale on 06/07/17.\n */\n\nexports.default = ['$scope', '$http', '$sce', function ($scope, $http, $sce) {\n\n    $scope.show_canvas = true;\n    $scope.no_data_message = '';\n\n    $scope.canvas_info = {\n        base_url: '',\n        user_profile_twitter_username: '',\n        url: ''\n    };\n\n    $scope.checkCanvasData = function (canvas_url, username) {\n        $http.get('api/v1.2/check_canvas/' + username).then(function (response) {\n            $scope.show_canvas = response.data.result;\n            if (!response.data.result) $scope.no_data_message = 'No data';\n            $scope.canvas_info.user_profile_twitter_username = username;\n            $scope.canvas_info.url = $sce.trustAsResourceUrl(canvas_url + username);\n        }, function (err) {\n            $scope.show_canvas = false;\n        });\n    };\n\n    $scope.updateUsername = function (username) {\n        if (username != '') {\n            $scope.canvas_info.user_profile_twitter_username = username;\n            $scope.no_data_message = '';\n        }\n    };\n\n    $scope.$watch('[canvas_info.base_url,canvas_info.user_profile_twitter_username]', function (newValue, oldValue) {\n        $scope.checkCanvasData(newValue[0], newValue[1]);\n    });\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvY29udHJvbGxlcnMvaW5zaWdodC5jb250cm9sbGVyLmpzPzA4ODAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGFuZHJlYWZzcGV6aWFsZSBvbiAwNi8wNy8xNy5cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBbICckc2NvcGUnLCAnJGh0dHAnLCAnJHNjZScsIGZ1bmN0aW9uICgkc2NvcGUsICRodHRwLCAkc2NlKSB7XG5cbiAgICAkc2NvcGUuc2hvd19jYW52YXMgPSB0cnVlXG4gICAgJHNjb3BlLm5vX2RhdGFfbWVzc2FnZSA9ICcnXG5cbiAgICAkc2NvcGUuY2FudmFzX2luZm8gPSB7XG4gICAgICAgIGJhc2VfdXJsOiAnJyxcbiAgICAgICAgdXNlcl9wcm9maWxlX3R3aXR0ZXJfdXNlcm5hbWU6ICcnLFxuICAgICAgICB1cmw6ICcnXG4gICAgfVxuXG4gICAgJHNjb3BlLmNoZWNrQ2FudmFzRGF0YSA9IChjYW52YXNfdXJsLCB1c2VybmFtZSkgPT4ge1xuICAgICAgICAkaHR0cC5nZXQoJ2FwaS92MS4yL2NoZWNrX2NhbnZhcy8nICsgdXNlcm5hbWUpLnRoZW4oXG4gICAgICAgICAgICBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICRzY29wZS5zaG93X2NhbnZhcyA9IHJlc3BvbnNlLmRhdGEucmVzdWx0XG4gICAgICAgICAgICAgICAgaWYgKCAhcmVzcG9uc2UuZGF0YS5yZXN1bHQgKSAkc2NvcGUubm9fZGF0YV9tZXNzYWdlID0gJ05vIGRhdGEnXG4gICAgICAgICAgICAgICAgJHNjb3BlLmNhbnZhc19pbmZvLnVzZXJfcHJvZmlsZV90d2l0dGVyX3VzZXJuYW1lID0gdXNlcm5hbWVcbiAgICAgICAgICAgICAgICAkc2NvcGUuY2FudmFzX2luZm8udXJsID0gJHNjZS50cnVzdEFzUmVzb3VyY2VVcmwoY2FudmFzX3VybCt1c2VybmFtZSlcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgICAgICRzY29wZS5zaG93X2NhbnZhcyA9IGZhbHNlXG4gICAgICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAkc2NvcGUudXBkYXRlVXNlcm5hbWUgPSAodXNlcm5hbWUpID0+IHtcbiAgICAgICAgaWYodXNlcm5hbWUhPScnKSB7XG4gICAgICAgICAgICAkc2NvcGUuY2FudmFzX2luZm8udXNlcl9wcm9maWxlX3R3aXR0ZXJfdXNlcm5hbWUgPSB1c2VybmFtZVxuICAgICAgICAgICAgJHNjb3BlLm5vX2RhdGFfbWVzc2FnZSA9ICcnXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuJHdhdGNoKCdbY2FudmFzX2luZm8uYmFzZV91cmwsY2FudmFzX2luZm8udXNlcl9wcm9maWxlX3R3aXR0ZXJfdXNlcm5hbWVdJywgZnVuY3Rpb24gKG5ld1ZhbHVlLCBvbGRWYWx1ZSkge1xuICAgICAgICAkc2NvcGUuY2hlY2tDYW52YXNEYXRhKG5ld1ZhbHVlWzBdLCBuZXdWYWx1ZVsxXSlcbiAgICB9KVxuXG59XVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBkYXNoYm9hcmQvc3RhdGljL2pzL2NvbnRyb2xsZXJzL2luc2lnaHQuY29udHJvbGxlci5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBQ0E7QUFLQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 317:
/* no static exports found */
/* all exports used */
/*!***************************************************************!*\
  !*** ./dashboard/static/js/controllers/landing.controller.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _d = __webpack_require__(/*! d3 */ 9);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = ['$scope', '$uibModal', '$http', function ($scope, $uibModal, $http) {\n\n    var root_node_size = 30;\n    var child_node_size = 20;\n    var data_nodes = [{ id: 0, amount: root_node_size, name: \"ARDUINO\" }, { id: 1, amount: root_node_size, name: \"3D PRINTER\" }, { id: 2, amount: root_node_size, name: \"RASPBERRY Pi\" }, { id: 3, amount: child_node_size, name: \"Raspberry_Pi\" }, { id: 4, amount: child_node_size, name: \"arduino\" }, { id: 5, amount: child_node_size, name: \"make\" }, { id: 6, amount: child_node_size, name: \"3dprintindustry\" }, { id: 7, amount: child_node_size, name: \"3DPrintGirl\" }, { id: 8, amount: child_node_size, name: \"3dersorg\" }, { id: 9, amount: child_node_size, name: \"htpc_guides\" }, { id: 10, amount: child_node_size, name: \"hackaday\" }];\n    var data_links = [{ 'source': 0, 'target': 1 }, { 'source': 0, 'target': 2 }, { 'source': 1, 'target': 2 }, { 'source': 0, 'target': 3 }, { 'source': 0, 'target': 4 }, { 'source': 0, 'target': 5 }, { 'source': 1, 'target': 6 }, { 'source': 1, 'target': 7 }, { 'source': 1, 'target': 8 }, { 'source': 2, 'target': 3 }, { 'source': 2, 'target': 9 }, { 'source': 2, 'target': 10 }];\n    createNetwork(data_links, '#theme_graph', '#DB4348', data_nodes);\n}]; /**\n     * Created by andreafspeziale on 03/05/17.\n     */\n\nfunction createNetwork(data_links, svg_id, c, data_nodes) {\n    var svg = d3.select(svg_id);\n\n    var simulation = d3.forceSimulation(data_nodes).force('link', d3.forceLink(data_links).distance(50).strength(0.01)).force('charge', d3.forceManyBody()).force('center', d3.forceCenter(300, 300)).on('tick', tick);\n\n    var links = svg.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(data_links).enter().append('line').style('stroke', '#7A7378');\n\n    var nodes = svg.selectAll(\".node\").data(data_nodes).enter().append(\"g\").attr(\"class\", \"node\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on('mouseover', function (d) {\n        d3.select(this).select('text').transition().duration(200).attr('opacity', 1);\n    }).on(\"mouseout\", function (d) {\n        d3.select(this).select('text').transition().duration(200).attr('opacity', function (d) {\n            return get_opacity_for_node(d);\n        });\n    });\n\n    var node = nodes.append('circle').style('fill', function (d) {\n        if (is_source_node(d)) {\n            return c;\n        } else {\n            return '#1CA4A4';\n        }\n    }).attr('r', function (d) {\n        return d.amount;\n    });\n\n    var nodeText = nodes.append(\"text\").attr('opacity', function (d) {\n        return get_opacity_for_node(d);\n    }).text(function (d) {\n        return d.name;\n    });\n\n    function is_source_node(d) {\n        return d.id == 0 || d.id == 1 || d.id == 2;\n    }\n\n    function get_opacity_for_node(d) {\n        if (is_source_node(d)) {\n            return 1;\n        }\n        return 0;\n    }\n\n    function tick() {\n        node.attr('cx', function (d) {\n            return d.x;\n        }).attr('cy', function (d) {\n            return d.y;\n        });\n        links.attr('x1', function (d) {\n            return d.source.x;\n        }).attr('y1', function (d) {\n            return d.source.y;\n        }).attr('x2', function (d) {\n            return d.target.x;\n        }).attr('y2', function (d) {\n            return d.target.y;\n        });\n        nodeText.attr('x', function (d) {\n            return d.x;\n        }).attr('y', function (d) {\n            return d.y;\n        });\n    }\n\n    function dragstarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n    }\n\n    function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n    }\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvY29udHJvbGxlcnMvbGFuZGluZy5jb250cm9sbGVyLmpzPzdlZDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGFuZHJlYWZzcGV6aWFsZSBvbiAwMy8wNS8xNy5cbiAqL1xuaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnO1xuZXhwb3J0IGRlZmF1bHQgWyAnJHNjb3BlJywnJHVpYk1vZGFsJywnJGh0dHAnLCBmdW5jdGlvbiAoJHNjb3BlLCR1aWJNb2RhbCwkaHR0cCkge1xuXG4gICAgbGV0IHJvb3Rfbm9kZV9zaXplID0gMzA7XG4gICAgbGV0IGNoaWxkX25vZGVfc2l6ZSA9IDIwO1xuICAgIGxldCBkYXRhX25vZGVzID0gW3tpZDogMCwgYW1vdW50OnJvb3Rfbm9kZV9zaXplLCBuYW1lOlwiQVJEVUlOT1wifSxcbiAgICAgICAge2lkOiAxLCBhbW91bnQ6IHJvb3Rfbm9kZV9zaXplLCBuYW1lOlwiM0QgUFJJTlRFUlwifSxcbiAgICAgICAge2lkOiAyLCBhbW91bnQ6IHJvb3Rfbm9kZV9zaXplLCBuYW1lOlwiUkFTUEJFUlJZIFBpXCJ9LFxuICAgICAgICB7aWQ6IDMsIGFtb3VudDogY2hpbGRfbm9kZV9zaXplLCBuYW1lOlwiUmFzcGJlcnJ5X1BpXCJ9LFxuICAgICAgICB7aWQ6IDQsIGFtb3VudDogY2hpbGRfbm9kZV9zaXplLCBuYW1lOlwiYXJkdWlub1wifSxcbiAgICAgICAge2lkOiA1LCBhbW91bnQ6IGNoaWxkX25vZGVfc2l6ZSwgbmFtZTpcIm1ha2VcIn0sXG4gICAgICAgIHtpZDogNiwgYW1vdW50OiBjaGlsZF9ub2RlX3NpemUsIG5hbWU6XCIzZHByaW50aW5kdXN0cnlcIn0sXG4gICAgICAgIHtpZDogNywgYW1vdW50OiBjaGlsZF9ub2RlX3NpemUsIG5hbWU6XCIzRFByaW50R2lybFwifSxcbiAgICAgICAge2lkOiA4LCBhbW91bnQ6IGNoaWxkX25vZGVfc2l6ZSwgbmFtZTpcIjNkZXJzb3JnXCJ9LFxuICAgICAgICB7aWQ6IDksIGFtb3VudDogY2hpbGRfbm9kZV9zaXplLCBuYW1lOlwiaHRwY19ndWlkZXNcIn0sXG4gICAgICAgIHtpZDogMTAsIGFtb3VudDogY2hpbGRfbm9kZV9zaXplLCBuYW1lOlwiaGFja2FkYXlcIn0sXG4gICAgXTtcbiAgICBsZXQgZGF0YV9saW5rcyA9IFt7J3NvdXJjZSc6IDAsICd0YXJnZXQnOiAxfSxcbiAgICAgICAgeydzb3VyY2UnOiAwLCAndGFyZ2V0JzogMn0sXG4gICAgICAgIHsnc291cmNlJzogMSwgJ3RhcmdldCc6IDJ9LFxuICAgICAgICB7J3NvdXJjZSc6IDAsICd0YXJnZXQnOiAzfSxcbiAgICAgICAgeydzb3VyY2UnOiAwLCAndGFyZ2V0JzogNH0sXG4gICAgICAgIHsnc291cmNlJzogMCwgJ3RhcmdldCc6IDV9LFxuICAgICAgICB7J3NvdXJjZSc6IDEsICd0YXJnZXQnOiA2fSxcbiAgICAgICAgeydzb3VyY2UnOiAxLCAndGFyZ2V0JzogN30sXG4gICAgICAgIHsnc291cmNlJzogMSwgJ3RhcmdldCc6IDh9LFxuICAgICAgICB7J3NvdXJjZSc6IDIsICd0YXJnZXQnOiAzfSxcbiAgICAgICAgeydzb3VyY2UnOiAyLCAndGFyZ2V0JzogOX0sXG4gICAgICAgIHsnc291cmNlJzogMiwgJ3RhcmdldCc6IDEwfV07XG4gICAgY3JlYXRlTmV0d29yayhkYXRhX2xpbmtzLCAnI3RoZW1lX2dyYXBoJywgJyNEQjQzNDgnLCBkYXRhX25vZGVzKVxuXG59XVxuXG5mdW5jdGlvbiBjcmVhdGVOZXR3b3JrKGRhdGFfbGlua3MsIHN2Z19pZCwgYywgZGF0YV9ub2Rlcyl7XG4gICAgbGV0IHN2ZyA9IGQzLnNlbGVjdChzdmdfaWQpO1xuXG4gICAgbGV0IHNpbXVsYXRpb24gPSBkMy5mb3JjZVNpbXVsYXRpb24oZGF0YV9ub2RlcylcbiAgICAgICAgLmZvcmNlKCdsaW5rJywgZDMuZm9yY2VMaW5rKGRhdGFfbGlua3MpLmRpc3RhbmNlKDUwKS5zdHJlbmd0aCgwLjAxKSlcbiAgICAgICAgLmZvcmNlKCdjaGFyZ2UnLCBkMy5mb3JjZU1hbnlCb2R5KCkpXG4gICAgICAgIC5mb3JjZSgnY2VudGVyJywgZDMuZm9yY2VDZW50ZXIoMzAwLCAzMDApKVxuICAgICAgICAub24oJ3RpY2snLCB0aWNrKTtcblxuICAgIGxldCBsaW5rcyA9IHN2Zy5hcHBlbmQoXCJnXCIpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJsaW5rc1wiKVxuICAgICAgICAuc2VsZWN0QWxsKFwibGluZVwiKVxuICAgICAgICAuZGF0YShkYXRhX2xpbmtzKVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKCdsaW5lJylcbiAgICAgICAgLnN0eWxlKCdzdHJva2UnLCAnIzdBNzM3OCcpO1xuXG4gICAgbGV0IG5vZGVzID0gc3ZnLnNlbGVjdEFsbChcIi5ub2RlXCIpXG4gICAgICAgIC5kYXRhKGRhdGFfbm9kZXMpXG4gICAgICAgIC5lbnRlcigpLmFwcGVuZChcImdcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVcIilcbiAgICAgICAgLmNhbGwoZDMuZHJhZygpXG4gICAgICAgICAgICAub24oXCJzdGFydFwiLCBkcmFnc3RhcnRlZClcbiAgICAgICAgICAgIC5vbihcImRyYWdcIiwgZHJhZ2dlZClcbiAgICAgICAgICAgIC5vbihcImVuZFwiLCBkcmFnZW5kZWQpKVxuICAgICAgICAub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uKGQpe1xuICAgICAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnNlbGVjdCgndGV4dCcpXG4gICAgICAgICAgICAgICAgLnRyYW5zaXRpb24oKVxuICAgICAgICAgICAgICAgIC5kdXJhdGlvbigyMDApXG4gICAgICAgICAgICAgICAgLmF0dHIoJ29wYWNpdHknLCAxKVxuICAgICAgICB9KVxuICAgICAgICAub24oXCJtb3VzZW91dFwiLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICBkMy5zZWxlY3QodGhpcykuc2VsZWN0KCd0ZXh0JylcbiAgICAgICAgICAgICAgICAudHJhbnNpdGlvbigpXG4gICAgICAgICAgICAgICAgLmR1cmF0aW9uKDIwMClcbiAgICAgICAgICAgICAgICAuYXR0cignb3BhY2l0eScsIGZ1bmN0aW9uKGQpe1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2V0X29wYWNpdHlfZm9yX25vZGUoZCk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG5cbiAgICBsZXQgbm9kZSA9IG5vZGVzLmFwcGVuZCgnY2lyY2xlJylcbiAgICAgICAgLnN0eWxlKCdmaWxsJywgZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgIGlmKGlzX3NvdXJjZV9ub2RlKGQpKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gYztcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgIHJldHVybiAnIzFDQTRBNCc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKCdyJywgKGQpID0+IGQuYW1vdW50KTtcblxuICAgIGxldCBub2RlVGV4dCA9IG5vZGVzLmFwcGVuZChcInRleHRcIilcbiAgICAgICAgLmF0dHIoJ29wYWNpdHknLCBmdW5jdGlvbihkKXtcbiAgICAgICAgICAgIHJldHVybiBnZXRfb3BhY2l0eV9mb3Jfbm9kZShkKTtcbiAgICAgICAgfSlcbiAgICAgICAgLnRleHQoKGQpID0+IGQubmFtZSk7XG5cbiAgICBmdW5jdGlvbiBpc19zb3VyY2Vfbm9kZShkKXtcbiAgICAgICAgcmV0dXJuIGQuaWQgPT0gMCB8fCBkLmlkID09IDEgfHwgZC5pZCA9PSAyXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0X29wYWNpdHlfZm9yX25vZGUoZCl7XG4gICAgICAgIGlmKGlzX3NvdXJjZV9ub2RlKGQpKXtcbiAgICAgICAgICAgIHJldHVybiAxXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDBcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0aWNrICgpIHtcbiAgICAgICAgbm9kZS5hdHRyKCdjeCcsIChkKSA9PiBkLngpXG4gICAgICAgICAgICAuYXR0cignY3knLCAoZCkgPT4gZC55KTtcbiAgICAgICAgbGlua3MuYXR0cigneDEnLCAoZCkgPT4gZC5zb3VyY2UueClcbiAgICAgICAgICAgIC5hdHRyKCd5MScsIChkKSA9PiBkLnNvdXJjZS55KVxuICAgICAgICAgICAgLmF0dHIoJ3gyJywgKGQpID0+IGQudGFyZ2V0LngpXG4gICAgICAgICAgICAuYXR0cigneTInLCAoZCkgPT4gZC50YXJnZXQueSk7XG4gICAgICAgIG5vZGVUZXh0LmF0dHIoJ3gnLCAoZCkgPT4gZC54KVxuICAgICAgICAgICAgLmF0dHIoJ3knLCAoZCkgPT4gZC55KVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRyYWdzdGFydGVkKGQpIHtcbiAgICAgICAgaWYgKCFkMy5ldmVudC5hY3RpdmUpIHNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMC4zKS5yZXN0YXJ0KCk7XG4gICAgICAgIGQuZnggPSBkLng7XG4gICAgICAgIGQuZnkgPSBkLnk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZHJhZ2dlZChkKSB7XG4gICAgICAgIGQuZnggPSBkMy5ldmVudC54O1xuICAgICAgICBkLmZ5ID0gZDMuZXZlbnQueTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBkcmFnZW5kZWQoZCkge1xuICAgICAgICBpZiAoIWQzLmV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwKTtcbiAgICAgICAgZC5meCA9IG51bGw7XG4gICAgICAgIGQuZnkgPSBudWxsO1xuICAgIH1cblxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBkYXNoYm9hcmQvc3RhdGljL2pzL2NvbnRyb2xsZXJzL2xhbmRpbmcuY29udHJvbGxlci5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0E7QUFDQTtBQURBO0FBQ0E7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFZQTtBQVlBO0FBRUE7Ozs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQU9BO0FBU0E7QUFJQTtBQUVBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 318:
/* no static exports found */
/* all exports used */
/*!******************************************************************!*\
  !*** ./dashboard/static/js/controllers/onboarding.controller.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = ['$scope', function ($scope) {\n\n    $scope._ = _;\n    $scope.city = null;\n\n    $scope.$watch('birthdate', function (a, b) {\n        return a === b && ($scope.birthdate = new Date(a));\n    });\n\n    $scope.altInputFormats = ['M!/d!/yyyy'];\n    $scope.dateOptions = {\n        formatYear: 'yy',\n        maxDate: new m().subtract(13, 'years'),\n        initDate: new Date(new m().subtract(13, 'years')),\n        startingDay: 1\n    };\n    $scope.datePopup = { opened: false };\n\n    $scope.openDatePopUp = function () {\n        return $scope.datePopup.opened = true;\n    };\n\n    $scope.profileImageUpload = function (n) {\n        return $('#profile-image-input').trigger('click');\n    };\n\n    $scope.checkSocialUrl = function (social) {\n        var url = social.link;\n        var name = social.name;\n\n        return name == 'twitter' || url.match(/http:\\/\\//) || url.match(/https:\\/\\//) || url.match(/www\\./) || url.match(/\\.com/) || url.match(/\\.it/) || url.match(/\\.org/) || url.match(/\\.net/);\n    };\n\n    $scope.addHttpToSocialUrl = function (social) {\n        var url = social.link;\n        var name = social.name;\n\n        if (name && name === 'twitter') if (!(url.match(/http:\\/\\//) || url.match(/https:\\/\\//))) return 'https://twitter.com/' + url;\n\n        if (!url.match(/http:\\/\\//) && !url.match(/https:\\/\\//)) url = 'https://' + url;\n        return url;\n    };\n\n    $scope.extractUserFromSocialUrl = function (social) {\n        var url = social.link;\n\n        if (url.match(/http:\\/\\//) || url.match(/https:\\/\\//)) url = url.replace('https://', '') && url.replace('http://', '');\n        if (url.match(/www\\./)) url = url.replace('www.', '');\n        if (url.match(/www\\./)) url = url.replace('www.', '');\n        if (url.match(/\\.com/)) url = url.replace('.com', '');\n        if (url.match(/\\.it/)) url = url.replace('.it', '');\n        if (url.match(/\\.org/)) url = url.replace('.org', '');\n        if (url.match(/\\.net/)) url = url.replace('.net', '');\n\n        var user = url.replace(/\\/$/, '').split('/').pop().trim();\n        return user !== '' ? user : url;\n    };\n}]; /**\n     * Created by andreafspeziale on 06/07/17.\n     *///# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvY29udHJvbGxlcnMvb25ib2FyZGluZy5jb250cm9sbGVyLmpzPzhjZGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGFuZHJlYWZzcGV6aWFsZSBvbiAwNi8wNy8xNy5cbiAqL1xuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnXG5cbmV4cG9ydCBkZWZhdWx0IFsgJyRzY29wZScsIGZ1bmN0aW9uICgkc2NvcGUpIHtcbiAgICBcbiAgICAkc2NvcGUuXyA9IF9cbiAgICAkc2NvcGUuY2l0eSA9IG51bGxcbiAgICBcbiAgICAkc2NvcGUuJHdhdGNoKCdiaXJ0aGRhdGUnLCAoYSxiKSA9PiBhPT09YiAmJiAoICRzY29wZS5iaXJ0aGRhdGUgPSBuZXcgRGF0ZShhKSApIClcbiAgICBcbiAgICAkc2NvcGUuYWx0SW5wdXRGb3JtYXRzID0gWydNIS9kIS95eXl5J107XG4gICAgJHNjb3BlLmRhdGVPcHRpb25zID0ge1xuICAgICAgICBmb3JtYXRZZWFyOiAneXknLFxuICAgICAgICBtYXhEYXRlOiBuZXcgbSgpLnN1YnRyYWN0KDEzLCAneWVhcnMnKSxcbiAgICAgICAgaW5pdERhdGU6IG5ldyBEYXRlKG5ldyBtKCkuc3VidHJhY3QoMTMsICd5ZWFycycpKSxcbiAgICAgICAgc3RhcnRpbmdEYXk6IDEsXG4gICAgfTtcbiAgICAkc2NvcGUuZGF0ZVBvcHVwID0ge29wZW5lZDogZmFsc2V9O1xuXG4gICAgJHNjb3BlLm9wZW5EYXRlUG9wVXAgPSAoKSA9PiAkc2NvcGUuZGF0ZVBvcHVwLm9wZW5lZCA9IHRydWVcblxuICAgICRzY29wZS5wcm9maWxlSW1hZ2VVcGxvYWQgPSBuPT4kKCcjcHJvZmlsZS1pbWFnZS1pbnB1dCcpLnRyaWdnZXIoJ2NsaWNrJylcbiAgICBcbiAgICAkc2NvcGUuY2hlY2tTb2NpYWxVcmw9KHNvY2lhbCk9PntcbiAgICAgICAgbGV0IHVybCA9IHNvY2lhbC5saW5rXG4gICAgICAgIGxldCBuYW1lID0gc29jaWFsLm5hbWVcbiAgICBcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIG5hbWUgPT0gJ3R3aXR0ZXInIHx8XG4gICAgICAgICAgICB1cmwubWF0Y2goL2h0dHA6XFwvXFwvLykgfHwgdXJsLm1hdGNoKC9odHRwczpcXC9cXC8vKSB8fFxuICAgICAgICAgICAgdXJsLm1hdGNoKC93d3dcXC4vKSB8fFxuICAgICAgICAgICAgdXJsLm1hdGNoKC9cXC5jb20vKSB8fFxuICAgICAgICAgICAgdXJsLm1hdGNoKC9cXC5pdC8pIHx8XG4gICAgICAgICAgICB1cmwubWF0Y2goL1xcLm9yZy8pIHx8XG4gICAgICAgICAgICB1cmwubWF0Y2goL1xcLm5ldC8pXG4gICAgICAgIClcbiAgICB9XG4gICAgXG4gICAgJHNjb3BlLmFkZEh0dHBUb1NvY2lhbFVybCA9KHNvY2lhbCk9PntcbiAgICAgICAgbGV0IHVybCA9IHNvY2lhbC5saW5rXG4gICAgICAgIGxldCBuYW1lID0gc29jaWFsLm5hbWVcblxuICAgICAgICBpZihuYW1lICYmIG5hbWUgPT09ICd0d2l0dGVyJykgaWYoISh1cmwubWF0Y2goL2h0dHA6XFwvXFwvLykgfHwgdXJsLm1hdGNoKC9odHRwczpcXC9cXC8vKSkgKSByZXR1cm4gYGh0dHBzOi8vdHdpdHRlci5jb20vJHt1cmx9YFxuXG4gICAgICAgIGlmKCAhdXJsLm1hdGNoKC9odHRwOlxcL1xcLy8pICYmICF1cmwubWF0Y2goL2h0dHBzOlxcL1xcLy8pICkgdXJsID0gJ2h0dHBzOi8vJyt1cmw7XG4gICAgICAgIHJldHVybiB1cmxcbiAgICAgICAgXG4gICAgfVxuICAgIFxuICAgICRzY29wZS5leHRyYWN0VXNlckZyb21Tb2NpYWxVcmwgPShzb2NpYWwpPT57XG4gICAgICAgIGxldCB1cmwgPSBzb2NpYWwubGlua1xuICAgICAgICBcbiAgICAgICAgaWYoIHVybC5tYXRjaCgvaHR0cDpcXC9cXC8vKSB8fCB1cmwubWF0Y2goL2h0dHBzOlxcL1xcLy8pICkgdXJsID0gdXJsLnJlcGxhY2UoJ2h0dHBzOi8vJywgJycpICYmIHVybC5yZXBsYWNlKCdodHRwOi8vJywgJycpXG4gICAgICAgIGlmKCB1cmwubWF0Y2goL3d3d1xcLi8pKSB1cmwgPSB1cmwucmVwbGFjZSgnd3d3LicsICcnKVxuICAgICAgICBpZiggdXJsLm1hdGNoKC93d3dcXC4vKSkgdXJsID0gdXJsLnJlcGxhY2UoJ3d3dy4nLCAnJylcbiAgICAgICAgaWYoIHVybC5tYXRjaCgvXFwuY29tLykpIHVybCA9IHVybC5yZXBsYWNlKCcuY29tJywgJycpXG4gICAgICAgIGlmKCB1cmwubWF0Y2goL1xcLml0LykpIHVybCA9IHVybC5yZXBsYWNlKCcuaXQnLCAnJylcbiAgICAgICAgaWYoIHVybC5tYXRjaCgvXFwub3JnLykpIHVybCA9IHVybC5yZXBsYWNlKCcub3JnJywgJycpXG4gICAgICAgIGlmKCB1cmwubWF0Y2goL1xcLm5ldC8pKSB1cmwgPSB1cmwucmVwbGFjZSgnLm5ldCcsICcnKVxuICAgIFxuICAgICAgICBsZXQgdXNlciA9IHVybC5yZXBsYWNlKC9cXC8kLywgJycpLnNwbGl0KCcvJykucG9wKCkudHJpbSgpXG4gICAgICAgIHJldHVybiB1c2VyICE9PSAnJyA/IHVzZXIgOiB1cmwgO1xuICAgIH1cblxufV1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gZGFzaGJvYXJkL3N0YXRpYy9qcy9jb250cm9sbGVycy9vbmJvYXJkaW5nLmNvbnRyb2xsZXIuanMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUdBO0FBQ0E7QUFEQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 319:
/* no static exports found */
/* all exports used */
/*!*********************************************************************!*\
  !*** ./dashboard/static/js/controllers/searchmembers.controller.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nexports.default = ['$scope', '$http', '$sce', 'UserSearchFactory', '$rootScope', function ($scope, $http, $sce, UserSearchFactory, $rootScope) {\n\n    $scope.search_factory = UserSearchFactory;\n    $scope.results_count = 0;\n    $scope.results = [];\n\n    $scope.search_debounced = (0, _lodash.debounce)($scope.search_factory.search.bind($scope.search_factory.search), 500);\n\n    $rootScope.$on('user.search.results', function (event, results) {\n        $scope.results = results['data']['result'];\n        $scope.results_count = results['data']['results_count'];\n        $scope.is_last_members_label = $scope.search_factory.search_filter === '';\n    });\n\n    $rootScope.$on('user.search.error', function (event, data) {\n        $scope.is_last_members_label = false;\n        $scope.results = [];\n    });\n\n    $scope.highlight = function (text, search) {\n        if (!search) {\n            return $sce.trustAsHtml(text);\n        }\n        return $sce.trustAsHtml(text.replace(new RegExp(search, 'gi'), '<span class=\"text-red bold\">$&</span>'));\n    };\n\n    $scope.clearAll = function () {\n        $scope.results = [];$scope.search_factory.search_filter = '';\n    };\n}]; /**\n     * Created by alexcomu on 04/05/17.\n     *///# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvY29udHJvbGxlcnMvc2VhcmNobWVtYmVycy5jb250cm9sbGVyLmpzPzNhOTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGFsZXhjb211IG9uIDA0LzA1LzE3LlxuICovXG5cbmltcG9ydCB7IGRlYm91bmNlIH0gZnJvbSAnbG9kYXNoJ1xuXG5leHBvcnQgZGVmYXVsdCBbJyRzY29wZScsJyRodHRwJywnJHNjZScsJ1VzZXJTZWFyY2hGYWN0b3J5JywgJyRyb290U2NvcGUnLCBmdW5jdGlvbiAoJHNjb3BlLCAkaHR0cCwgJHNjZSwgVXNlclNlYXJjaEZhY3RvcnksICRyb290U2NvcGUpIHtcbiAgICBcbiAgICAkc2NvcGUuc2VhcmNoX2ZhY3RvcnkgPSBVc2VyU2VhcmNoRmFjdG9yeVxuICAgICRzY29wZS5yZXN1bHRzX2NvdW50ID0gMFxuICAgICRzY29wZS5yZXN1bHRzID0gW107XG4gICAgXG4gICAgJHNjb3BlLnNlYXJjaF9kZWJvdW5jZWQgPSBkZWJvdW5jZSgkc2NvcGUuc2VhcmNoX2ZhY3Rvcnkuc2VhcmNoLmJpbmQoJHNjb3BlLnNlYXJjaF9mYWN0b3J5LnNlYXJjaCksIDUwMClcblxuICAgICRyb290U2NvcGUuJG9uKCd1c2VyLnNlYXJjaC5yZXN1bHRzJywgKGV2ZW50LCByZXN1bHRzKT0+e1xuICAgICAgICAkc2NvcGUucmVzdWx0cyA9IHJlc3VsdHNbJ2RhdGEnXVsncmVzdWx0J11cbiAgICAgICAgJHNjb3BlLnJlc3VsdHNfY291bnQgPSByZXN1bHRzWydkYXRhJ11bJ3Jlc3VsdHNfY291bnQnXVxuICAgICAgICAkc2NvcGUuaXNfbGFzdF9tZW1iZXJzX2xhYmVsID0gJHNjb3BlLnNlYXJjaF9mYWN0b3J5LnNlYXJjaF9maWx0ZXIgPT09ICcnXG4gICAgfSlcbiAgICBcbiAgICAkcm9vdFNjb3BlLiRvbigndXNlci5zZWFyY2guZXJyb3InLCAoZXZlbnQsZGF0YSk9PntcbiAgICAgICAgJHNjb3BlLmlzX2xhc3RfbWVtYmVyc19sYWJlbCA9IGZhbHNlO1xuICAgICAgICAkc2NvcGUucmVzdWx0cyA9IFtdXG4gICAgfSlcblxuICAgICRzY29wZS5oaWdobGlnaHQgPSBmdW5jdGlvbih0ZXh0LCBzZWFyY2gpIHtcbiAgICAgICAgaWYgKCFzZWFyY2gpIHtyZXR1cm4gJHNjZS50cnVzdEFzSHRtbCh0ZXh0KTt9XG4gICAgICAgIHJldHVybiAkc2NlLnRydXN0QXNIdG1sKHRleHQucmVwbGFjZShuZXcgUmVnRXhwKHNlYXJjaCwgJ2dpJyksICc8c3BhbiBjbGFzcz1cInRleHQtcmVkIGJvbGRcIj4kJjwvc3Bhbj4nKSk7XG4gICAgfTtcblxuICAgICRzY29wZS5jbGVhckFsbCA9ICgpID0+IHsgJHNjb3BlLnJlc3VsdHMgPSBbXTsgJHNjb3BlLnNlYXJjaF9mYWN0b3J5LnNlYXJjaF9maWx0ZXIgPSAnJ31cbiAgICBcbn1dXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGRhc2hib2FyZC9zdGF0aWMvanMvY29udHJvbGxlcnMvc2VhcmNobWVtYmVycy5jb250cm9sbGVyLmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUVBOztBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 320:
/* no static exports found */
/* all exports used */
/*!**************************************************************!*\
  !*** ./dashboard/static/js/controllers/themes.controller.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = ['$scope', '$uibModal', '$http', '$aside', function ($scope, $uibModal, $http, $aside) {\n\n    $scope.selected_location = '';\n\n    var feed = {\n        theme: null,\n        filter: 'yesterday',\n\n        next_cursor: -1,\n        prev_cursor: undefined,\n\n        progress: false,\n        top: $(window).scrollTop(),\n        data: [],\n\n        prev: function prev() {\n            $scope.FeedModel.get_news(feed.prev_cursor);\n        },\n        next: function next() {\n            $scope.FeedModel.get_news(feed.next_cursor);\n        },\n\n        reset: function reset() {\n            var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : feed.theme;\n            var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : feed.filter;\n            var cursor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n\n            feed.data = [];\n            feed.next_cursor = -1, feed.next(theme, filter, cursor);\n            return feed;\n        },\n\n        get_news: function get_news() {\n            var cursor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n            var theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : feed.theme;\n            var filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : feed.filter;\n\n            console.log('cursor', cursor);\n            $http.get('/api/v1.3/news/' + (theme || 1) + '/' + filter + '/' + cursor + '/').then(function (response) {\n                console.log('next cursor', _.get(response, 'data.result.next_cursor'));\n                feed.data = _.get(response, 'data.result.news');\n                feed.next_cursor = _.get(response, 'data.result.next_cursor');\n                feed.prev_cursor = _.get(response, 'data.result.previous_cursor') || 0;\n            }, function (err) {\n                console.log('ERROR:', err);\n            });\n            return feed;\n        }\n    };\n\n    var influencers = {\n        theme: null,\n        location: null,\n        influencers: [],\n        audiences: [],\n        get_influencers: function get_influencers(theme) {\n            $http.get('/api/v1.3/influencers/' + (theme || influencers.theme || 1) + '/' + (influencers.location || '')).then(function (response) {\n                influencers.influencers = _.get(response, 'data.result.local_influencers');\n            }, function (err) {/* ToDo show API errors with a common error message using toastr? */});\n        },\n        get_audiences: function get_audiences(theme) {\n            $http.get('/api/v1.3/audiences/' + (theme || influencers.theme || 1) + '/' + (influencers.location || '')).then(function (response) {\n                influencers.audiences = _.get(response, 'data.result.audience_sample');\n            }, function (err) {/* ToDo show API errors with a common error message using toastr? */});\n        },\n        get_all: function get_all() {\n            influencers.get_audiences();\n            influencers.get_influencers();\n        },\n        set_location: function set_location(location) {\n            influencers.location = location, influencers.get_all();\n        }\n    };\n\n    $scope.FeedModel = feed;\n    $scope.InfluencersModel = influencers;\n\n    var unbind_topic_id = $scope.$watch('topic_id', function (newValue, oldValue) {\n\n        // Set Theme for this page\n        $scope.FeedModel.theme = newValue;\n        influencers.theme = newValue;\n        influencers.location = $scope.selected_location;\n\n        // Get all data\n        $scope.FeedModel.get_news(-1, newValue, $scope.filter);\n        influencers.get_audiences($scope.topic_id);\n        influencers.get_influencers($scope.topic_id);\n\n        console.log(influencers.location);\n\n        // Unbind to execute watch only once\n        unbind_topic_id();\n    });\n\n    // Set filter for time\n    $scope.setFilter = function (filter) {\n        if ($scope.FeedModel.progress == false) {\n            $scope.FeedModel.filter = filter;\n            $scope.FeedModel.reset($scope.theme);\n        }\n    };\n\n    //\n    // let audiences_watch = $scope.$watch('topic_id', ()=>{  audiences_watch=null})\n    // let influencers_watch = $scope.$watch('topic_id', ()=>{ influencers.get_influencers($scope.topic_id); influencers_watch=null})\n\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvY29udHJvbGxlcnMvdGhlbWVzLmNvbnRyb2xsZXIuanM/MGE3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCdcblxuZXhwb3J0IGRlZmF1bHQgWyAnJHNjb3BlJywnJHVpYk1vZGFsJywnJGh0dHAnLCckYXNpZGUnLCBmdW5jdGlvbiAoJHNjb3BlLCR1aWJNb2RhbCwkaHR0cCwkYXNpZGUpIHtcbiAgICBcbiAgICAkc2NvcGUuc2VsZWN0ZWRfbG9jYXRpb24gPSAnJ1xuICAgIFxuICAgIGxldCBmZWVkID0ge1xuICAgICAgICB0aGVtZSA6IG51bGwsXG4gICAgICAgIGZpbHRlciA6ICd5ZXN0ZXJkYXknICxcbiAgICAgICAgXG4gICAgICAgIG5leHRfY3Vyc29yIDogLTEsXG4gICAgICAgIHByZXZfY3Vyc29yIDogdW5kZWZpbmVkLFxuICAgICAgICBcbiAgICAgICAgcHJvZ3Jlc3MgOiBmYWxzZSxcbiAgICAgICAgdG9wOiAgJCh3aW5kb3cpLnNjcm9sbFRvcCgpLFxuICAgICAgICBkYXRhIDogW10sXG4gICAgXG4gICAgICAgIHByZXYgOiBmdW5jdGlvbigpeyRzY29wZS5GZWVkTW9kZWwuZ2V0X25ld3MoZmVlZC5wcmV2X2N1cnNvcil9LFxuICAgICAgICBuZXh0IDogZnVuY3Rpb24oKXskc2NvcGUuRmVlZE1vZGVsLmdldF9uZXdzKGZlZWQubmV4dF9jdXJzb3IpfSxcbiAgICAgICAgXG4gICAgICAgIHJlc2V0IDogZnVuY3Rpb24odGhlbWU9ZmVlZC50aGVtZSwgZmlsdGVyPWZlZWQuZmlsdGVyLCBjdXJzb3I9LTEpe1xuICAgICAgICAgICAgZmVlZC5kYXRhID0gW11cbiAgICAgICAgICAgIGZlZWQubmV4dF9jdXJzb3IgPSAtMSxcbiAgICAgICAgICAgIGZlZWQubmV4dCh0aGVtZSwgZmlsdGVyLCBjdXJzb3IpXG4gICAgICAgICAgICByZXR1cm4gZmVlZFxuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgZ2V0X25ld3MgOiBmdW5jdGlvbihjdXJzb3IgPSAtMSAsIHRoZW1lPWZlZWQudGhlbWUgLCBmaWx0ZXI9ZmVlZC5maWx0ZXIpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2N1cnNvcicsIGN1cnNvcik7XG4gICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvdjEuMy9uZXdzLycgKyAodGhlbWUgfHwgMSkgKyAnLycgKyBmaWx0ZXIgKyAnLycgKyBjdXJzb3IgKyAnLycpXG4gICAgICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ25leHQgY3Vyc29yJywgXy5nZXQocmVzcG9uc2UsICdkYXRhLnJlc3VsdC5uZXh0X2N1cnNvcicpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuZGF0YSA9IF8uZ2V0KHJlc3BvbnNlLCAnZGF0YS5yZXN1bHQubmV3cycpXG4gICAgICAgICAgICAgICAgICAgICAgICBmZWVkLm5leHRfY3Vyc29yID0gXy5nZXQocmVzcG9uc2UsICdkYXRhLnJlc3VsdC5uZXh0X2N1cnNvcicpXG4gICAgICAgICAgICAgICAgICAgICAgICBmZWVkLnByZXZfY3Vyc29yID0gXy5nZXQocmVzcG9uc2UsICdkYXRhLnJlc3VsdC5wcmV2aW91c19jdXJzb3InKSB8fCAwXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIChlcnIpPT57IGNvbnNvbGUubG9nKCdFUlJPUjonLCBlcnIpfVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgIHJldHVybiBmZWVkXG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgXG4gICAgbGV0IGluZmx1ZW5jZXJzID0ge1xuICAgICAgICB0aGVtZTogbnVsbCxcbiAgICAgICAgbG9jYXRpb246bnVsbCxcbiAgICAgICAgaW5mbHVlbmNlcnMgOiBbXSxcbiAgICAgICAgYXVkaWVuY2VzIDogW10sXG4gICAgICAgIGdldF9pbmZsdWVuY2VycyA6IGZ1bmN0aW9uICh0aGVtZSkge1xuICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3YxLjMvaW5mbHVlbmNlcnMvJyArICh0aGVtZSB8fCBpbmZsdWVuY2Vycy50aGVtZSB8fCAxKSArICcvJyArKGluZmx1ZW5jZXJzLmxvY2F0aW9uIHx8ICcnKSlcbiAgICAgICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKHJlc3BvbnNlKSB7aW5mbHVlbmNlcnMuaW5mbHVlbmNlcnMgPSBfLmdldChyZXNwb25zZSwgJ2RhdGEucmVzdWx0LmxvY2FsX2luZmx1ZW5jZXJzJyl9LFxuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZXJyKSB7IC8qIFRvRG8gc2hvdyBBUEkgZXJyb3JzIHdpdGggYSBjb21tb24gZXJyb3IgbWVzc2FnZSB1c2luZyB0b2FzdHI/ICovfVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0X2F1ZGllbmNlcyA6IGZ1bmN0aW9uICh0aGVtZSkge1xuICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3YxLjMvYXVkaWVuY2VzLycgKyAodGhlbWUgfHwgaW5mbHVlbmNlcnMudGhlbWUgfHwgMSkgKyAnLycgKyhpbmZsdWVuY2Vycy5sb2NhdGlvbiB8fCAnJykpXG4gICAgICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChyZXNwb25zZSkge2luZmx1ZW5jZXJzLmF1ZGllbmNlcyA9IF8uZ2V0KHJlc3BvbnNlLCAnZGF0YS5yZXN1bHQuYXVkaWVuY2Vfc2FtcGxlJyl9LFxuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZXJyKSB7IC8qIFRvRG8gc2hvdyBBUEkgZXJyb3JzIHdpdGggYSBjb21tb24gZXJyb3IgbWVzc2FnZSB1c2luZyB0b2FzdHI/ICovfVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0X2FsbCA6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBpbmZsdWVuY2Vycy5nZXRfYXVkaWVuY2VzKClcbiAgICAgICAgICAgIGluZmx1ZW5jZXJzLmdldF9pbmZsdWVuY2VycygpXG4gICAgICAgIH0sXG4gICAgICAgIHNldF9sb2NhdGlvbiA6IGZ1bmN0aW9uKGxvY2F0aW9uKXsgaW5mbHVlbmNlcnMubG9jYXRpb24gPSBsb2NhdGlvbiwgaW5mbHVlbmNlcnMuZ2V0X2FsbCgpIH1cbiAgICB9XG4gICAgXG4gICAgJHNjb3BlLkZlZWRNb2RlbCA9IGZlZWRcbiAgICAkc2NvcGUuSW5mbHVlbmNlcnNNb2RlbCA9IGluZmx1ZW5jZXJzXG4gICAgXG4gICAgbGV0IHVuYmluZF90b3BpY19pZCA9ICRzY29wZS4kd2F0Y2goJ3RvcGljX2lkJywgZnVuY3Rpb24gKG5ld1ZhbHVlLCBvbGRWYWx1ZSkge1xuICAgICAgICBcbiAgICAgICAgLy8gU2V0IFRoZW1lIGZvciB0aGlzIHBhZ2VcbiAgICAgICAgJHNjb3BlLkZlZWRNb2RlbC50aGVtZSA9IG5ld1ZhbHVlXG4gICAgICAgIGluZmx1ZW5jZXJzLnRoZW1lID0gbmV3VmFsdWVcbiAgICAgICAgaW5mbHVlbmNlcnMubG9jYXRpb24gPSAkc2NvcGUuc2VsZWN0ZWRfbG9jYXRpb25cbiAgICAgICAgXG4gICAgICAgIC8vIEdldCBhbGwgZGF0YVxuICAgICAgICAkc2NvcGUuRmVlZE1vZGVsLmdldF9uZXdzKC0xLCBuZXdWYWx1ZSwgJHNjb3BlLmZpbHRlcilcbiAgICAgICAgaW5mbHVlbmNlcnMuZ2V0X2F1ZGllbmNlcygkc2NvcGUudG9waWNfaWQpO1xuICAgICAgICBpbmZsdWVuY2Vycy5nZXRfaW5mbHVlbmNlcnMoJHNjb3BlLnRvcGljX2lkKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGluZmx1ZW5jZXJzLmxvY2F0aW9uKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFVuYmluZCB0byBleGVjdXRlIHdhdGNoIG9ubHkgb25jZVxuICAgICAgICB1bmJpbmRfdG9waWNfaWQoKVxuICAgICAgICBcbiAgICB9KVxuICAgIFxuICAgIC8vIFNldCBmaWx0ZXIgZm9yIHRpbWVcbiAgICAkc2NvcGUuc2V0RmlsdGVyID0gZnVuY3Rpb24gKGZpbHRlcikge1xuICAgICAgICBpZigkc2NvcGUuRmVlZE1vZGVsLnByb2dyZXNzPT1mYWxzZSl7XG4gICAgICAgICAgICAkc2NvcGUuRmVlZE1vZGVsLmZpbHRlciA9IGZpbHRlcjtcbiAgICAgICAgICAgICRzY29wZS5GZWVkTW9kZWwucmVzZXQoJHNjb3BlLnRoZW1lKVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vXG4gICAgLy8gbGV0IGF1ZGllbmNlc193YXRjaCA9ICRzY29wZS4kd2F0Y2goJ3RvcGljX2lkJywgKCk9PnsgIGF1ZGllbmNlc193YXRjaD1udWxsfSlcbiAgICAvLyBsZXQgaW5mbHVlbmNlcnNfd2F0Y2ggPSAkc2NvcGUuJHdhdGNoKCd0b3BpY19pZCcsICgpPT57IGluZmx1ZW5jZXJzLmdldF9pbmZsdWVuY2Vycygkc2NvcGUudG9waWNfaWQpOyBpbmZsdWVuY2Vyc193YXRjaD1udWxsfSlcblxuICAgIFxufV1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gZGFzaGJvYXJkL3N0YXRpYy9qcy9jb250cm9sbGVycy90aGVtZXMuY29udHJvbGxlci5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQURBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQWxDQTtBQUNBO0FBcUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBdkJBO0FBQ0E7QUF5QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 321:
/* no static exports found */
/* all exports used */
/*!*****************************************************!*\
  !*** ./dashboard/static/js/directives/Challenge.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nvar _d = __webpack_require__(/*! d3 */ 9);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar template = __webpack_require__(/*! ../../templates/challenge_details.html */ 634);\n\nexports.default = [function () {\n    return {\n        template: template,\n        scope: { id: '=' },\n        controller: ['$scope', '$http', '$sce', function ($scope, $http, $sce) {\n            $scope.get_data = function () {\n                return Promise.all([$http.get('/api/v1.3/challenge/' + $scope.id + '/'), $http.get('/api/v1.3/interest_ids/')]).then(function (res) {\n                    console.log(res);\n                    res[0].data.details = res[0].data.details && $sce.trustAsHtml(res[0].data.details);\n                    $scope.challenge = res[0].data || {};\n                    $scope.interested_ids = res[1].data || [];\n                    $scope.$apply(function () {\n                        return $(window).trigger('resize');\n                    });\n                }, function (err) {\n                    return console.log('Error: ', err);\n                });\n            };\n\n            $scope.get_data();\n\n            $scope.click_interest = function (challenge) {\n                return ($scope.is_interested(challenge) ? $http.delete('/api/v1.3/interest/challenge/' + challenge.id + '/') : $http.post('/api/v1.3/interest/challenge/' + challenge.id + '/')).then(function (res) {\n                    return $scope.get_data();\n                }, function (err) {\n                    return console.log(err);\n                });\n            };\n\n            $scope.is_interested = function (challenge) {\n                return $scope.interested_ids && $scope.interested_ids.indexOf(challenge.id) > -1;\n            };\n        }]\n    };\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvZGlyZWN0aXZlcy9DaGFsbGVuZ2UuanM/MDU0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCdcbmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcblxubGV0IHRlbXBsYXRlID0gcmVxdWlyZSgnLi4vLi4vdGVtcGxhdGVzL2NoYWxsZW5nZV9kZXRhaWxzLmh0bWwnKTtcblxuZXhwb3J0IGRlZmF1bHQgW2Z1bmN0aW9uKCl7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGVtcGxhdGU6dGVtcGxhdGUsXG4gICAgICAgIHNjb3BlOiB7IGlkIDogJz0nIH0sXG4gICAgICAgIGNvbnRyb2xsZXIgOiBbJyRzY29wZScsICckaHR0cCcsICckc2NlJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCwgJHNjZSl7XG4gICAgICAgICAgICAkc2NvcGUuZ2V0X2RhdGEgPSAoKT0+IFByb21pc2VcbiAgICAgICAgICAgICAgICAgICAgLmFsbChbXG4gICAgICAgICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvdjEuMy9jaGFsbGVuZ2UvJyskc2NvcGUuaWQrJy8nKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS92MS4zL2ludGVyZXN0X2lkcy8nKVxuICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcz0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNbMF0uZGF0YS5kZXRhaWxzID0gcmVzWzBdLmRhdGEuZGV0YWlscyAmJiAkc2NlLnRydXN0QXNIdG1sKHJlc1swXS5kYXRhLmRldGFpbHMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmNoYWxsZW5nZSA9IHJlc1swXS5kYXRhIHx8IHt9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmludGVyZXN0ZWRfaWRzID0gcmVzWzFdLmRhdGEgfHwgW11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGFwcGx5KCgpPT4kKHdpbmRvdykudHJpZ2dlcigncmVzaXplJykpXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyPT5jb25zb2xlLmxvZygnRXJyb3I6ICcsIGVycilcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgIFxuICAgICAgICAgICAgJHNjb3BlLmdldF9kYXRhKClcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJHNjb3BlLmNsaWNrX2ludGVyZXN0ID0gKGNoYWxsZW5nZSkgPT5cbiAgICAgICAgICAgICAgICAoJHNjb3BlLmlzX2ludGVyZXN0ZWQoY2hhbGxlbmdlKSA/XG4gICAgICAgICAgICAgICAgICAgICRodHRwLmRlbGV0ZSgnL2FwaS92MS4zL2ludGVyZXN0L2NoYWxsZW5nZS8nK2NoYWxsZW5nZS5pZCsnLycpIDpcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAucG9zdCgnL2FwaS92MS4zL2ludGVyZXN0L2NoYWxsZW5nZS8nK2NoYWxsZW5nZS5pZCsnLycpXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIC50aGVuKHJlcz0+JHNjb3BlLmdldF9kYXRhKCksZXJyPT5jb25zb2xlLmxvZyhlcnIpKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAkc2NvcGUuaXNfaW50ZXJlc3RlZCA9IChjaGFsbGVuZ2UpPT4kc2NvcGUuaW50ZXJlc3RlZF9pZHMgJiYgJHNjb3BlLmludGVyZXN0ZWRfaWRzLmluZGV4T2YoY2hhbGxlbmdlLmlkKSA+IC0xXG4gXG4gICAgICAgIH1dXG4gICAgfVxufV1cblxuXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBkYXNoYm9hcmQvc3RhdGljL2pzL2RpcmVjdGl2ZXMvQ2hhbGxlbmdlLmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQWJBO0FBQ0E7QUFlQTtBQUNBO0FBQ0E7QUFBQTtBQUtBO0FBQUE7QUFBQTtBQUFBO0FBTEE7QUFDQTtBQU1BO0FBQUE7QUFBQTtBQUVBO0FBL0JBO0FBaUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 322:
/* no static exports found */
/* all exports used */
/*!*********************************************************!*\
  !*** ./dashboard/static/js/directives/ChallengeList.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nvar _d = __webpack_require__(/*! d3 */ 9);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar template = '\\n    <div class=\"col-md-12\" ng-if=\"filtered_challenges.length == 0\">\\n        <h2>\\n            No Challenges\\n        </h2>\\n    </div>\\n    <div class=\"col-md-3 col-sm-3 col-xs-12\"\\n        ng-repeat=\"challenge in challenges | filter:{published:true} as filtered_challenges\"\\n        ng-if=\"filtered_challenges.length > 0\"\\n        style=\"margin-bottom:1%; margin-top: 1%;\"\\n    >\\n        <div class=\"card margin-bottom-20\">\\n            <a href=\"{$ \\'/challenge/\\'+challenge.id+\\'/\\' $}\" class=\"card-image\" style=\"border-bottom:solid 1px rgba(160, 160, 160, 0.2);\">\\n                <div class=\"card-image\" style=\"border-bottom:solid 1px rgba(160, 160, 160, 0.2);\">\\n                    <img style=\"min-width:100%;\" ng-src=\"{$ challenge.company.logo $}\" class=\"img-responsive\">\\n                </div>\\n            </a>\\n            <div class=\"card-content\"><h5>{$ challenge.title $}</h5></div>\\n            <div class=\"card-action\" style=\"height: auto;\">\\n                <div class=\"row\">\\n                    <div class=\"col-md-12\">\\n                        <p>\\n                            <i class=\"glyphicon glyphicon-thumbs-up\"\\n                                ng-class=\"{ \\'text-red\\': challenge.is_interested, \\'text-grey\\': !challenge.is_interested }\"\\n                                uib-tooltip=\"{$ challenge.is_interested ? \\'You are interested in this challenge\\': \\'Go to the detail page to show interest in this Challenge\\' $}\"\\n                                tooltip-placement=\"right\"\\n                            ></i>\\n                            Interested: {$ challenge.interested.length $}<br>\\n                        </p>\\n\\n                        <p ng-if=\"!challenge.closed\">\\n                            <i class=\"fa fa-unlock-alt text-red\" uib-tooltip=\"Challenge is Open\" tooltip-placement=\"right\"></i> Status:\\n                            Open<br>\\n                        </p>\\n                        <p ng-if=\"challenge.closed\">\\n                            <i class=\"fa fa-lock text-grey disabled\" uib-tooltip=\"Challenge is Closed\" tooltip-placement=\"right\"></i> Status:<br>\\n                            Closed<br>\\n                        </p>\\n                        <!-- <p>\\n                            <i ng-repeat=\"tag in challenge.tags\">\\n                                <strong>#</strong>\\n                                <span>{$ tag.name $}</span>\\n                            </i>\\n                        </p> -->\\n\\n                        <p>Sponsor by: <strong>{$ challenge.company.name $}</strong></p>\\n                    </div>\\n                    <div class=\"col-md-12\">\\n                        <hr>\\n                    </div>\\n                    <div class=\"col-md-12 text-right\">\\n                        <a href=\"{$ \\'/challenge/\\'+challenge.id+\\'/\\' $}\"><p>Read more <i class=\"glyphicon glyphicon-new-window\"></i></p></a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n';\n\nexports.default = [function () {\n    return {\n        template: template,\n        scope: {\n            profileid: '=',\n            all: '='\n        },\n        controller: ['$scope', '$http', function ($scope, $http) {\n\n            $scope.challenges = [];\n            $scope.interested_ids = [];\n\n            $scope.$watch('[profileid, all]', function (new_data, old_data) {\n                console.log(new_data);\n                if ($scope.profileid) {\n\n                    var url = new_data[1] ? '/api/v1.3/challenge/' : '/api/v1.3/profile/' + $scope.profileid + '/challenge/';\n                    $scope.get_data(url);\n                }\n            });\n\n            $scope.get_data = function (url) {\n                $http.get(url).then(function (res) {\n                    $scope.challenges = res.data || [];\n                    $scope.challenges = _.map($scope.challenges, function (el) {\n                        el.is_interested = _.filter(el.interested, { id: $scope.profileid }).length > 0;\n                        return el;\n                    });\n                    $scope.$apply(function () {\n                        return $(window).trigger('resize');\n                    });\n                });\n            };\n            //\n            // $scope.click_interest = (challenge) =>\n            //     (challenge.is_interested ?\n            //         $http.delete('/api/v1.3/interest/challenge/'+challenge.id+'/') :\n            //         $http.post('/api/v1.3/interest/challenge/'+challenge.id+'/')\n            //     )\n            //     .then(res=>$scope.get_data(),err=>console.log(err))\n\n            $scope.is_interested = function (challenge) {\n                return $scope.interested_ids && $scope.interested_ids.indexOf(challenge.id) > -1;\n            };\n        }]\n    };\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvZGlyZWN0aXZlcy9DaGFsbGVuZ2VMaXN0LmpzPzg3YTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnXG5pbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7XG5cbmxldCB0ZW1wbGF0ZSA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTEyXCIgbmctaWY9XCJmaWx0ZXJlZF9jaGFsbGVuZ2VzLmxlbmd0aCA9PSAwXCI+XG4gICAgICAgIDxoMj5cbiAgICAgICAgICAgIE5vIENoYWxsZW5nZXNcbiAgICAgICAgPC9oMj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTMgY29sLXNtLTMgY29sLXhzLTEyXCJcbiAgICAgICAgbmctcmVwZWF0PVwiY2hhbGxlbmdlIGluIGNoYWxsZW5nZXMgfCBmaWx0ZXI6e3B1Ymxpc2hlZDp0cnVlfSBhcyBmaWx0ZXJlZF9jaGFsbGVuZ2VzXCJcbiAgICAgICAgbmctaWY9XCJmaWx0ZXJlZF9jaGFsbGVuZ2VzLmxlbmd0aCA+IDBcIlxuICAgICAgICBzdHlsZT1cIm1hcmdpbi1ib3R0b206MSU7IG1hcmdpbi10b3A6IDElO1wiXG4gICAgPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZCBtYXJnaW4tYm90dG9tLTIwXCI+XG4gICAgICAgICAgICA8YSBocmVmPVwieyQgJy9jaGFsbGVuZ2UvJytjaGFsbGVuZ2UuaWQrJy8nICR9XCIgY2xhc3M9XCJjYXJkLWltYWdlXCIgc3R5bGU9XCJib3JkZXItYm90dG9tOnNvbGlkIDFweCByZ2JhKDE2MCwgMTYwLCAxNjAsIDAuMik7XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtaW1hZ2VcIiBzdHlsZT1cImJvcmRlci1ib3R0b206c29saWQgMXB4IHJnYmEoMTYwLCAxNjAsIDE2MCwgMC4yKTtcIj5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT1cIm1pbi13aWR0aDoxMDAlO1wiIG5nLXNyYz1cInskIGNoYWxsZW5nZS5jb21wYW55LmxvZ28gJH1cIiBjbGFzcz1cImltZy1yZXNwb25zaXZlXCI+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1jb250ZW50XCI+PGg1PnskIGNoYWxsZW5nZS50aXRsZSAkfTwvaDU+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1hY3Rpb25cIiBzdHlsZT1cImhlaWdodDogYXV0bztcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtMTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZ2x5cGhpY29uIGdseXBoaWNvbi10aHVtYnMtdXBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cInsgJ3RleHQtcmVkJzogY2hhbGxlbmdlLmlzX2ludGVyZXN0ZWQsICd0ZXh0LWdyZXknOiAhY2hhbGxlbmdlLmlzX2ludGVyZXN0ZWQgfVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpYi10b29sdGlwPVwieyQgY2hhbGxlbmdlLmlzX2ludGVyZXN0ZWQgPyAnWW91IGFyZSBpbnRlcmVzdGVkIGluIHRoaXMgY2hhbGxlbmdlJzogJ0dvIHRvIHRoZSBkZXRhaWwgcGFnZSB0byBzaG93IGludGVyZXN0IGluIHRoaXMgQ2hhbGxlbmdlJyAkfVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXAtcGxhY2VtZW50PVwicmlnaHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSW50ZXJlc3RlZDogeyQgY2hhbGxlbmdlLmludGVyZXN0ZWQubGVuZ3RoICR9PGJyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9wPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBuZy1pZj1cIiFjaGFsbGVuZ2UuY2xvc2VkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYSBmYS11bmxvY2stYWx0IHRleHQtcmVkXCIgdWliLXRvb2x0aXA9XCJDaGFsbGVuZ2UgaXMgT3BlblwiIHRvb2x0aXAtcGxhY2VtZW50PVwicmlnaHRcIj48L2k+IFN0YXR1czpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPcGVuPGJyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgbmctaWY9XCJjaGFsbGVuZ2UuY2xvc2VkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYSBmYS1sb2NrIHRleHQtZ3JleSBkaXNhYmxlZFwiIHVpYi10b29sdGlwPVwiQ2hhbGxlbmdlIGlzIENsb3NlZFwiIHRvb2x0aXAtcGxhY2VtZW50PVwicmlnaHRcIj48L2k+IFN0YXR1czo8YnI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2xvc2VkPGJyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8cD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBuZy1yZXBlYXQ9XCJ0YWcgaW4gY2hhbGxlbmdlLnRhZ3NcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz4jPC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnskIHRhZy5uYW1lICR9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4gLS0+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPlNwb25zb3IgYnk6IDxzdHJvbmc+eyQgY2hhbGxlbmdlLmNvbXBhbnkubmFtZSAkfTwvc3Ryb25nPjwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtMTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxocj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtMTIgdGV4dC1yaWdodFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cInskICcvY2hhbGxlbmdlLycrY2hhbGxlbmdlLmlkKycvJyAkfVwiPjxwPlJlYWQgbW9yZSA8aSBjbGFzcz1cImdseXBoaWNvbiBnbHlwaGljb24tbmV3LXdpbmRvd1wiPjwvaT48L3A+PC9hPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbmBcblxuZXhwb3J0IGRlZmF1bHQgW2Z1bmN0aW9uKCl7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGVtcGxhdGU6dGVtcGxhdGUsXG4gICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICBwcm9maWxlaWQgOiAnPScsXG4gICAgICAgICAgICBhbGwgOiAnPSdcbiAgICAgICAgfSxcbiAgICAgICAgY29udHJvbGxlciA6IFsnJHNjb3BlJywgJyRodHRwJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCApIHtcbiAgICBcbiAgICAgICAgICAgICRzY29wZS5jaGFsbGVuZ2VzID0gW11cbiAgICAgICAgICAgICRzY29wZS5pbnRlcmVzdGVkX2lkcyA9IFtdXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICRzY29wZS4kd2F0Y2goJ1twcm9maWxlaWQsIGFsbF0nLCAobmV3X2RhdGEsIG9sZF9kYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cobmV3X2RhdGEpO1xuICAgICAgICAgICAgICAgIGlmKCRzY29wZS5wcm9maWxlaWQpe1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgbGV0IHVybCA9IG5ld19kYXRhWzFdPyAnL2FwaS92MS4zL2NoYWxsZW5nZS8nOiAnL2FwaS92MS4zL3Byb2ZpbGUvJyArICRzY29wZS5wcm9maWxlaWQgKyAnL2NoYWxsZW5nZS8nXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRfZGF0YSh1cmwpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJHNjb3BlLmdldF9kYXRhID0gKHVybCkgPT57XG4gICAgICAgICAgICAgICAgJGh0dHAuZ2V0KHVybCkudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuY2hhbGxlbmdlcyA9IHJlcy5kYXRhIHx8IFtdXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5jaGFsbGVuZ2VzID0gXy5tYXAoJHNjb3BlLmNoYWxsZW5nZXMsIGVsID0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgZWwuaXNfaW50ZXJlc3RlZCA9IF8uZmlsdGVyKGVsLmludGVyZXN0ZWQsIHtpZDokc2NvcGUucHJvZmlsZWlkfSkubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS4kYXBwbHkoKCk9PiQod2luZG93KS50cmlnZ2VyKCdyZXNpemUnKSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vICRzY29wZS5jbGlja19pbnRlcmVzdCA9IChjaGFsbGVuZ2UpID0+XG4gICAgICAgICAgICAvLyAgICAgKGNoYWxsZW5nZS5pc19pbnRlcmVzdGVkID9cbiAgICAgICAgICAgIC8vICAgICAgICAgJGh0dHAuZGVsZXRlKCcvYXBpL3YxLjMvaW50ZXJlc3QvY2hhbGxlbmdlLycrY2hhbGxlbmdlLmlkKycvJykgOlxuICAgICAgICAgICAgLy8gICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3YxLjMvaW50ZXJlc3QvY2hhbGxlbmdlLycrY2hhbGxlbmdlLmlkKycvJylcbiAgICAgICAgICAgIC8vICAgICApXG4gICAgICAgICAgICAvLyAgICAgLnRoZW4ocmVzPT4kc2NvcGUuZ2V0X2RhdGEoKSxlcnI9PmNvbnNvbGUubG9nKGVycikpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICRzY29wZS5pc19pbnRlcmVzdGVkID0gKGNoYWxsZW5nZSk9PiRzY29wZS5pbnRlcmVzdGVkX2lkcyAmJiAkc2NvcGUuaW50ZXJlc3RlZF9pZHMuaW5kZXhPZihjaGFsbGVuZ2UuaWQpID4gLTFcbiBcbiAgICAgICAgfV1cbiAgICB9XG59XVxuXG5cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGRhc2hib2FyZC9zdGF0aWMvanMvZGlyZWN0aXZlcy9DaGFsbGVuZ2VMaXN0LmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQUNBOzs7QUFDQTtBQUNBO0FBMERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQXhDQTtBQTBDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 323:
/* no static exports found */
/* all exports used */
/*!***************************************************!*\
  !*** ./dashboard/static/js/directives/Project.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nvar _d = __webpack_require__(/*! d3 */ 9);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar template = '\\n    <form class=\"col-md-12\" enctype=\"multipart/form-data\" ng-submit=\"create_or_update_project()\" id=\"project_form\">\\n        <div class=\"col-md-6 col-md-offset-3\">\\n            <div class=\"form-group\">\\n                <div class=\"col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-xs-6 col-xs-offset-3 text-center\" >\\n\\n                    <button class=\"btn custom-button margin-bottom-10\" ng-click=\"profileImageUpload();\">Choose Image</button>\\n\\n                    <div ng-if=\"image_model.src\" class=\"thumbnail\" id=\"profile-image-div\" >\\n                        <img ng-src=\"{$ image_model.src $}\"/>\\n                    </div>\\n\\n                    <div ng-if=\"data.picture\" class=\"thumbnail\" id=\"profile-image-div\" >\\n                        <img ng-src=\"{$ data.picture $}\"/>\\n                    </div>\\n\\n                    <input id=\"profile-image-input\"\\n                            class=\"hidden\"\\n                            input_file_model=\"image_model.src\"\\n                            type=\"file\"\\n                            name=\"picture\"\\n                            onchange=\"angular.element(this).scope().load_file_data(this.files)\"\\n                            ng-model=\"data.picture\"/>\\n                </div>\\n            </div>\\n        <div class=\"form-group\">\\n            <input type=\"text\" class=\"form-control\" id=\"project_name\" placeholder=\"Insert project name\" ng-model=\"data.name\" name=\"name\" required>\\n        </div>\\n        <div class=\"form-group\">\\n            <textarea type=\"text\" rows=\"10\" class=\"form-control\" id=\"description\" name=\"description\" placeholder=\"Insert a description\" ng-model=\"data.description\" required></textarea>\\n        </div>\\n        <div class=\"form-group\">\\n            <p>Start date</p>\\n            <input type=\"date\" ng-model=\"data.start_date\" name=\"start_date\" required/>\\n            <div ng-if=\"!data.project_ongoing\">\\n                <p class=\"margin-top-10\">End date</p>\\n                <input type=\"date\" ng-model=\"data.end_date\" name=\"end_date\" required/>\\n            </div>\\n            <p class=\"margin-top-10\">Ongoing?</p>\\n            <input type=\"checkbox\" aria-label=\"Ongoing\" ng-model=\"data.project_ongoing\" ng-click=\"push_bottom();\">\\n        </div>\\n        <div class=\"form-group\">\\n            <input type=\"text\" class=\"form-control\" id=\"role\" placeholder=\"Insert your role\" ng-model=\"data.creator_role\" name=\"creator_role\" required/>\\n        </div>\\n        <div class=\"form-group\">\\n            <input type=\"text\" class=\"form-control\" id=\"project_url\" placeholder=\"Insert your project url\" ng-model=\"data.project_url\" name=\"project_url\" required/>\\n        </div>\\n        <div class=\"form-group\">\\n            <p>Enter up to 5 keywords about your project</p>\\n            <ui-select\\n                       multiple tagging\\n                       tagging-label=\"\" tagging-tokens=\"SPACE|ENTER|,|/|<|>|{|}|^\"\\n                       sortable=\"true\"\\n                       spinner-enabled=\"true\"\\n                       ng-class=\"{\\'form-control\\':true}\"\\n                       ng-model=\"data.tags_string\"\\n                       title=\"Choose a tag *\" limit=\"5\"\\n                       required\\n            >\\n\\n                <ui-select-match placeholder=\"Type a tag and press enter\">\\n                    {$ $item $}\\n                </ui-select-match>\\n\\n                <ui-select-choices repeat=\"tag in av_tags.available | filter:$select.search track by $index\">\\n                    <div ng-bind-html=\"tag | highlight: $select.search\"></div>\\n                </ui-select-choices>\\n\\n            </ui-select><br/>\\n            <input type=\"hidden\" name=\"tags\" ng-value=\"data.tags_string\" required/>\\n        </div>\\n        <p class=\"small\">* All the fields are required</p>\\n        <button type=\"submit\" class=\"btn custom-button margin-bottom-10 pull-right margin-left-10\">\\n            <span ng-if=\"!projectid\">Create</span>\\n            <span ng-if=\"projectid\">Update</span>\\n        </button>\\n        <a ng-if=\"!projectid\" class=\"btn custom-button margin-bottom-10 pull-right\" href=\"/profile/\">Back</a>\\n        <a ng-if=\"projectid\" class=\"btn custom-button margin-bottom-10 pull-right\" href=\"{$ \\'/profile/project/\\'+projectid+\\'/detail\\' $}\">Back</a>\\n    </form>\\n';\n\nexports.default = [function () {\n    return {\n        template: template,\n        scope: { projectid: '=', tags: '=' },\n        controller: ['$scope', '$http', '$sce', '$window', 'toastr', function ($scope, $http, $sce, $window, toastr) {\n\n            // form data\n            $scope.data = {};\n\n            $scope.load_file_data = function (files) {\n                $scope.data.picture = '';\n                $scope.data.project_image = files[0];\n            };\n\n            $scope.create_or_update_project = function () {\n                console.log('Sending this data');\n                var fd = new FormData(document.getElementById('project_form'));\n                $http({ method: 'POST', url: $scope.url, data: fd, headers: { 'Content-Type': undefined }, transformRequest: angular.identity }).then(function (response) {\n                    $scope.projectid ? $window.location.href = '/profile/project/' + $scope.projectid + '/detail' : $window.location.href = '/profile';\n                }, function (response) {\n                    console.log(response);\n                    toastr.error('Error', response.data.message);\n                });\n            };\n\n            $scope.get_data = function (url) {\n                $http.get(url).then(function (res) {\n                    $scope.data = res.data.result[0] || {};\n                    $scope.data.start_date = new Date(res.data.result[0].start_date);\n                    if ($scope.data.end_date == '' || $scope.data.end_date == null) {\n                        $scope.data.project_ongoing = true;\n                    } else {\n                        $scope.data.end_date = new Date(res.data.result[0].end_date);\n                    }\n                    $scope.$apply(function () {\n                        return $(window).trigger('resize');\n                    });\n                });\n            };\n\n            // project image\n            $scope.profileImageUpload = function (n) {\n                return $('#profile-image-input').trigger('click');\n            };\n\n            // tags\n            $scope.av_tags = { available: $scope.tags\n\n                // keep pushed\n            };$scope.push_bottom = function () {\n                $scope.re_render;\n            };\n\n            // action based on create or update\n            if ($scope.projectid) {\n                $scope.url = '/api/v1.3/project/' + $scope.projectid + '/';\n                // fill the template form with project information\n                $scope.get_data($scope.url);\n            } else {\n                $scope.url = '/api/v1.3/project/';\n            }\n        }]\n    };\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvZGlyZWN0aXZlcy9Qcm9qZWN0LmpzP2NkZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnXG5pbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7XG5cbmxldCB0ZW1wbGF0ZSA9IGBcbiAgICA8Zm9ybSBjbGFzcz1cImNvbC1tZC0xMlwiIGVuY3R5cGU9XCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIgbmctc3VibWl0PVwiY3JlYXRlX29yX3VwZGF0ZV9wcm9qZWN0KClcIiBpZD1cInByb2plY3RfZm9ybVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTYgY29sLW1kLW9mZnNldC0zXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbGctNCBjb2wtbGctb2Zmc2V0LTQgY29sLW1kLTYgY29sLW1kLW9mZnNldC0zIGNvbC14cy02IGNvbC14cy1vZmZzZXQtMyB0ZXh0LWNlbnRlclwiID5cblxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGN1c3RvbS1idXR0b24gbWFyZ2luLWJvdHRvbS0xMFwiIG5nLWNsaWNrPVwicHJvZmlsZUltYWdlVXBsb2FkKCk7XCI+Q2hvb3NlIEltYWdlPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBuZy1pZj1cImltYWdlX21vZGVsLnNyY1wiIGNsYXNzPVwidGh1bWJuYWlsXCIgaWQ9XCJwcm9maWxlLWltYWdlLWRpdlwiID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgbmctc3JjPVwieyQgaW1hZ2VfbW9kZWwuc3JjICR9XCIvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IG5nLWlmPVwiZGF0YS5waWN0dXJlXCIgY2xhc3M9XCJ0aHVtYm5haWxcIiBpZD1cInByb2ZpbGUtaW1hZ2UtZGl2XCIgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBuZy1zcmM9XCJ7JCBkYXRhLnBpY3R1cmUgJH1cIi8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cInByb2ZpbGUtaW1hZ2UtaW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaGlkZGVuXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dF9maWxlX21vZGVsPVwiaW1hZ2VfbW9kZWwuc3JjXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInBpY3R1cmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2hhbmdlPVwiYW5ndWxhci5lbGVtZW50KHRoaXMpLnNjb3BlKCkubG9hZF9maWxlX2RhdGEodGhpcy5maWxlcylcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiZGF0YS5waWN0dXJlXCIvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiIGlkPVwicHJvamVjdF9uYW1lXCIgcGxhY2Vob2xkZXI9XCJJbnNlcnQgcHJvamVjdCBuYW1lXCIgbmctbW9kZWw9XCJkYXRhLm5hbWVcIiBuYW1lPVwibmFtZVwiIHJlcXVpcmVkPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgIDx0ZXh0YXJlYSB0eXBlPVwidGV4dFwiIHJvd3M9XCIxMFwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCIgaWQ9XCJkZXNjcmlwdGlvblwiIG5hbWU9XCJkZXNjcmlwdGlvblwiIHBsYWNlaG9sZGVyPVwiSW5zZXJ0IGEgZGVzY3JpcHRpb25cIiBuZy1tb2RlbD1cImRhdGEuZGVzY3JpcHRpb25cIiByZXF1aXJlZD48L3RleHRhcmVhPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgIDxwPlN0YXJ0IGRhdGU8L3A+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImRhdGVcIiBuZy1tb2RlbD1cImRhdGEuc3RhcnRfZGF0ZVwiIG5hbWU9XCJzdGFydF9kYXRlXCIgcmVxdWlyZWQvPlxuICAgICAgICAgICAgPGRpdiBuZy1pZj1cIiFkYXRhLnByb2plY3Rfb25nb2luZ1wiPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwibWFyZ2luLXRvcC0xMFwiPkVuZCBkYXRlPC9wPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiZGF0ZVwiIG5nLW1vZGVsPVwiZGF0YS5lbmRfZGF0ZVwiIG5hbWU9XCJlbmRfZGF0ZVwiIHJlcXVpcmVkLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJtYXJnaW4tdG9wLTEwXCI+T25nb2luZz88L3A+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgYXJpYS1sYWJlbD1cIk9uZ29pbmdcIiBuZy1tb2RlbD1cImRhdGEucHJvamVjdF9vbmdvaW5nXCIgbmctY2xpY2s9XCJwdXNoX2JvdHRvbSgpO1wiPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCIgaWQ9XCJyb2xlXCIgcGxhY2Vob2xkZXI9XCJJbnNlcnQgeW91ciByb2xlXCIgbmctbW9kZWw9XCJkYXRhLmNyZWF0b3Jfcm9sZVwiIG5hbWU9XCJjcmVhdG9yX3JvbGVcIiByZXF1aXJlZC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBpZD1cInByb2plY3RfdXJsXCIgcGxhY2Vob2xkZXI9XCJJbnNlcnQgeW91ciBwcm9qZWN0IHVybFwiIG5nLW1vZGVsPVwiZGF0YS5wcm9qZWN0X3VybFwiIG5hbWU9XCJwcm9qZWN0X3VybFwiIHJlcXVpcmVkLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICA8cD5FbnRlciB1cCB0byA1IGtleXdvcmRzIGFib3V0IHlvdXIgcHJvamVjdDwvcD5cbiAgICAgICAgICAgIDx1aS1zZWxlY3RcbiAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGUgdGFnZ2luZ1xuICAgICAgICAgICAgICAgICAgICAgICB0YWdnaW5nLWxhYmVsPVwiXCIgdGFnZ2luZy10b2tlbnM9XCJTUEFDRXxFTlRFUnwsfC98PHw+fHt8fXxeXCJcbiAgICAgICAgICAgICAgICAgICAgICAgc29ydGFibGU9XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgc3Bpbm5lci1lbmFibGVkPVwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwieydmb3JtLWNvbnRyb2wnOnRydWV9XCJcbiAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9XCJkYXRhLnRhZ3Nfc3RyaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJDaG9vc2UgYSB0YWcgKlwiIGxpbWl0PVwiNVwiXG4gICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICA+XG5cbiAgICAgICAgICAgICAgICA8dWktc2VsZWN0LW1hdGNoIHBsYWNlaG9sZGVyPVwiVHlwZSBhIHRhZyBhbmQgcHJlc3MgZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgeyQgJGl0ZW0gJH1cbiAgICAgICAgICAgICAgICA8L3VpLXNlbGVjdC1tYXRjaD5cblxuICAgICAgICAgICAgICAgIDx1aS1zZWxlY3QtY2hvaWNlcyByZXBlYXQ9XCJ0YWcgaW4gYXZfdGFncy5hdmFpbGFibGUgfCBmaWx0ZXI6JHNlbGVjdC5zZWFyY2ggdHJhY2sgYnkgJGluZGV4XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgbmctYmluZC1odG1sPVwidGFnIHwgaGlnaGxpZ2h0OiAkc2VsZWN0LnNlYXJjaFwiPjwvZGl2PlxuICAgICAgICAgICAgICAgIDwvdWktc2VsZWN0LWNob2ljZXM+XG5cbiAgICAgICAgICAgIDwvdWktc2VsZWN0Pjxici8+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJ0YWdzXCIgbmctdmFsdWU9XCJkYXRhLnRhZ3Nfc3RyaW5nXCIgcmVxdWlyZWQvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHAgY2xhc3M9XCJzbWFsbFwiPiogQWxsIHRoZSBmaWVsZHMgYXJlIHJlcXVpcmVkPC9wPlxuICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzcz1cImJ0biBjdXN0b20tYnV0dG9uIG1hcmdpbi1ib3R0b20tMTAgcHVsbC1yaWdodCBtYXJnaW4tbGVmdC0xMFwiPlxuICAgICAgICAgICAgPHNwYW4gbmctaWY9XCIhcHJvamVjdGlkXCI+Q3JlYXRlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gbmctaWY9XCJwcm9qZWN0aWRcIj5VcGRhdGU8L3NwYW4+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8YSBuZy1pZj1cIiFwcm9qZWN0aWRcIiBjbGFzcz1cImJ0biBjdXN0b20tYnV0dG9uIG1hcmdpbi1ib3R0b20tMTAgcHVsbC1yaWdodFwiIGhyZWY9XCIvcHJvZmlsZS9cIj5CYWNrPC9hPlxuICAgICAgICA8YSBuZy1pZj1cInByb2plY3RpZFwiIGNsYXNzPVwiYnRuIGN1c3RvbS1idXR0b24gbWFyZ2luLWJvdHRvbS0xMCBwdWxsLXJpZ2h0XCIgaHJlZj1cInskICcvcHJvZmlsZS9wcm9qZWN0LycrcHJvamVjdGlkKycvZGV0YWlsJyAkfVwiPkJhY2s8L2E+XG4gICAgPC9mb3JtPlxuYFxuXG5leHBvcnQgZGVmYXVsdCBbZnVuY3Rpb24oKXtcbiAgICByZXR1cm4ge1xuICAgICAgICB0ZW1wbGF0ZTp0ZW1wbGF0ZSxcbiAgICAgICAgc2NvcGU6IHsgcHJvamVjdGlkIDogJz0nLCB0YWdzOiAnPScgfSxcbiAgICAgICAgY29udHJvbGxlciA6IFsnJHNjb3BlJywgJyRodHRwJywgJyRzY2UnLCAnJHdpbmRvdycsICd0b2FzdHInLCBmdW5jdGlvbigkc2NvcGUsICRodHRwLCAkc2NlLCAkd2luZG93LCB0b2FzdHIpe1xuXG4gICAgICAgIC8vIGZvcm0gZGF0YVxuICAgICAgICAkc2NvcGUuZGF0YSA9IHt9XG5cbiAgICAgICAgJHNjb3BlLmxvYWRfZmlsZV9kYXRhID0gZnVuY3Rpb24gKGZpbGVzKSB7XG4gICAgICAgICAgICAkc2NvcGUuZGF0YS5waWN0dXJlID0gJydcbiAgICAgICAgICAgICRzY29wZS5kYXRhLnByb2plY3RfaW1hZ2UgPSBmaWxlc1swXVxuICAgICAgICB9O1xuXG4gICAgICAgICRzY29wZS5jcmVhdGVfb3JfdXBkYXRlX3Byb2plY3QgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnU2VuZGluZyB0aGlzIGRhdGEnKVxuICAgICAgICAgICAgdmFyIGZkID0gbmV3IEZvcm1EYXRhKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvamVjdF9mb3JtJykpO1xuICAgICAgICAgICAgJGh0dHAoe21ldGhvZDogJ1BPU1QnLCB1cmw6ICRzY29wZS51cmwsIGRhdGE6IGZkLCBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZCB9LCB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5fSlcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvamVjdGlkID8gJHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9wcm9maWxlL3Byb2plY3QvJyArICRzY29wZS5wcm9qZWN0aWQgKyAnL2RldGFpbCc6ICR3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvcHJvZmlsZSdcbiAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSlcbiAgICAgICAgICAgICAgICAgICAgdG9hc3RyLmVycm9yKCdFcnJvcicsIHJlc3BvbnNlLmRhdGEubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAkc2NvcGUuZ2V0X2RhdGEgPSAodXJsKSA9PiB7XG4gICAgICAgICAgICAkaHR0cC5nZXQodXJsKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmRhdGEgPSByZXMuZGF0YS5yZXN1bHRbMF0gfHwge31cbiAgICAgICAgICAgICAgICAkc2NvcGUuZGF0YS5zdGFydF9kYXRlID0gbmV3IERhdGUocmVzLmRhdGEucmVzdWx0WzBdLnN0YXJ0X2RhdGUpXG4gICAgICAgICAgICAgICAgaWYgKCRzY29wZS5kYXRhLmVuZF9kYXRlID09ICcnIHx8ICRzY29wZS5kYXRhLmVuZF9kYXRlID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmRhdGEucHJvamVjdF9vbmdvaW5nID0gdHJ1ZVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5kYXRhLmVuZF9kYXRlID0gbmV3IERhdGUocmVzLmRhdGEucmVzdWx0WzBdLmVuZF9kYXRlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAkc2NvcGUuJGFwcGx5KCgpPT4kKHdpbmRvdykudHJpZ2dlcigncmVzaXplJykpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gcHJvamVjdCBpbWFnZVxuICAgICAgICAkc2NvcGUucHJvZmlsZUltYWdlVXBsb2FkID0gbj0+JCgnI3Byb2ZpbGUtaW1hZ2UtaW5wdXQnKS50cmlnZ2VyKCdjbGljaycpXG5cbiAgICAgICAgLy8gdGFnc1xuICAgICAgICAkc2NvcGUuYXZfdGFncz17IGF2YWlsYWJsZTogICRzY29wZS50YWdzICB9XG5cbiAgICAgICAgLy8ga2VlcCBwdXNoZWRcbiAgICAgICAgJHNjb3BlLnB1c2hfYm90dG9tID0gKCkgPT4ge1xuICAgICAgICAgICAgJHNjb3BlLnJlX3JlbmRlclxuICAgICAgICB9XG5cbiAgICAgICAgLy8gYWN0aW9uIGJhc2VkIG9uIGNyZWF0ZSBvciB1cGRhdGVcbiAgICAgICAgaWYgKCRzY29wZS5wcm9qZWN0aWQpIHtcbiAgICAgICAgICAgICRzY29wZS51cmwgPSAnL2FwaS92MS4zL3Byb2plY3QvJyArICRzY29wZS5wcm9qZWN0aWQgKyAnLydcbiAgICAgICAgICAgIC8vIGZpbGwgdGhlIHRlbXBsYXRlIGZvcm0gd2l0aCBwcm9qZWN0IGluZm9ybWF0aW9uXG4gICAgICAgICAgICAkc2NvcGUuZ2V0X2RhdGEoJHNjb3BlLnVybClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICRzY29wZS51cmwgPSAnL2FwaS92MS4zL3Byb2plY3QvJ1xuICAgICAgICB9XG5cbiAgICAgICAgfV1cbiAgICB9XG59XVxuXG5cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGRhc2hib2FyZC9zdGF0aWMvanMvZGlyZWN0aXZlcy9Qcm9qZWN0LmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQUNBOzs7QUFDQTtBQUNBO0FBZ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUExREE7QUE0REEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 324:
/* no static exports found */
/* all exports used */
/*!*********************************************************!*\
  !*** ./dashboard/static/js/directives/ProjectDetail.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nvar _d = __webpack_require__(/*! d3 */ 9);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar template = __webpack_require__(/*! ../../templates/project_details.html */ 635);\n\nexports.default = [function () {\n    return {\n        template: template,\n        scope: { projectid: '=', profileid: '=' },\n        controller: ['$scope', '$http', '$window', '$rootScope', '$sce', 'toastr', 'UserSearchFactory', function ($scope, $http, $window, $rootScope, $sce, toastr, UserSearchFactory) {\n\n            $scope.search_factory = UserSearchFactory;\n            var model_object = 'project';\n            $scope.url = '/api/v1.3/project/' + $scope.projectid;\n            $scope.projects = [];\n            $scope.results = [];\n            $scope.show_form = false;\n            $scope.show_invite = false;\n\n            $scope.search_debounced = function () {\n                if ($scope.search_factory.search_filter.length < 3) $scope.results = [];else _.debounce($scope.search_factory.search.bind($scope.search_factory.search), 500)();\n            };\n\n            $rootScope.$on('user.search.results', function (event, results) {\n                $scope.results = results['data']['result'];\n\n                // setting button invitation type to search result\n                // ToDo take care of pagination\n                if (!_.isEmpty($scope.results)) _.forEach($scope.results, function (item) {\n                    var match = _.find($scope.project.project_contributors, function (o) {\n                        return o.id == item.id;\n                    });\n                    if (match) item.status = match.status;\n                });\n\n                $scope.results_count = results['data']['results_count'];\n                if ($scope.results_count == 0) $scope.show_invite = true;\n                $scope.is_last_members_label = $scope.search_factory.search_filter === '';\n            });\n\n            $rootScope.$on('user.search.error', function (event, data) {\n                $scope.is_last_members_label = false;\n                $scope.results = [];\n            });\n\n            $scope.highlight = function (text, search) {\n                if (!search) {\n                    return $sce.trustAsHtml(text);\n                }\n                return $sce.trustAsHtml(text.replace(new RegExp(search, 'gi'), '<span class=\"text-red bold\">$&</span>'));\n            };\n\n            $scope.clearAll = function () {\n                $scope.results = [];$scope.search_factory.search_filter = '';$scope.show_invite = false;\n            };\n\n            $scope.send_collaborator_invitation = function (project_id, profile_id) {\n                // send invitation\n                var data = { 'project_id': project_id, 'profile_id': profile_id };\n                $http.post('/api/v1.3/project/invitation/', data).then(function (res) {\n                    console.log(res);\n                    toastr.success('Success', res.data.message);\n                    $scope.search_debounced();\n                    $scope.get_data($scope.url);\n                }, function (err) {\n                    return console.log(err);\n                });\n            };\n\n            $scope.remove_collaborator = function (project_id, profile_id) {\n                // remove collaborator\n                var status = 'removed';\n                var data = { 'project_id': project_id, 'profile_id': profile_id };\n                $http.post('/api/v1.3/project/invitation/' + status + '/', data).then(function (res) {\n                    toastr.success('Success', res.data.message);\n                    $scope.get_data($scope.url);\n                    $scope.$apply(function () {\n                        return $(window).trigger('resize');\n                    });\n                }, function (err) {\n                    return console.log(err);\n                });\n            };\n\n            $scope.open_close_form = function (open_close) {\n                $scope.show_form = open_close;\n                $scope.clearAll();\n            };\n\n            $scope.get_data = function (url) {\n                return Promise.all([$http.get(url), $http.get('/api/v1.3/interest/ids/' + model_object)]).then(function (res) {\n                    $scope.project = res[0].data.result[0] || [];\n                    $scope.interested_ids = res[1].data || [];\n                    $scope.$apply(function () {\n                        return $(window).trigger('resize');\n                    });\n                    // flatting contributors\n                    // ToDo improve performance\n                    if (!_.isEmpty($scope.project.project_contributors)) _.forEach($scope.project.project_contributors, function (item) {\n                        _.merge(item, item.contributor);\n                    });\n                }, function (err) {\n                    return console.log('Error: ', err);\n                });\n            };\n\n            $scope.delete_project = function (url) {\n                $http.delete(url).then(function (res) {\n                    $window.location.href = '/profile';\n                    $scope.$apply(function () {\n                        return $(window).trigger('resize');\n                    });\n                });\n            };\n\n            $scope.get_data($scope.url);\n\n            // set interest\n            $scope.click_interest = function (project) {\n                return ($scope.is_interested(project) ? $http.delete('/api/v1.3/interest/project/' + project.id + '/') : $http.post('/api/v1.3/interest/project/' + project.id + '/')).then(function (res) {\n                    return $scope.get_data($scope.url);\n                }, function (err) {\n                    return console.log(err);\n                });\n            };\n\n            // check if logged user is interested or not\n            $scope.is_interested = function (project) {\n                var result = $scope.interested_ids && $scope.interested_ids.indexOf(project.id) > -1;\n                return result;\n            };\n        }]\n    };\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 325:
/* no static exports found */
/* all exports used */
/*!*******************************************************!*\
  !*** ./dashboard/static/js/directives/ProjectList.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nvar _d = __webpack_require__(/*! d3 */ 9);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar template = '\\n    <div class=\"col-md-12\" ng-if=\"projects.length == 0\">\\n        <h2>\\n            No Projects\\n        </h2>\\n    </div>\\n    <div class=\"col-md-3 col-sm-3 col-xs-12\"\\n        ng-repeat=\"project in projects\"\\n        style=\"margin-bottom:1%; margin-top: 1%;\">\\n        <div class=\"card margin-bottom-20\">\\n            <a href=\"{$ \\'/profile/project/\\'+project.id+\\'/detail\\' $}\" class=\"card-image\" style=\"border-bottom:solid 1px rgba(160, 160, 160, 0.2);\">\\n                <div class=\"card-image\" style=\"border-bottom:solid 1px rgba(160, 160, 160, 0.2);\">\\n                    <img style=\"min-width:100%;\" ng-src=\"{$ project.picture $}\" class=\"img-responsive\">\\n                </div>\\n            </a>\\n            <div class=\"card-content\"><h5>{$ project.name $}</h5></div>\\n            <div class=\"card-action\" style=\"height: auto;\">\\n                <div class=\"row\">\\n                    <div class=\"col-md-12\">\\n                        <!--<p>{$ project.description | limitTo: 60 $} {$ feed.summary.length > 60 ? \\'...\\' : \\'\\' $}</p>-->\\n                        <p>\\n                            <i ng-repeat=\"tag in project.tags | limitTo: 2\">\\n                                <strong>#</strong>\\n                                <span>{$ tag.name $}</span>\\n                            </i>\\n                            <span ng-if=\"project.tags.length > 2\"></span>\\n                        </p>\\n                        <p>\\n                            <i class=\"glyphicon glyphicon-thumbs-up\"\\n                                ng-class=\"{ \\'text-red\\': project.is_interested, \\'text-grey\\': !project.is_interested }\"\\n                                uib-tooltip=\"{$ project.is_interested ? \\'You are interested in this project\\': \\'Go to the detail page to show interest in this Challenge\\' $}\"\\n                                tooltip-placement=\"right\"\\n                            ></i>\\n                            Interested: {$ project.interested.length $}<br>\\n                        </p>\\n                    </div>\\n                    <div class=\"col-md-12\">\\n                        <hr>\\n                    </div>\\n                    <div class=\"col-md-12 text-right\">\\n                        <a href=\"{$ \\'/profile/project/\\'+project.id+\\'/detail\\' $}\"><p>Read more <i class=\"glyphicon glyphicon-new-window\"></i></p></a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n';\n\nexports.default = [function () {\n    return {\n        template: template,\n        scope: { profileid: '=', requestprofileid: '=' },\n        controller: ['$scope', '$http', 'toastr', function ($scope, $http, toastr) {\n\n            var url = '';\n            $scope.projects = [];\n\n            console.log('profileid: ' + $scope.profileid);\n            console.log('requestprofileid: ' + $scope.requestprofileid);\n\n            $scope.get_data = function (url) {\n                $http.get(url).then(function (res) {\n\n                    $scope.projects = res.data.result || [];\n\n                    console.log('projects');\n                    console.log($scope.projects);\n\n                    $scope.projects = _.map($scope.projects, function (el) {\n                        el.is_interested = _.filter(el.interested, { id: $scope.requestprofileid }).length > 0;\n                        return el;\n                    });\n\n                    $scope.$apply(function () {\n                        return $(window).trigger('resize');\n                    });\n                });\n            };\n\n            $scope.$watch('profileid', function (new_data, old_data) {\n                console.log('new data: ' + new_data);\n                $scope.profileid = new_data;\n                url = '/api/v1.3/profile/' + $scope.profileid + '/projects/';\n                $scope.get_data(url);\n            });\n\n            $scope.is_interested = function (project) {\n                return $scope.interested_ids && $scope.interested_ids.indexOf(project.id) > -1;\n            };\n        }]\n    };\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzI1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvZGlyZWN0aXZlcy9Qcm9qZWN0TGlzdC5qcz9iMzkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnO1xubGV0IHRlbXBsYXRlID0gYFxuICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtMTJcIiBuZy1pZj1cInByb2plY3RzLmxlbmd0aCA9PSAwXCI+XG4gICAgICAgIDxoMj5cbiAgICAgICAgICAgIE5vIFByb2plY3RzXG4gICAgICAgIDwvaDI+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImNvbC1tZC0zIGNvbC1zbS0zIGNvbC14cy0xMlwiXG4gICAgICAgIG5nLXJlcGVhdD1cInByb2plY3QgaW4gcHJvamVjdHNcIlxuICAgICAgICBzdHlsZT1cIm1hcmdpbi1ib3R0b206MSU7IG1hcmdpbi10b3A6IDElO1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZCBtYXJnaW4tYm90dG9tLTIwXCI+XG4gICAgICAgICAgICA8YSBocmVmPVwieyQgJy9wcm9maWxlL3Byb2plY3QvJytwcm9qZWN0LmlkKycvZGV0YWlsJyAkfVwiIGNsYXNzPVwiY2FyZC1pbWFnZVwiIHN0eWxlPVwiYm9yZGVyLWJvdHRvbTpzb2xpZCAxcHggcmdiYSgxNjAsIDE2MCwgMTYwLCAwLjIpO1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWltYWdlXCIgc3R5bGU9XCJib3JkZXItYm90dG9tOnNvbGlkIDFweCByZ2JhKDE2MCwgMTYwLCAxNjAsIDAuMik7XCI+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3R5bGU9XCJtaW4td2lkdGg6MTAwJTtcIiBuZy1zcmM9XCJ7JCBwcm9qZWN0LnBpY3R1cmUgJH1cIiBjbGFzcz1cImltZy1yZXNwb25zaXZlXCI+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1jb250ZW50XCI+PGg1PnskIHByb2plY3QubmFtZSAkfTwvaDU+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1hY3Rpb25cIiBzdHlsZT1cImhlaWdodDogYXV0bztcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtMTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08cD57JCBwcm9qZWN0LmRlc2NyaXB0aW9uIHwgbGltaXRUbzogNjAgJH0geyQgZmVlZC5zdW1tYXJ5Lmxlbmd0aCA+IDYwID8gJy4uLicgOiAnJyAkfTwvcD4tLT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIG5nLXJlcGVhdD1cInRhZyBpbiBwcm9qZWN0LnRhZ3MgfCBsaW1pdFRvOiAyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+Izwvc3Ryb25nPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57JCB0YWcubmFtZSAkfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gbmctaWY9XCJwcm9qZWN0LnRhZ3MubGVuZ3RoID4gMlwiPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZ2x5cGhpY29uIGdseXBoaWNvbi10aHVtYnMtdXBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cInsgJ3RleHQtcmVkJzogcHJvamVjdC5pc19pbnRlcmVzdGVkLCAndGV4dC1ncmV5JzogIXByb2plY3QuaXNfaW50ZXJlc3RlZCB9XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWliLXRvb2x0aXA9XCJ7JCBwcm9qZWN0LmlzX2ludGVyZXN0ZWQgPyAnWW91IGFyZSBpbnRlcmVzdGVkIGluIHRoaXMgcHJvamVjdCc6ICdHbyB0byB0aGUgZGV0YWlsIHBhZ2UgdG8gc2hvdyBpbnRlcmVzdCBpbiB0aGlzIENoYWxsZW5nZScgJH1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sdGlwLXBsYWNlbWVudD1cInJpZ2h0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEludGVyZXN0ZWQ6IHskIHByb2plY3QuaW50ZXJlc3RlZC5sZW5ndGggJH08YnI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTEyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aHI+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTEyIHRleHQtcmlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJ7JCAnL3Byb2ZpbGUvcHJvamVjdC8nK3Byb2plY3QuaWQrJy9kZXRhaWwnICR9XCI+PHA+UmVhZCBtb3JlIDxpIGNsYXNzPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1uZXctd2luZG93XCI+PC9pPjwvcD48L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuYFxuXG5leHBvcnQgZGVmYXVsdCBbZnVuY3Rpb24oKXtcbiAgICByZXR1cm4ge1xuICAgICAgICB0ZW1wbGF0ZTp0ZW1wbGF0ZSxcbiAgICAgICAgc2NvcGU6IHtwcm9maWxlaWQ6ICc9JyxyZXF1ZXN0cHJvZmlsZWlkOiAnPSd9LFxuICAgICAgICBjb250cm9sbGVyIDogWyckc2NvcGUnLCAnJGh0dHAnLCAndG9hc3RyJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCwgdG9hc3RyKSB7XG5cbiAgICAgICAgICAgIGxldCB1cmwgPSAnJ1xuICAgICAgICAgICAgJHNjb3BlLnByb2plY3RzID0gW11cblxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3Byb2ZpbGVpZDogJyArICRzY29wZS5wcm9maWxlaWQpXG4gICAgICAgICAgICBjb25zb2xlLmxvZygncmVxdWVzdHByb2ZpbGVpZDogJyArICRzY29wZS5yZXF1ZXN0cHJvZmlsZWlkKVxuXG4gICAgICAgICAgICAkc2NvcGUuZ2V0X2RhdGEgPSAodXJsKSA9PiB7XG4gICAgICAgICAgICAgICAgJGh0dHAuZ2V0KHVybCkudGhlbihyZXMgPT4ge1xuXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9qZWN0cyA9IHJlcy5kYXRhLnJlc3VsdCB8fCBbXVxuXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwcm9qZWN0cycpXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCRzY29wZS5wcm9qZWN0cylcblxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvamVjdHMgPSBfLm1hcCgkc2NvcGUucHJvamVjdHMsIGVsID0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgZWwuaXNfaW50ZXJlc3RlZCA9IF8uZmlsdGVyKGVsLmludGVyZXN0ZWQsIHtpZDokc2NvcGUucmVxdWVzdHByb2ZpbGVpZH0pLmxlbmd0aCA+IDBcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbFxuICAgICAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS4kYXBwbHkoKCk9PiQod2luZG93KS50cmlnZ2VyKCdyZXNpemUnKSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkc2NvcGUuJHdhdGNoKCdwcm9maWxlaWQnLCAobmV3X2RhdGEsIG9sZF9kYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ25ldyBkYXRhOiAnICsgbmV3X2RhdGEpO1xuICAgICAgICAgICAgICAgICRzY29wZS5wcm9maWxlaWQgPSBuZXdfZGF0YVxuICAgICAgICAgICAgICAgIHVybCA9ICcvYXBpL3YxLjMvcHJvZmlsZS8nICsgJHNjb3BlLnByb2ZpbGVpZCArICcvcHJvamVjdHMvJ1xuICAgICAgICAgICAgICAgICRzY29wZS5nZXRfZGF0YSh1cmwpXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAkc2NvcGUuaXNfaW50ZXJlc3RlZCA9IChwcm9qZWN0KSA9PiAkc2NvcGUuaW50ZXJlc3RlZF9pZHMgJiYgJHNjb3BlLmludGVyZXN0ZWRfaWRzLmluZGV4T2YocHJvamVjdC5pZCkgPiAtMVxuICAgICAgICB9XVxuICAgIH1cbn1dXG5cblxuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gZGFzaGJvYXJkL3N0YXRpYy9qcy9kaXJlY3RpdmVzL1Byb2plY3RMaXN0LmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQUNBOzs7QUFBQTtBQUNBO0FBK0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQXBDQTtBQXNDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 326:
/* no static exports found */
/* all exports used */
/*!*****************************************************************!*\
  !*** ./dashboard/static/js/directives/UserStories.directive.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar template = '\\n    <div class=\"row\">\\n        <div class=\"col-md-12\">\\n            <!--<h2><strong class=\"text-red\">Stories</strong> <small>from <a href=\"http://openmaker.eu/\" target=\"_blank\">openmaker.eu</a></small></h2>-->\\n            <h2><span style=\"color:white;\">Explore the</span> <strong class=\"text-red\">Community</strong></h2>\\n        </div>\\n        \\n        <div class=\"col-md-3\" ng-repeat=\"story in stories | limitTo:3\">\\n            <div class=\"card margin-bottom-20\" style=\"background-color: #fff;\" ng-if=\"story\">\\n                <a href=\"{$ story.link $}\" target=\"_blank\">\\n                    <div class=\"card-image\" style=\"border-bottom:solid 1px rgba(160, 160, 160, 0.2);\">\\n                        <img ng-if=\"story.image\" style=\"min-width:100%;\" ng-src=\"{$ story.image $}\" class=\"img-responsive\" alt=\"Story image\">\\n                    </div>\\n                    <div class=\"card-content\">\\n                        <!--<h5>{{ feed.title|truncatechars:40 }}</h5>-->\\n                        <h5 ng-bind-html=\"story.title.rendered\" ></h5>\\n                    </div>\\n                    <div class=\"card-action\">\\n                        <p ng-bind-html=\"(story.excerpt.rendered | limitTo: 100) + \\'...\\'\"></p>\\n                    </div>\\n                </a>\\n            </div>\\n        </div>\\n        <div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\">\\n                            <a href=\"http://openmaker.eu/\" target=\"_blank\">\\n                                <div class=\"card margin-bottom-20\" style=\"min-height: 326px;background-color: #fff;\">\\n                                    <h3 class=\"text-red\" style=\"position: absolute;\\n                                top: 50%;\\n                                left: 50%;\\n                                margin-right: -50%;\\n                                transform: translate(-50%, -50%)\">Discover <small class=\"text-black\">more</small><br><i class=\"fa fa-hand-o-right\" aria-hidden=\"true\"></i></h3>\\n                                </div>\\n                            </a>\\n                        </div>\\n    </div>\\n';\n\nexports.default = [function () {\n\n    return {\n        template: template,\n        scope: [],\n        controller: ['$scope', '$http', function ($scope, $http) {\n\n            $scope.stories = [];\n\n            var openmaker_country = ['it', 'es', 'sk', 'uk', 'eu'];\n            var openmaker_suffix = 'openmaker.eu';\n            var api_suffix = 'wp-json/wp/v2';\n\n            var url = 'http://' + openmaker_suffix + '/' + api_suffix + '/posts?_embed=true';\n            $http.get(url).then(function (res) {\n                $scope.stories = res.data.slice(0, 4).map(function (story) {\n                    console.log('image', story);\n                    story.image = _.get(story, \"['_embedded']['wp:featuredmedia'][0].source_url\") || '/static/images/openmaker-logo-final.svg';\n                    return story;\n                });\n            }, function (err) {\n                return console.log('Error : ', err);\n            });\n\n            // _.each(openmaker_country, country =>{\n            //     let url = `http://${country}.${openmaker_suffix}/${api_suffix}/posts?_embed=true`\n            //     $http.get(url).then(\n            //         res => {\n            //             res.data[0].image =\n            //                 _.get(res, \"data[0]['_embedded']['wp:featuredmedia'][0].source_url\") ||\n            //                 '/static/images/openmaker-logo.svg'\n            //             $scope.stories.push(res.data[0])\n            //         }\n            //         ,\n            //         err => console.log('Error : ', err)\n            //     )\n            // })\n        }]\n    };\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzI2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvZGlyZWN0aXZlcy9Vc2VyU3Rvcmllcy5kaXJlY3RpdmUuanM/MjJlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCdcblxubGV0IHRlbXBsYXRlID0gYFxuICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1tZC0xMlwiPlxuICAgICAgICAgICAgPCEtLTxoMj48c3Ryb25nIGNsYXNzPVwidGV4dC1yZWRcIj5TdG9yaWVzPC9zdHJvbmc+IDxzbWFsbD5mcm9tIDxhIGhyZWY9XCJodHRwOi8vb3Blbm1ha2VyLmV1L1wiIHRhcmdldD1cIl9ibGFua1wiPm9wZW5tYWtlci5ldTwvYT48L3NtYWxsPjwvaDI+LS0+XG4gICAgICAgICAgICA8aDI+PHNwYW4gc3R5bGU9XCJjb2xvcjp3aGl0ZTtcIj5FeHBsb3JlIHRoZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz1cInRleHQtcmVkXCI+Q29tbXVuaXR5PC9zdHJvbmc+PC9oMj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIFxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTNcIiBuZy1yZXBlYXQ9XCJzdG9yeSBpbiBzdG9yaWVzIHwgbGltaXRUbzozXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZCBtYXJnaW4tYm90dG9tLTIwXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1wiIG5nLWlmPVwic3RvcnlcIj5cbiAgICAgICAgICAgICAgICA8YSBocmVmPVwieyQgc3RvcnkubGluayAkfVwiIHRhcmdldD1cIl9ibGFua1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1pbWFnZVwiIHN0eWxlPVwiYm9yZGVyLWJvdHRvbTpzb2xpZCAxcHggcmdiYSgxNjAsIDE2MCwgMTYwLCAwLjIpO1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBuZy1pZj1cInN0b3J5LmltYWdlXCIgc3R5bGU9XCJtaW4td2lkdGg6MTAwJTtcIiBuZy1zcmM9XCJ7JCBzdG9yeS5pbWFnZSAkfVwiIGNsYXNzPVwiaW1nLXJlc3BvbnNpdmVcIiBhbHQ9XCJTdG9yeSBpbWFnZVwiPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPCEtLTxoNT57eyBmZWVkLnRpdGxlfHRydW5jYXRlY2hhcnM6NDAgfX08L2g1Pi0tPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGg1IG5nLWJpbmQtaHRtbD1cInN0b3J5LnRpdGxlLnJlbmRlcmVkXCIgPjwvaDU+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1hY3Rpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIG5nLWJpbmQtaHRtbD1cIihzdG9yeS5leGNlcnB0LnJlbmRlcmVkIHwgbGltaXRUbzogMTAwKSArICcuLi4nXCI+PC9wPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgY29sLXNtLTYgY29sLW1kLTQgY29sLWxnLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cDovL29wZW5tYWtlci5ldS9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQgbWFyZ2luLWJvdHRvbS0yMFwiIHN0eWxlPVwibWluLWhlaWdodDogMzI2cHg7YmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz1cInRleHQtcmVkXCIgc3R5bGU9XCJwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLTUwJTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSlcIj5EaXNjb3ZlciA8c21hbGwgY2xhc3M9XCJ0ZXh0LWJsYWNrXCI+bW9yZTwvc21hbGw+PGJyPjxpIGNsYXNzPVwiZmEgZmEtaGFuZC1vLXJpZ2h0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuYFxuXG5leHBvcnQgZGVmYXVsdCBbZnVuY3Rpb24oKXtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgICB0ZW1wbGF0ZTp0ZW1wbGF0ZSxcbiAgICAgICAgc2NvcGU6IFtdLFxuICAgICAgICBjb250cm9sbGVyIDogWyckc2NvcGUnLCckaHR0cCcsIGZ1bmN0aW9uKCRzY29wZSwgJGh0dHApe1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAkc2NvcGUuc3RvcmllcyA9IFtdXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxldCBvcGVubWFrZXJfY291bnRyeSA9IFsnaXQnLCAnZXMnLCAnc2snLCAndWsnLCAnZXUnXVxuICAgICAgICAgICAgbGV0IG9wZW5tYWtlcl9zdWZmaXggPSAnb3Blbm1ha2VyLmV1J1xuICAgICAgICAgICAgbGV0IGFwaV9zdWZmaXggPSAnd3AtanNvbi93cC92MidcbiAgICBcbiAgICAgICAgICAgIGxldCB1cmwgPSBgaHR0cDovLyR7b3Blbm1ha2VyX3N1ZmZpeH0vJHthcGlfc3VmZml4fS9wb3N0cz9fZW1iZWQ9dHJ1ZWBcbiAgICAgICAgICAgICRodHRwLmdldCh1cmwpLnRoZW4oXG4gICAgICAgICAgICAgICAgcmVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN0b3JpZXMgPSByZXMuZGF0YS5zbGljZSgwLDQpLm1hcChzdG9yeT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2ltYWdlJywgc3RvcnkpXG4gICAgICAgICAgICAgICAgICAgICAgICBzdG9yeS5pbWFnZSA9IF8uZ2V0KHN0b3J5LCBcIlsnX2VtYmVkZGVkJ11bJ3dwOmZlYXR1cmVkbWVkaWEnXVswXS5zb3VyY2VfdXJsXCIpIHx8ICcvc3RhdGljL2ltYWdlcy9vcGVubWFrZXItbG9nby1maW5hbC5zdmcnXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RvcnlcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLFxuICAgICAgICAgICAgICAgIGVyciA9PiBjb25zb2xlLmxvZygnRXJyb3IgOiAnLCBlcnIpXG4gICAgICAgICAgICApXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIF8uZWFjaChvcGVubWFrZXJfY291bnRyeSwgY291bnRyeSA9PntcbiAgICAgICAgICAgIC8vICAgICBsZXQgdXJsID0gYGh0dHA6Ly8ke2NvdW50cnl9LiR7b3Blbm1ha2VyX3N1ZmZpeH0vJHthcGlfc3VmZml4fS9wb3N0cz9fZW1iZWQ9dHJ1ZWBcbiAgICAgICAgICAgIC8vICAgICAkaHR0cC5nZXQodXJsKS50aGVuKFxuICAgICAgICAgICAgLy8gICAgICAgICByZXMgPT4ge1xuICAgICAgICAgICAgLy8gICAgICAgICAgICAgcmVzLmRhdGFbMF0uaW1hZ2UgPVxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgIF8uZ2V0KHJlcywgXCJkYXRhWzBdWydfZW1iZWRkZWQnXVsnd3A6ZmVhdHVyZWRtZWRpYSddWzBdLnNvdXJjZV91cmxcIikgfHxcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAnL3N0YXRpYy9pbWFnZXMvb3Blbm1ha2VyLWxvZ28uc3ZnJ1xuICAgICAgICAgICAgLy8gICAgICAgICAgICAgJHNjb3BlLnN0b3JpZXMucHVzaChyZXMuZGF0YVswXSlcbiAgICAgICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgLy8gICAgICAgICAsXG4gICAgICAgICAgICAvLyAgICAgICAgIGVyciA9PiBjb25zb2xlLmxvZygnRXJyb3IgOiAnLCBlcnIpXG4gICAgICAgICAgICAvLyAgICAgKVxuICAgICAgICAgICAgLy8gfSlcbiAgICAgICAgICAgIFxuICAgICAgICB9XVxuICAgIH1cbiAgXG59XVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGRhc2hib2FyZC9zdGF0aWMvanMvZGlyZWN0aXZlcy9Vc2VyU3Rvcmllcy5kaXJlY3RpdmUuanMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFEQTtBQUNBOzs7QUFDQTtBQUNBO0FBb0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUF0Q0E7QUF5Q0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 327:
/* no static exports found */
/* all exports used */
/*!************************************************************!*\
  !*** ./dashboard/static/js/factories/UserSearchFactory.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ 2);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = ['$http', '$rootScope', function ($http, $rootScope) {\n\n    var factory = {\n\n        search_filter: '',\n        old_search: '',\n        restrict_to: '',\n        old_restrict_to: '',\n        page: null,\n\n        is_max_page: false,\n        is_min_page: false,\n\n        search: function search() {\n            var searchString = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            var restrict_to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            var page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n\n            factory.search_filter = searchString || factory.search_filter;\n\n            var options = {\n                'method': 'GET',\n                'url': '/api/v1.1/search/members/' + factory.search_filter + '/',\n                params: {}\n            };\n\n            restrict_to && (options.params.restrict_to = restrict_to);\n            page && (options.params.page = page);\n            factory.restrict_to = restrict_to;\n\n            var apicall = $http(options);\n            apicall.then(factory.update_context, function (n) {\n                return $rootScope.$emit('user.search.error', n);\n            });\n            return apicall;\n        },\n\n        update_context: function update_context(results) {\n            factory.old_restrict_to = factory.restrict_to;\n            factory.old_search = factory.search_filter;\n\n            factory.page = parseInt(results.data.page) || 1;\n            factory.max_page = results.data.max_page || null;\n\n            factory.is_min_page = factory.page === 1;\n            factory.is_max_page = factory.page === factory.max_page;\n\n            $rootScope.$emit('user.search.results', results);\n        },\n\n        // Resets class context\n        reset_filters: function reset_filters() {\n            factory.search_filter = '';\n            factory.old_search = '';\n            factory.old_restrict_to = '';\n            factory.page = 1;\n        },\n\n        // Same search performed two times in a row resets the search ( useful for buttons )\n        search_switch: function search_switch() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            factory.search_filter = args[0] || factory.search_filter;\n            factory.search_filter.toLowerCase() === factory.old_search.toLowerCase() && (args[0] = null) || factory.reset_filters();\n            factory.search.apply(factory, args);\n        },\n\n        search_all: function search_all() {\n            factory.reset_filters();\n            factory.search();\n        },\n\n        is_search_all: function is_search_all() {\n            return factory.search_filter.trim() === '';\n        },\n\n        // Got to arbitrary page\n        // @TODO: check if page exists\n        go_to_page: function go_to_page() {\n            var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            return factory.search(factory.old_search, factory.old_restrict_to, page || 1);\n        },\n\n        // Go to next page if exist else do nothing\n        prev_page: function prev_page() {\n            return factory.is_min_page || factory.search(factory.old_search, factory.old_restrict_to, factory.page - 1);\n        },\n\n        // Go to previous page if exist else do nothing\n        next_page: function next_page() {\n            return factory.is_max_page || factory.search(factory.old_search, factory.old_restrict_to, factory.page + 1);\n        }\n\n    };\n    return factory;\n}];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzI3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2Rhc2hib2FyZC9zdGF0aWMvanMvZmFjdG9yaWVzL1VzZXJTZWFyY2hGYWN0b3J5LmpzP2JmNzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnXG5leHBvcnQgZGVmYXVsdCBbJyRodHRwJywgJyRyb290U2NvcGUnLCAgZnVuY3Rpb24oJGh0dHAsICRyb290U2NvcGUpe1xuICAgIFxuICAgIHZhciBmYWN0b3J5ID0ge1xuICAgICAgICBcbiAgICAgICAgc2VhcmNoX2ZpbHRlcjogJycsXG4gICAgICAgIG9sZF9zZWFyY2g6JycsXG4gICAgICAgIHJlc3RyaWN0X3RvOicnLFxuICAgICAgICBvbGRfcmVzdHJpY3RfdG86JycsXG4gICAgICAgIHBhZ2U6bnVsbCxcbiAgICAgICAgXG4gICAgICAgIGlzX21heF9wYWdlOmZhbHNlLFxuICAgICAgICBpc19taW5fcGFnZTpmYWxzZSxcbiAgICAgICAgXG4gICAgICAgIHNlYXJjaDogKHNlYXJjaFN0cmluZyA9IG51bGwsIHJlc3RyaWN0X3RvID0gbnVsbCwgcGFnZSA9IDEpPT57XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGZhY3Rvcnkuc2VhcmNoX2ZpbHRlciA9IHNlYXJjaFN0cmluZyB8fCBmYWN0b3J5LnNlYXJjaF9maWx0ZXJcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbGV0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgJ21ldGhvZCc6ICdHRVQnLFxuICAgICAgICAgICAgICAgICd1cmwnOiAnL2FwaS92MS4xL3NlYXJjaC9tZW1iZXJzLycrZmFjdG9yeS5zZWFyY2hfZmlsdGVyKycvJyxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IHt9XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICByZXN0cmljdF90byAmJiAob3B0aW9ucy5wYXJhbXMucmVzdHJpY3RfdG8gPSByZXN0cmljdF90bylcbiAgICAgICAgICAgIHBhZ2UgJiYgKG9wdGlvbnMucGFyYW1zLnBhZ2UgPSBwYWdlKVxuICAgICAgICAgICAgZmFjdG9yeS5yZXN0cmljdF90byA9IHJlc3RyaWN0X3RvXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxldCBhcGljYWxsID0gJGh0dHAob3B0aW9ucylcbiAgICAgICAgICAgIGFwaWNhbGwudGhlbihmYWN0b3J5LnVwZGF0ZV9jb250ZXh0LCBuPT4kcm9vdFNjb3BlLiRlbWl0KCd1c2VyLnNlYXJjaC5lcnJvcicsIG4pIClcbiAgICAgICAgICAgIHJldHVybiBhcGljYWxsXG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICB1cGRhdGVfY29udGV4dDoocmVzdWx0cyk9PntcbiAgICAgICAgICAgIGZhY3Rvcnkub2xkX3Jlc3RyaWN0X3RvID0gZmFjdG9yeS5yZXN0cmljdF90b1xuICAgICAgICAgICAgZmFjdG9yeS5vbGRfc2VhcmNoID0gZmFjdG9yeS5zZWFyY2hfZmlsdGVyXG4gICAgXG4gICAgICAgICAgICBmYWN0b3J5LnBhZ2UgPSBwYXJzZUludChyZXN1bHRzLmRhdGEucGFnZSkgfHwgMVxuICAgICAgICAgICAgZmFjdG9yeS5tYXhfcGFnZSA9IHJlc3VsdHMuZGF0YS5tYXhfcGFnZSB8fCBudWxsXG4gICAgXG4gICAgICAgICAgICBmYWN0b3J5LmlzX21pbl9wYWdlID0gZmFjdG9yeS5wYWdlID09PSAxXG4gICAgICAgICAgICBmYWN0b3J5LmlzX21heF9wYWdlID0gZmFjdG9yeS5wYWdlID09PSBmYWN0b3J5Lm1heF9wYWdlXG4gICAgXG4gICAgICAgICAgICAkcm9vdFNjb3BlLiRlbWl0KCd1c2VyLnNlYXJjaC5yZXN1bHRzJywgcmVzdWx0cylcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8vIFJlc2V0cyBjbGFzcyBjb250ZXh0XG4gICAgICAgIHJlc2V0X2ZpbHRlcnM6KCk9PntcbiAgICAgICAgICAgIGZhY3Rvcnkuc2VhcmNoX2ZpbHRlcj0nJ1xuICAgICAgICAgICAgZmFjdG9yeS5vbGRfc2VhcmNoPScnXG4gICAgICAgICAgICBmYWN0b3J5Lm9sZF9yZXN0cmljdF90bz0nJ1xuICAgICAgICAgICAgZmFjdG9yeS5wYWdlPTFcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8vIFNhbWUgc2VhcmNoIHBlcmZvcm1lZCB0d28gdGltZXMgaW4gYSByb3cgcmVzZXRzIHRoZSBzZWFyY2ggKCB1c2VmdWwgZm9yIGJ1dHRvbnMgKVxuICAgICAgICBzZWFyY2hfc3dpdGNoOiAoLi4uYXJncyk9PiB7XG4gICAgICAgICAgICBmYWN0b3J5LnNlYXJjaF9maWx0ZXIgPSBhcmdzWzBdIHx8IGZhY3Rvcnkuc2VhcmNoX2ZpbHRlclxuICAgICAgICAgICAgZmFjdG9yeS5zZWFyY2hfZmlsdGVyLnRvTG93ZXJDYXNlKCkgPT09IGZhY3Rvcnkub2xkX3NlYXJjaC50b0xvd2VyQ2FzZSgpICYmIChhcmdzWzBdPW51bGwpIHx8IGZhY3RvcnkucmVzZXRfZmlsdGVycygpXG4gICAgICAgICAgICBmYWN0b3J5LnNlYXJjaCguLi5hcmdzKVxuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgc2VhcmNoX2FsbDooKT0+e1xuICAgICAgICAgICAgZmFjdG9yeS5yZXNldF9maWx0ZXJzKClcbiAgICAgICAgICAgIGZhY3Rvcnkuc2VhcmNoKClcbiAgICAgICAgfSxcblxuICAgICAgICBpc19zZWFyY2hfYWxsOigpPT4gZmFjdG9yeS5zZWFyY2hfZmlsdGVyLnRyaW0oKSA9PT0gJycgLFxuICAgICAgICBcbiAgICAgICAgLy8gR290IHRvIGFyYml0cmFyeSBwYWdlXG4gICAgICAgIC8vIEBUT0RPOiBjaGVjayBpZiBwYWdlIGV4aXN0c1xuICAgICAgICBnb190b19wYWdlOiAocGFnZT1udWxsKT0+eyByZXR1cm4gZmFjdG9yeS5zZWFyY2goZmFjdG9yeS5vbGRfc2VhcmNoLCBmYWN0b3J5Lm9sZF9yZXN0cmljdF90bywgcGFnZSB8fCAxICkgfSxcbiAgICAgICAgXG4gICAgICAgIC8vIEdvIHRvIG5leHQgcGFnZSBpZiBleGlzdCBlbHNlIGRvIG5vdGhpbmdcbiAgICAgICAgcHJldl9wYWdlOiAoKT0+ZmFjdG9yeS5pc19taW5fcGFnZSB8fCBmYWN0b3J5LnNlYXJjaChmYWN0b3J5Lm9sZF9zZWFyY2gsIGZhY3Rvcnkub2xkX3Jlc3RyaWN0X3RvLCBmYWN0b3J5LnBhZ2UtMSksXG4gICAgICAgIFxuICAgICAgICAvLyBHbyB0byBwcmV2aW91cyBwYWdlIGlmIGV4aXN0IGVsc2UgZG8gbm90aGluZ1xuICAgICAgICBuZXh0X3BhZ2U6ICgpPT5mYWN0b3J5LmlzX21heF9wYWdlIHx8IGZhY3Rvcnkuc2VhcmNoKGZhY3Rvcnkub2xkX3NlYXJjaCwgZmFjdG9yeS5vbGRfcmVzdHJpY3RfdG8sIGZhY3RvcnkucGFnZSsxKVxuICAgICAgICBcbiAgICB9XG4gICAgcmV0dXJuIGZhY3RvcnlcbiAgICBcbn1dXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGRhc2hib2FyZC9zdGF0aWMvanMvZmFjdG9yaWVzL1VzZXJTZWFyY2hGYWN0b3J5LmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBREE7QUFDQTs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBMUVBO0FBNEVBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 343:
/* no static exports found */
/* all exports used */
/*!****************************************************************************************!*\
  !*** ./~/css-loader!./~/sass-loader/lib/loader.js!./dashboard/static/style/index.scss ***!
  \****************************************************************************************/
/***/ (function(module, exports) {

eval("throw new Error(\"Module build failed: Error: Node Sass does not yet support your current environment: OS X 64-bit with Unsupported runtime (59)\\nFor more information on which environments are supported please see:\\nhttps://github.com/sass/node-sass/releases/tag/v4.5.3\\n    at module.exports (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/node-sass/lib/binding.js:13:13)\\n    at Object.<anonymous> (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/node-sass/lib/index.js:14:35)\\n    at Module._compile (module.js:649:30)\\n    at Object.Module._extensions..js (module.js:660:10)\\n    at Module.load (module.js:561:32)\\n    at tryModuleLoad (module.js:501:12)\\n    at Function.Module._load (module.js:493:3)\\n    at Module.require (module.js:593:17)\\n    at require (internal/module.js:11:18)\\n    at Object.<anonymous> (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/sass-loader/lib/loader.js:3:14)\\n    at Module._compile (module.js:649:30)\\n    at Object.Module._extensions..js (module.js:660:10)\\n    at Module.load (module.js:561:32)\\n    at tryModuleLoad (module.js:501:12)\\n    at Function.Module._load (module.js:493:3)\\n    at Module.require (module.js:593:17)\\n    at require (internal/module.js:11:18)\\n    at loadLoader (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/loader-runner/lib/loadLoader.js:13:17)\\n    at iteratePitchingLoaders (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/loader-runner/lib/LoaderRunner.js:169:2)\\n    at iteratePitchingLoaders (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/loader-runner/lib/LoaderRunner.js:165:10)\\n    at /Users/massimo/IdeaProjects/dsp-explorer/node_modules/loader-runner/lib/LoaderRunner.js:173:18\\n    at loadLoader (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/loader-runner/lib/loadLoader.js:36:3)\\n    at iteratePitchingLoaders (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/loader-runner/lib/LoaderRunner.js:169:2)\\n    at runLoaders (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/loader-runner/lib/LoaderRunner.js:362:2)\\n    at NormalModule.doBuild (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/webpack/lib/NormalModule.js:179:3)\\n    at NormalModule.build (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/webpack/lib/NormalModule.js:268:15)\\n    at Compilation.buildModule (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/webpack/lib/Compilation.js:146:10)\\n    at factoryCallback (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/webpack/lib/Compilation.js:329:11)\\n    at factory (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/webpack/lib/NormalModuleFactory.js:253:5)\\n    at applyPluginsAsyncWaterfall (/Users/massimo/IdeaProjects/dsp-explorer/node_modules/webpack/lib/NormalModuleFactory.js:99:14)\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQzLmpzIiwic291cmNlcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 634:
/* no static exports found */
/* all exports used */
/*!***********************************************************!*\
  !*** ./dashboard/static/templates/challenge_details.html ***!
  \***********************************************************/
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-md-12\\\" style=\\\"background: #f5f5f5; padding:2% 1%; margin-bottom:2%; border-radius: 3px;\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h1>\\n                <span>{$ challenge.title $}</span>&nbsp;&nbsp;\\n                <small style=\\\"font-size:100%; text-align:center;\\\" >\\n                     <span\\n                             class=\\\"fa fa-thumbs-up\\\"\\n                             ng-class=\\\"{'text-red':is_interested(challenge), 'text-grey':!is_interested(challenge), 'pointer':!challenge.closed }\\\"\\n                             ng-click=\\\"challenge.closed || click_interest(challenge)\\\"\\n                             uib-tooltip=\\\"{$ is_interested(challenge)? 'You are interested in this challenge': 'Click to show interest in this challenge' $}\\\"\\n                     ></span>\\n                    <small><span>{$ challenge.interested.length $}&nbsp;Interested</span></small>\\n                </small>\\n            </h1>\\n            <br>\\n        </div>\\n        <div class=\\\"col-md-12 visible-sm visible-xs visible-sm\\\">\\n            <br>\\n            <span\\n                    class=\\\"btn tag-button no-pointer\\\"\\n                    ng-repeat=\\\"tag in challenge.tags\\\"\\n                    style=\\\"margin-right: 1%;\\\"\\n            >#{$ tag.name $}</span>\\n            <br><br>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <img style=\\\"width:100%;\\\" ng-src=\\\"{$ challenge.picture $}\\\" alt=\\\"\\\" >\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <br>\\n        <!--Description-->\\n        <div class=\\\"col-md-12\\\">\\n            <h4><i>{$ challenge.description $}</i></h4>\\n        </div>\\n        <br>\\n        <!-- Spec -->\\n        <div class=\\\"col-md-12\\\">\\n            <br>\\n            <!--Status-->\\n            <p>\\n                <strong class=\\\"text-danger\\\">\\n                    <i ng-class=\\\"{'fa fa-lock fa-fw disabled': challenge.closed, 'fa fa-fw fa-unlock-alt': !challenge.closed}\\\" ></i>\\n                    <span>&nbsp;Challenge:&nbsp;&nbsp;</span>\\n                </strong>\\n                {$ challenge.closed ? 'Closed': 'Open' $}\\n            </p>\\n            <p >\\n                <strong ng-if=\\\"challenge.restricted_to\\\" class=\\\"text-danger\\\">\\n                    <i class=\\\"fa fa-map-marker fa-fw\\\" ></i>\\n                    <span>&nbsp;Restricted to:&nbsp;&nbsp;</span>\\n                </strong>\\n                {$ challenge.restricted_to $}\\n            </p>\\n            <!--Date-->\\n            <p ng-if=\\\"challenge.start_date\\\">\\n                <strong class=\\\"text-danger\\\">\\n                    <i class=\\\"fa fa-calendar-check-o fa-fw\\\"></i>\\n                    <span>&nbsp;Start:&nbsp;&nbsp;</span>\\n                </strong>\\n                {$ challenge.start_date | date:'dd MMMM yyyy' $}\\n            </p>\\n            <p ng-if=\\\"challenge.end_date\\\">\\n                <strong class=\\\"text-danger\\\">\\n                    <i class=\\\"fa fa-calendar-times-o fa-fw\\\"></i>\\n                    <span>&nbsp;End:&nbsp;&nbsp;</span>\\n                </strong>\\n                {$ challenge.end_date | date:'dd MMMM yyyy' $}\\n            </p>\\n        </div>\\n        <!--Tags-->\\n        <div class=\\\"col-md-12 visible-md visible-lg\\\">\\n            <br>\\n            <span\\n                    class=\\\"btn tag-button no-pointer\\\"\\n                    ng-repeat=\\\"tag in challenge.tags\\\"\\n                    style=\\\"margin-right: 1%;\\\"\\n            >#{$ tag.name $}</span>\\n        </div>\\n        <br>\\n        <span class=\\\"col-md-12\\\">\\n               <br>\\n               <div class=\\\"row Aligner\\\">\\n                    <img class=\\\"col-md-2 col-xs-3\\\" ng-src=\\\"{$ challenge.company.logo $}\\\" alt=\\\"\\\">\\n                    <h3 class=\\\"col-md-10 co-xs-8\\\" >{$ challenge.company.name $}</h3>\\n               </div>\\n           </span>\\n\\n    </div>\\n</div>\\n\\n<!--Challenge details-->\\n<div class=\\\"col-md-12\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <br>\\n        <div ng-bind-html=\\\"challenge.details\\\"></div>\\n    </div>\\n</div>\\n\\n<div class=\\\"col-md-12\\\"><br><br></div>\\n<!--Interested users-->\\n<div class=\\\"col-md-12 margin-top-25\\\" ng-if=\\\"challenge.interested.length > 0\\\">\\n    <div class=\\\"well-red\\\">{$ challenge.interested.length $} Interested users</div>\\n\\n    <a href=\\\"/profile/{$ profile.id $}\\\" ng-repeat=\\\"profile in challenge.interested | limitTo:20\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-1 col-xs-4\\\">\\n                <circle-image src=\\\"{$ profile.picture $}\\\"\\n                              href=\\\"/profile/{$ profile.id $}\\\"\\n                ></circle-image>\\n            </div>\\n            <div class=\\\"col-md-10 col-xs-8\\\">\\n                <strong>{$ profile.user.first_name+' '+profile.user.last_name $}</strong>\\n                <br><span>{$ profile.city $}</span><br>\\n                <span ng-repeat=\\\"profile_tag in profile.tags\\\">{$ profile_tag.name $}&nbsp;&nbsp;</span>\\n            </div>\\n        </div>\\n    </a>\\n\\n</div>\\n\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjM0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZGFzaGJvYXJkL3N0YXRpYy90ZW1wbGF0ZXMvY2hhbGxlbmdlX2RldGFpbHMuaHRtbD81NTA0Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8ZGl2IGNsYXNzPVxcXCJjb2wtbWQtMTJcXFwiIHN0eWxlPVxcXCJiYWNrZ3JvdW5kOiAjZjVmNWY1OyBwYWRkaW5nOjIlIDElOyBtYXJnaW4tYm90dG9tOjIlOyBib3JkZXItcmFkaXVzOiAzcHg7XFxcIj5cXG4gICAgPGRpdiBjbGFzcz1cXFwiY29sLW1kLTEyXFxcIj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImNvbC1tZC0xMlxcXCI+XFxuICAgICAgICAgICAgPGgxPlxcbiAgICAgICAgICAgICAgICA8c3Bhbj57JCBjaGFsbGVuZ2UudGl0bGUgJH08L3NwYW4+Jm5ic3A7Jm5ic3A7XFxuICAgICAgICAgICAgICAgIDxzbWFsbCBzdHlsZT1cXFwiZm9udC1zaXplOjEwMCU7IHRleHQtYWxpZ246Y2VudGVyO1xcXCIgPlxcbiAgICAgICAgICAgICAgICAgICAgIDxzcGFuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiZmEgZmEtdGh1bWJzLXVwXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XFxcInsndGV4dC1yZWQnOmlzX2ludGVyZXN0ZWQoY2hhbGxlbmdlKSwgJ3RleHQtZ3JleSc6IWlzX2ludGVyZXN0ZWQoY2hhbGxlbmdlKSwgJ3BvaW50ZXInOiFjaGFsbGVuZ2UuY2xvc2VkIH1cXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGljaz1cXFwiY2hhbGxlbmdlLmNsb3NlZCB8fCBjbGlja19pbnRlcmVzdChjaGFsbGVuZ2UpXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWliLXRvb2x0aXA9XFxcInskIGlzX2ludGVyZXN0ZWQoY2hhbGxlbmdlKT8gJ1lvdSBhcmUgaW50ZXJlc3RlZCBpbiB0aGlzIGNoYWxsZW5nZSc6ICdDbGljayB0byBzaG93IGludGVyZXN0IGluIHRoaXMgY2hhbGxlbmdlJyAkfVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICA+PC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgICAgPHNtYWxsPjxzcGFuPnskIGNoYWxsZW5nZS5pbnRlcmVzdGVkLmxlbmd0aCAkfSZuYnNwO0ludGVyZXN0ZWQ8L3NwYW4+PC9zbWFsbD5cXG4gICAgICAgICAgICAgICAgPC9zbWFsbD5cXG4gICAgICAgICAgICA8L2gxPlxcbiAgICAgICAgICAgIDxicj5cXG4gICAgICAgIDwvZGl2PlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwiY29sLW1kLTEyIHZpc2libGUtc20gdmlzaWJsZS14cyB2aXNpYmxlLXNtXFxcIj5cXG4gICAgICAgICAgICA8YnI+XFxuICAgICAgICAgICAgPHNwYW5cXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVxcXCJidG4gdGFnLWJ1dHRvbiBuby1wb2ludGVyXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgbmctcmVwZWF0PVxcXCJ0YWcgaW4gY2hhbGxlbmdlLnRhZ3NcXFwiXFxuICAgICAgICAgICAgICAgICAgICBzdHlsZT1cXFwibWFyZ2luLXJpZ2h0OiAxJTtcXFwiXFxuICAgICAgICAgICAgPiN7JCB0YWcubmFtZSAkfTwvc3Bhbj5cXG4gICAgICAgICAgICA8YnI+PGJyPlxcbiAgICAgICAgPC9kaXY+XFxuXFxuICAgIDwvZGl2PlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJjb2wtbWQtNlxcXCI+XFxuICAgICAgICA8aW1nIHN0eWxlPVxcXCJ3aWR0aDoxMDAlO1xcXCIgbmctc3JjPVxcXCJ7JCBjaGFsbGVuZ2UucGljdHVyZSAkfVxcXCIgYWx0PVxcXCJcXFwiID5cXG4gICAgPC9kaXY+XFxuICAgIDxkaXYgY2xhc3M9XFxcImNvbC1tZC02XFxcIj5cXG4gICAgICAgIDxicj5cXG4gICAgICAgIDwhLS1EZXNjcmlwdGlvbi0tPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwiY29sLW1kLTEyXFxcIj5cXG4gICAgICAgICAgICA8aDQ+PGk+eyQgY2hhbGxlbmdlLmRlc2NyaXB0aW9uICR9PC9pPjwvaDQ+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxicj5cXG4gICAgICAgIDwhLS0gU3BlYyAtLT5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImNvbC1tZC0xMlxcXCI+XFxuICAgICAgICAgICAgPGJyPlxcbiAgICAgICAgICAgIDwhLS1TdGF0dXMtLT5cXG4gICAgICAgICAgICA8cD5cXG4gICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz1cXFwidGV4dC1kYW5nZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGkgbmctY2xhc3M9XFxcInsnZmEgZmEtbG9jayBmYS1mdyBkaXNhYmxlZCc6IGNoYWxsZW5nZS5jbG9zZWQsICdmYSBmYS1mdyBmYS11bmxvY2stYWx0JzogIWNoYWxsZW5nZS5jbG9zZWR9XFxcIiA+PC9pPlxcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+Jm5ic3A7Q2hhbGxlbmdlOiZuYnNwOyZuYnNwOzwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgPC9zdHJvbmc+XFxuICAgICAgICAgICAgICAgIHskIGNoYWxsZW5nZS5jbG9zZWQgPyAnQ2xvc2VkJzogJ09wZW4nICR9XFxuICAgICAgICAgICAgPC9wPlxcbiAgICAgICAgICAgIDxwID5cXG4gICAgICAgICAgICAgICAgPHN0cm9uZyBuZy1pZj1cXFwiY2hhbGxlbmdlLnJlc3RyaWN0ZWRfdG9cXFwiIGNsYXNzPVxcXCJ0ZXh0LWRhbmdlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cXFwiZmEgZmEtbWFwLW1hcmtlciBmYS1md1xcXCIgPjwvaT5cXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPiZuYnNwO1Jlc3RyaWN0ZWQgdG86Jm5ic3A7Jm5ic3A7PC9zcGFuPlxcbiAgICAgICAgICAgICAgICA8L3N0cm9uZz5cXG4gICAgICAgICAgICAgICAgeyQgY2hhbGxlbmdlLnJlc3RyaWN0ZWRfdG8gJH1cXG4gICAgICAgICAgICA8L3A+XFxuICAgICAgICAgICAgPCEtLURhdGUtLT5cXG4gICAgICAgICAgICA8cCBuZy1pZj1cXFwiY2hhbGxlbmdlLnN0YXJ0X2RhdGVcXFwiPlxcbiAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPVxcXCJ0ZXh0LWRhbmdlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cXFwiZmEgZmEtY2FsZW5kYXItY2hlY2stbyBmYS1md1xcXCI+PC9pPlxcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+Jm5ic3A7U3RhcnQ6Jm5ic3A7Jm5ic3A7PC9zcGFuPlxcbiAgICAgICAgICAgICAgICA8L3N0cm9uZz5cXG4gICAgICAgICAgICAgICAgeyQgY2hhbGxlbmdlLnN0YXJ0X2RhdGUgfCBkYXRlOidkZCBNTU1NIHl5eXknICR9XFxuICAgICAgICAgICAgPC9wPlxcbiAgICAgICAgICAgIDxwIG5nLWlmPVxcXCJjaGFsbGVuZ2UuZW5kX2RhdGVcXFwiPlxcbiAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPVxcXCJ0ZXh0LWRhbmdlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cXFwiZmEgZmEtY2FsZW5kYXItdGltZXMtbyBmYS1md1xcXCI+PC9pPlxcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+Jm5ic3A7RW5kOiZuYnNwOyZuYnNwOzwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgPC9zdHJvbmc+XFxuICAgICAgICAgICAgICAgIHskIGNoYWxsZW5nZS5lbmRfZGF0ZSB8IGRhdGU6J2RkIE1NTU0geXl5eScgJH1cXG4gICAgICAgICAgICA8L3A+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDwhLS1UYWdzLS0+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJjb2wtbWQtMTIgdmlzaWJsZS1tZCB2aXNpYmxlLWxnXFxcIj5cXG4gICAgICAgICAgICA8YnI+XFxuICAgICAgICAgICAgPHNwYW5cXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVxcXCJidG4gdGFnLWJ1dHRvbiBuby1wb2ludGVyXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgbmctcmVwZWF0PVxcXCJ0YWcgaW4gY2hhbGxlbmdlLnRhZ3NcXFwiXFxuICAgICAgICAgICAgICAgICAgICBzdHlsZT1cXFwibWFyZ2luLXJpZ2h0OiAxJTtcXFwiXFxuICAgICAgICAgICAgPiN7JCB0YWcubmFtZSAkfTwvc3Bhbj5cXG4gICAgICAgIDwvZGl2PlxcbiAgICAgICAgPGJyPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImNvbC1tZC0xMlxcXCI+XFxuICAgICAgICAgICAgICAgPGJyPlxcbiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInJvdyBBbGlnbmVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9XFxcImNvbC1tZC0yIGNvbC14cy0zXFxcIiBuZy1zcmM9XFxcInskIGNoYWxsZW5nZS5jb21wYW55LmxvZ28gJH1cXFwiIGFsdD1cXFwiXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz1cXFwiY29sLW1kLTEwIGNvLXhzLThcXFwiID57JCBjaGFsbGVuZ2UuY29tcGFueS5uYW1lICR9PC9oMz5cXG4gICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgIDwvc3Bhbj5cXG5cXG4gICAgPC9kaXY+XFxuPC9kaXY+XFxuXFxuPCEtLUNoYWxsZW5nZSBkZXRhaWxzLS0+XFxuPGRpdiBjbGFzcz1cXFwiY29sLW1kLTEyXFxcIj5cXG4gICAgPGRpdiBjbGFzcz1cXFwiY29sLW1kLTEyXFxcIj5cXG4gICAgICAgIDxicj5cXG4gICAgICAgIDxkaXYgbmctYmluZC1odG1sPVxcXCJjaGFsbGVuZ2UuZGV0YWlsc1xcXCI+PC9kaXY+XFxuICAgIDwvZGl2PlxcbjwvZGl2PlxcblxcbjxkaXYgY2xhc3M9XFxcImNvbC1tZC0xMlxcXCI+PGJyPjxicj48L2Rpdj5cXG48IS0tSW50ZXJlc3RlZCB1c2Vycy0tPlxcbjxkaXYgY2xhc3M9XFxcImNvbC1tZC0xMiBtYXJnaW4tdG9wLTI1XFxcIiBuZy1pZj1cXFwiY2hhbGxlbmdlLmludGVyZXN0ZWQubGVuZ3RoID4gMFxcXCI+XFxuICAgIDxkaXYgY2xhc3M9XFxcIndlbGwtcmVkXFxcIj57JCBjaGFsbGVuZ2UuaW50ZXJlc3RlZC5sZW5ndGggJH0gSW50ZXJlc3RlZCB1c2VyczwvZGl2PlxcblxcbiAgICA8YSBocmVmPVxcXCIvcHJvZmlsZS97JCBwcm9maWxlLmlkICR9XFxcIiBuZy1yZXBlYXQ9XFxcInByb2ZpbGUgaW4gY2hhbGxlbmdlLmludGVyZXN0ZWQgfCBsaW1pdFRvOjIwXFxcIj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcInJvd1xcXCI+XFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiY29sLW1kLTEgY29sLXhzLTRcXFwiPlxcbiAgICAgICAgICAgICAgICA8Y2lyY2xlLWltYWdlIHNyYz1cXFwieyQgcHJvZmlsZS5waWN0dXJlICR9XFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9XFxcIi9wcm9maWxlL3skIHByb2ZpbGUuaWQgJH1cXFwiXFxuICAgICAgICAgICAgICAgID48L2NpcmNsZS1pbWFnZT5cXG4gICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJjb2wtbWQtMTAgY29sLXhzLThcXFwiPlxcbiAgICAgICAgICAgICAgICA8c3Ryb25nPnskIHByb2ZpbGUudXNlci5maXJzdF9uYW1lKycgJytwcm9maWxlLnVzZXIubGFzdF9uYW1lICR9PC9zdHJvbmc+XFxuICAgICAgICAgICAgICAgIDxicj48c3Bhbj57JCBwcm9maWxlLmNpdHkgJH08L3NwYW4+PGJyPlxcbiAgICAgICAgICAgICAgICA8c3BhbiBuZy1yZXBlYXQ9XFxcInByb2ZpbGVfdGFnIGluIHByb2ZpbGUudGFnc1xcXCI+eyQgcHJvZmlsZV90YWcubmFtZSAkfSZuYnNwOyZuYnNwOzwvc3Bhbj5cXG4gICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDwvZGl2PlxcbiAgICA8L2E+XFxuXFxuPC9kaXY+XFxuXCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9kYXNoYm9hcmQvc3RhdGljL3RlbXBsYXRlcy9jaGFsbGVuZ2VfZGV0YWlscy5odG1sXG4vLyBtb2R1bGUgaWQgPSA2MzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 635:
/* no static exports found */
/* all exports used */
/*!*********************************************************!*\
  !*** ./dashboard/static/templates/project_details.html ***!
  \*********************************************************/
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-md-10 col-md-offset-1 col-sm-10 col-sm-offset-1 col-xs-12 margin-top-20 margin-bottom-30\\\">\\n    <h1>\\n        {$ project.name $}\\n        <button ng-if=\\\"profileid == project.profile.id\\\" class=\\\"btn custom-button pull-right margin-left-10\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteProjectModal\\\">Delete</button>\\n        <a ng-if=\\\"profileid == project.profile.id\\\" href=\\\"{$ '/profile/project/'+project.id $}\\\" class=\\\"btn custom-button pull-right margin-left-10\\\">Edit</a>\\n        <a ng-href=\\\"{$ profileid == project.profile.id ? '/profile/' : '/profile/'+project.profile.id $}\\\" class=\\\"btn custom-button pull-right\\\">Back</a>\\n    </h1>\\n    <div class=\\\"row Aligner\\\">\\n        <div class=\\\"col-sm-6 col-sm-offset-0 col-md-6 col-md-offset-0 col-xs-12\\\">\\n            <div class=\\\"col-md-8 col-md-offset-4\\\">\\n            <circle-image src=\\\"{$ project.picture $}\\\"></circle-image>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\n            <div style=\\\"padding-left:5%;\\\">\\n                <p><i class=\\\"glyphicon glyphicon-globe\\\"></i>&nbsp;<a ng-href=\\\"https://{$ project.project_url $}\\\" target=\\\"_blank\\\">{{ project.project_url }}</a></p>\\n                <p><i class=\\\"glyphicon glyphicon-time\\\"></i>&nbsp;{{ project.start_date | date:'yyyy-MM-dd' }}</p>\\n                <p ng-if=\\\"project.end_date\\\"><i class=\\\"glyphicon glyphicon-time\\\"></i>&nbsp;{{ project.end_date | date:'yyyy-MM-dd' }}</p>\\n                <p ng-if=\\\"!project.end_date\\\"><i class=\\\"glyphicon glyphicon-time\\\"></i>&nbsp;Ongoing project</p>\\n                <p>\\n                    <i class=\\\"fa fa-fw fa-hashtag\\\"></i>&nbsp;\\n                    <i ng-repeat=\\\"tag in project.tags\\\"><span>{{ tag.name }}</span>&nbsp;&nbsp;</i>\\n                </p>\\n                <p><hr></p>\\n                <p>\\n                    <span\\n                        class=\\\"fa fa-thumbs-up pointer\\\"\\n                        ng-class=\\\"{'text-red':is_interested(project), 'text-grey':!is_interested(project)}\\\"\\n                        ng-click=\\\"click_interest(project)\\\"\\n                        style=\\\"font-size:40px;\\\"></span>\\n                    &nbsp;click and thumbs up if you <strong>Like</strong> this project!\\n                </p>\\n                <p class=\\\"small\\\">{$ project.interested.length $} &nbsp;Thumbs up received</p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row margin-top-30\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"well-red\\\">Description</div>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n            <p style=\\\"margin-bottom:20px;\\\">{{ project.description }}</p>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"well-red\\\">Owner</div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <circle-image src=\\\"{$ project.profile.picture $}\\\" style=\\\"width:40%;\\\"></circle-image>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <h4 class=\\\"\\\"> {$ project.profile.user.first_name $} {$ project.profile.user.last_name $}</h4>\\n                    <p class=\\\"\\\"> as: {{project.creator_role}} </p>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\" ng-if=\\\"profileid != project.profile.id\\\">\\n            <div class=\\\"well-red\\\">Collaborators</div>\\n        </div>\\n        <div ng-if=\\\"profileid == project.profile.id\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <!-- ToDo Show collaborators len -->\\n                <div class=\\\"well-red\\\">Collaborators</div>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n                <button class=\\\"btn custom-button pull-right\\\" ng-click=\\\"open_close_form(true)\\\">\\n                    Add\\n                </button>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n                <button class=\\\"btn custom-button pull-right\\\" ng-click=\\\"open_close_form(false)\\\">\\n                    Close\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\" ng-if=\\\"show_form && profileid == project.profile.id\\\">\\n            <form class=\\\"row\\\">\\n                <div class=\\\"group-form col-md-12\\\">\\n                    <div class=\\\"has-feedback has-feedback-left\\\" style=\\\"width:100%\\\">\\n                        <input class=\\\"form-control\\\"\\n                               ng-change=\\\"search_debounced()\\\"\\n                               ng-model-options=\\\"{allowInvalid: true}\\\"\\n                               ng-model=\\\"search_factory.search_filter\\\" id=\\\"filter\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                               placeholder=\\\"Search members for name or e-mail\\\" value=\\\"\\\"\\n                        >\\n                        <i ng-if=\\\"search_factory.is_search_all()\\\" class=\\\"glyphicon glyphicon-search form-control-feedback text-grey\\\"></i>\\n                        <i\\n                                ng-if=\\\"!search_factory.is_search_all()\\\"\\n                                ng-click=\\\"clearAll()\\\"\\n                                class=\\\"glyphicon glyphicon-remove form-control-feedback text-red pointer\\\"\\n                                style=\\\"pointer-events:initial;\\\"\\n                        ></i>\\n                    </div>\\n                </div>\\n            </form>\\n            <!-- SEARCHED NG REPEAT -->\\n            <div class=\\\"row margin-top-20\\\">\\n                <div class=\\\"col-md-4\\\" ng-repeat=\\\"data in results\\\">\\n                    <div class=\\\"\\\">\\n                        <a href=\\\"/profile/{$data['id']$}\\\" target=\\\"_blank\\\">\\n                            <strong><span ng-bind-html=\\\"highlight((data.user.first_name +' '+data.user.last_name), search_factory.search_filter)\\\"></span></strong>\\n                        <br><span ng-bind-html=\\\"highlight((data.city), search_factory.search_filter)\\\"></span>\\n                        </a>\\n                        <!-- avoid auto-invitation -->\\n                        <p ng-if=\\\"data.id != project.profile.id\\\">\\n                            <i ng-if=\\\"!data.status || data.status == 'removed' || data.status == 'declined'\\\" ng-click=\\\"send_collaborator_invitation(project.id, data.id)\\\" class=\\\"glyphicon glyphicon-envelope pointer\\\"></i>\\n                            <i ng-if=\\\"data.status == 'pending'\\\" ng-click=\\\"send_collaborator_invitation(project.id, data.id)\\\" class=\\\"glyphicon glyphicon-refresh pointer\\\"></i>\\n                            <i ng-if=\\\"data.status && data.status == 'accepted'\\\" class=\\\"glyphicon glyphicon-remove pointer\\\"></i>\\n                        </p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" ng-if=\\\"show_invite\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <p class=\\\"small text-grey\\\" style=\\\"margin: 0;\\\">\\n                        <i>Hey it seems the user is not registered yet, invite your friend from <strong><a href=\\\"/invite\\\" class=\\\"text-red\\\" target=\\\"_blank\\\">here</a></strong></i>\\n                    </p>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <hr>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- ALREADY COLLABORATORS -->\\n        <div ng-class=\\\"show_form ? 'col-md-6 col-md-offset-6' : 'col-md-6'\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\" ng-repeat=\\\"contributor in project.project_contributors | limitTo:20\\\" ng-hide=\\\"(contributor.status == 'pending' && profileid != project.profile.id) || contributor.status == 'removed' || contributor.status == 'declined'\\\">\\n                    <div class=\\\"\\\">\\n                        <a href=\\\"/profile/{$ contributor.contributor.id $}\\\" target=\\\"_blank\\\">\\n                            <strong>{$ contributor.contributor.user.first_name+' '+contributor.contributor.user.last_name $}</strong>\\n                        </a>\\n                        <br><span>{$ contributor.contributor.city $}</span><br>\\n                        <p ng-if=\\\"profileid == project.profile.id\\\">\\n                            <i ng-if=\\\"contributor.status == 'pending'\\\" ng-click=\\\"send_collaborator_invitation(project.id, contributor.id)\\\" class=\\\"glyphicon glyphicon-refresh pointer\\\"></i>\\n                            <i ng-click=\\\"remove_collaborator(project.id, contributor.id)\\\" ng-if=\\\"contributor.status == 'accepted'\\\" class=\\\"glyphicon glyphicon-remove pointer\\\"></i>\\n                        </p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row margin-top-20\\\">\\n        <!-- is it been liked? -->\\n        <div>\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"well-red\\\">{$ project.interested.length $} Thumbs up for the project</div>\\n            </div>\\n            <div class=\\\"col-md-3\\\" ng-repeat=\\\"profile in project.interested | limitTo:20\\\">\\n                <a href=\\\"/profile/{$ profile.id $}\\\">\\n                    <div class=\\\"col-md-4 col-xs-4\\\">\\n                        <circle-image src=\\\"{$ profile.picture $}\\\"\\n                                      href=\\\"/profile/{$ profile.id $}\\\"\\n                        ></circle-image>\\n                    </div>\\n                    <div class=\\\"col-md-10 col-xs-8\\\">\\n                        <strong>{$ profile.user.first_name+' '+profile.user.last_name $}</strong>\\n                        <br><span>{$ profile.city $}</span><br>\\n                        <span ng-repeat=\\\"profile_tag in profile.tags\\\">{$ profile_tag.name $}&nbsp;&nbsp;</span>\\n                    </div>\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal fade\\\" id=\\\"deleteProjectModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteProjectModal\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <form ng-submit=\\\"delete_project(url)\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n                    <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Project deletion</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                   <p>This operation cannot be reverted, you will permanenlty loose all your project data saved to OpenMaker Explorer</p>\\n                   <p>Are you sure do you want to delete your project?</p>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">No, Close</button>\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-default\\\" value=\\\"Yes, delete my project\\\">\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 640:
/* no static exports found */
/* all exports used */
/*!**********************************************************!*\
  !*** ./~/ng-infinite-scroll/build/ng-infinite-scroll.js ***!
  \**********************************************************/
/***/ (function(module, exports) {

eval("/* ng-infinite-scroll - v1.3.0 - 2016-06-30 */\nangular.module('infinite-scroll', []).value('THROTTLE_MILLISECONDS', null).directive('infiniteScroll', [\n  '$rootScope', '$window', '$interval', 'THROTTLE_MILLISECONDS', function($rootScope, $window, $interval, THROTTLE_MILLISECONDS) {\n    return {\n      scope: {\n        infiniteScroll: '&',\n        infiniteScrollContainer: '=',\n        infiniteScrollDistance: '=',\n        infiniteScrollDisabled: '=',\n        infiniteScrollUseDocumentBottom: '=',\n        infiniteScrollListenForEvent: '@'\n      },\n      link: function(scope, elem, attrs) {\n        var changeContainer, checkInterval, checkWhenEnabled, container, handleInfiniteScrollContainer, handleInfiniteScrollDisabled, handleInfiniteScrollDistance, handleInfiniteScrollUseDocumentBottom, handler, height, immediateCheck, offsetTop, pageYOffset, scrollDistance, scrollEnabled, throttle, unregisterEventListener, useDocumentBottom, windowElement;\n        windowElement = angular.element($window);\n        scrollDistance = null;\n        scrollEnabled = null;\n        checkWhenEnabled = null;\n        container = null;\n        immediateCheck = true;\n        useDocumentBottom = false;\n        unregisterEventListener = null;\n        checkInterval = false;\n        height = function(elem) {\n          elem = elem[0] || elem;\n          if (isNaN(elem.offsetHeight)) {\n            return elem.document.documentElement.clientHeight;\n          } else {\n            return elem.offsetHeight;\n          }\n        };\n        offsetTop = function(elem) {\n          if (!elem[0].getBoundingClientRect || elem.css('none')) {\n            return;\n          }\n          return elem[0].getBoundingClientRect().top + pageYOffset(elem);\n        };\n        pageYOffset = function(elem) {\n          elem = elem[0] || elem;\n          if (isNaN(window.pageYOffset)) {\n            return elem.document.documentElement.scrollTop;\n          } else {\n            return elem.ownerDocument.defaultView.pageYOffset;\n          }\n        };\n        handler = function() {\n          var containerBottom, containerTopOffset, elementBottom, remaining, shouldScroll;\n          if (container === windowElement) {\n            containerBottom = height(container) + pageYOffset(container[0].document.documentElement);\n            elementBottom = offsetTop(elem) + height(elem);\n          } else {\n            containerBottom = height(container);\n            containerTopOffset = 0;\n            if (offsetTop(container) !== void 0) {\n              containerTopOffset = offsetTop(container);\n            }\n            elementBottom = offsetTop(elem) - containerTopOffset + height(elem);\n          }\n          if (useDocumentBottom) {\n            elementBottom = height((elem[0].ownerDocument || elem[0].document).documentElement);\n          }\n          remaining = elementBottom - containerBottom;\n          shouldScroll = remaining <= height(container) * scrollDistance + 1;\n          if (shouldScroll) {\n            checkWhenEnabled = true;\n            if (scrollEnabled) {\n              if (scope.$$phase || $rootScope.$$phase) {\n                return scope.infiniteScroll();\n              } else {\n                return scope.$apply(scope.infiniteScroll);\n              }\n            }\n          } else {\n            if (checkInterval) {\n              $interval.cancel(checkInterval);\n            }\n            return checkWhenEnabled = false;\n          }\n        };\n        throttle = function(func, wait) {\n          var later, previous, timeout;\n          timeout = null;\n          previous = 0;\n          later = function() {\n            previous = new Date().getTime();\n            $interval.cancel(timeout);\n            timeout = null;\n            return func.call();\n          };\n          return function() {\n            var now, remaining;\n            now = new Date().getTime();\n            remaining = wait - (now - previous);\n            if (remaining <= 0) {\n              $interval.cancel(timeout);\n              timeout = null;\n              previous = now;\n              return func.call();\n            } else {\n              if (!timeout) {\n                return timeout = $interval(later, remaining, 1);\n              }\n            }\n          };\n        };\n        if (THROTTLE_MILLISECONDS != null) {\n          handler = throttle(handler, THROTTLE_MILLISECONDS);\n        }\n        scope.$on('$destroy', function() {\n          container.unbind('scroll', handler);\n          if (unregisterEventListener != null) {\n            unregisterEventListener();\n            unregisterEventListener = null;\n          }\n          if (checkInterval) {\n            return $interval.cancel(checkInterval);\n          }\n        });\n        handleInfiniteScrollDistance = function(v) {\n          return scrollDistance = parseFloat(v) || 0;\n        };\n        scope.$watch('infiniteScrollDistance', handleInfiniteScrollDistance);\n        handleInfiniteScrollDistance(scope.infiniteScrollDistance);\n        handleInfiniteScrollDisabled = function(v) {\n          scrollEnabled = !v;\n          if (scrollEnabled && checkWhenEnabled) {\n            checkWhenEnabled = false;\n            return handler();\n          }\n        };\n        scope.$watch('infiniteScrollDisabled', handleInfiniteScrollDisabled);\n        handleInfiniteScrollDisabled(scope.infiniteScrollDisabled);\n        handleInfiniteScrollUseDocumentBottom = function(v) {\n          return useDocumentBottom = v;\n        };\n        scope.$watch('infiniteScrollUseDocumentBottom', handleInfiniteScrollUseDocumentBottom);\n        handleInfiniteScrollUseDocumentBottom(scope.infiniteScrollUseDocumentBottom);\n        changeContainer = function(newContainer) {\n          if (container != null) {\n            container.unbind('scroll', handler);\n          }\n          container = newContainer;\n          if (newContainer != null) {\n            return container.bind('scroll', handler);\n          }\n        };\n        changeContainer(windowElement);\n        if (scope.infiniteScrollListenForEvent) {\n          unregisterEventListener = $rootScope.$on(scope.infiniteScrollListenForEvent, handler);\n        }\n        handleInfiniteScrollContainer = function(newContainer) {\n          if ((newContainer == null) || newContainer.length === 0) {\n            return;\n          }\n          if (newContainer.nodeType && newContainer.nodeType === 1) {\n            newContainer = angular.element(newContainer);\n          } else if (typeof newContainer.append === 'function') {\n            newContainer = angular.element(newContainer[newContainer.length - 1]);\n          } else if (typeof newContainer === 'string') {\n            newContainer = angular.element(document.querySelector(newContainer));\n          }\n          if (newContainer != null) {\n            return changeContainer(newContainer);\n          } else {\n            throw new Error(\"invalid infinite-scroll-container attribute.\");\n          }\n        };\n        scope.$watch('infiniteScrollContainer', handleInfiniteScrollContainer);\n        handleInfiniteScrollContainer(scope.infiniteScrollContainer || []);\n        if (attrs.infiniteScrollParent != null) {\n          changeContainer(angular.element(elem.parent()));\n        }\n        if (attrs.infiniteScrollImmediateCheck != null) {\n          immediateCheck = scope.$eval(attrs.infiniteScrollImmediateCheck);\n        }\n        return checkInterval = $interval((function() {\n          if (immediateCheck) {\n            handler();\n          }\n          return $interval.cancel(checkInterval);\n        }));\n      }\n    };\n  }\n]);\n\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports) {\n  module.exports = 'infinite-scroll';\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 641:
/* no static exports found */
/* all exports used */
/*!*****************************************!*\
  !*** ./~/ngmap/build/scripts/ng-map.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("(function(root, factory) {\r\nif (true) {\r\nmodule.exports = factory(__webpack_require__(/*! angular */ 36));\r\n} else if (typeof define === \"function\" && define.amd) {\r\ndefine(['angular'], factory);\r\n} else{\r\nfactory(root.angular);\r\n}\r\n}(this, function(angular) {\r\n/**\n * AngularJS Google Maps Ver. 1.18.3\n *\n * The MIT License (MIT)\n * \n * Copyright (c) 2014, 2015, 1016 Allen Kim\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nangular.module('ngMap', []);\n\n/**\n * @ngdoc controller\n * @name MapController\n */\n(function() {\n  'use strict';\n  var Attr2MapOptions;\n\n  var __MapController = function(\n      $scope, $element, $attrs, $parse, $interpolate, _Attr2MapOptions_, NgMap, NgMapPool, escapeRegExp\n    ) {\n    Attr2MapOptions = _Attr2MapOptions_;\n    var vm = this;\n    var exprStartSymbol = $interpolate.startSymbol();\n    var exprEndSymbol = $interpolate.endSymbol();\n\n    vm.mapOptions; /** @memberof __MapController */\n    vm.mapEvents;  /** @memberof __MapController */\n    vm.eventListeners;  /** @memberof __MapController */\n\n    /**\n     * Add an object to the collection of group\n     * @memberof __MapController\n     * @function addObject\n     * @param groupName the name of collection that object belongs to\n     * @param obj  an object to add into a collection, i.e. marker, shape\n     */\n    vm.addObject = function(groupName, obj) {\n      if (vm.map) {\n        vm.map[groupName] = vm.map[groupName] || {};\n        var len = Object.keys(vm.map[groupName]).length;\n        vm.map[groupName][obj.id || len] = obj;\n\n        if (vm.map instanceof google.maps.Map) {\n          //infoWindow.setMap works like infoWindow.open\n          if (groupName != \"infoWindows\" && obj.setMap) {\n            obj.setMap && obj.setMap(vm.map);\n          }\n          if (obj.centered && obj.position) {\n            vm.map.setCenter(obj.position);\n          }\n          (groupName == 'markers') && vm.objectChanged('markers');\n          (groupName == 'customMarkers') && vm.objectChanged('customMarkers');\n        }\n      }\n    };\n\n    /**\n     * Delete an object from the collection and remove from map\n     * @memberof __MapController\n     * @function deleteObject\n     * @param {Array} objs the collection of objects. i.e., map.markers\n     * @param {Object} obj the object to be removed. i.e., marker\n     */\n    vm.deleteObject = function(groupName, obj) {\n      /* delete from group */\n      if (obj.map) {\n        var objs = obj.map[groupName];\n        for (var name in objs) {\n          if (objs[name] === obj) {\n            void 0;\n            google.maps.event.clearInstanceListeners(obj);\n            delete objs[name];\n          }\n        }\n\n        /* delete from map */\n        obj.map && obj.setMap && obj.setMap(null);\n\n        (groupName == 'markers') && vm.objectChanged('markers');\n        (groupName == 'customMarkers') && vm.objectChanged('customMarkers');\n      }\n    };\n\n    /**\n     * @memberof __MapController\n     * @function observeAttrSetObj\n     * @param {Hash} orgAttrs attributes before its initialization\n     * @param {Hash} attrs    attributes after its initialization\n     * @param {Object} obj    map object that an action is to be done\n     * @description watch changes of attribute values and\n     * do appropriate action based on attribute name\n     */\n    vm.observeAttrSetObj = function(orgAttrs, attrs, obj) {\n      if (attrs.noWatcher) {\n        return false;\n      }\n      var attrsToObserve = Attr2MapOptions.getAttrsToObserve(orgAttrs);\n      for (var i=0; i<attrsToObserve.length; i++) {\n        var attrName = attrsToObserve[i];\n        attrs.$observe(attrName, NgMap.observeAndSet(attrName, obj));\n      }\n    };\n\n    /**\n     * @memberof __MapController\n     * @function zoomToIncludeMarkers\n     */\n    vm.zoomToIncludeMarkers = function() {\n      // Only fit to bounds if we have any markers\n      // object.keys is supported in all major browsers (IE9+)\n      if ((vm.map.markers != null && Object.keys(vm.map.markers).length > 0) || (vm.map.customMarkers != null && Object.keys(vm.map.customMarkers).length > 0)) {\n        var bounds = new google.maps.LatLngBounds();\n        for (var k1 in vm.map.markers) {\n          bounds.extend(vm.map.markers[k1].getPosition());\n        }\n        for (var k2 in vm.map.customMarkers) {\n          bounds.extend(vm.map.customMarkers[k2].getPosition());\n        }\n    \t  if (vm.mapOptions.maximumZoom) {\n    \t\t  vm.enableMaximumZoomCheck = true; //enable zoom check after resizing for markers\n    \t  }\n        vm.map.fitBounds(bounds);\n      }\n    };\n\n    /**\n     * @memberof __MapController\n     * @function objectChanged\n     * @param {String} group name of group e.g., markers\n     */\n    vm.objectChanged = function(group) {\n      if ( vm.map &&\n        (group == 'markers' || group == 'customMarkers') &&\n        vm.map.zoomToIncludeMarkers == 'auto'\n      ) {\n        vm.zoomToIncludeMarkers();\n      }\n    };\n\n    /**\n     * @memberof __MapController\n     * @function initializeMap\n     * @description\n     *  . initialize Google map on <div> tag\n     *  . set map options, events, and observers\n     *  . reset zoom to include all (custom)markers\n     */\n    vm.initializeMap = function() {\n      var mapOptions = vm.mapOptions,\n          mapEvents = vm.mapEvents;\n\n      var lazyInitMap = vm.map; //prepared for lazy init\n      vm.map = NgMapPool.getMapInstance($element[0]);\n      NgMap.setStyle($element[0]);\n\n      // set objects for lazyInit\n      if (lazyInitMap) {\n\n        /**\n         * rebuild mapOptions for lazyInit\n         * because attributes values might have been changed\n         */\n        var filtered = Attr2MapOptions.filter($attrs);\n        var options = Attr2MapOptions.getOptions(filtered);\n        var controlOptions = Attr2MapOptions.getControlOptions(filtered);\n        mapOptions = angular.extend(options, controlOptions);\n        void 0;\n\n        for (var group in lazyInitMap) {\n          var groupMembers = lazyInitMap[group]; //e.g. markers\n          if (typeof groupMembers == 'object') {\n            for (var id in groupMembers) {\n              vm.addObject(group, groupMembers[id]);\n            }\n          }\n        }\n        vm.map.showInfoWindow = vm.showInfoWindow;\n        vm.map.hideInfoWindow = vm.hideInfoWindow;\n      }\n\n      // set options\n      mapOptions.zoom = mapOptions.zoom || 15;\n      var center = mapOptions.center;\n      var exprRegExp = new RegExp(escapeRegExp(exprStartSymbol) + '.*' + escapeRegExp(exprEndSymbol));\n\n      if (!mapOptions.center ||\n        ((typeof center === 'string') && center.match(exprRegExp))\n      ) {\n        mapOptions.center = new google.maps.LatLng(0, 0);\n      } else if( (typeof center === 'string') && center.match(/^[0-9.-]*,[0-9.-]*$/) ){\n        var lat = parseFloat(center.split(',')[0]);\n        var lng = parseFloat(center.split(',')[1]);\n        mapOptions.center = new google.maps.LatLng(lat, lng);\n      } else if (!(center instanceof google.maps.LatLng)) {\n        var geoCenter = mapOptions.center;\n        delete mapOptions.center;\n        NgMap.getGeoLocation(geoCenter, mapOptions.geoLocationOptions).\n          then(function (latlng) {\n            vm.map.setCenter(latlng);\n            var geoCallback = mapOptions.geoCallback;\n            geoCallback && $parse(geoCallback)($scope);\n          }, function () {\n            if (mapOptions.geoFallbackCenter) {\n              vm.map.setCenter(mapOptions.geoFallbackCenter);\n            }\n          });\n      }\n      vm.map.setOptions(mapOptions);\n\n      // set events\n      for (var eventName in mapEvents) {\n        var event = mapEvents[eventName];\n        var listener = google.maps.event.addListener(vm.map, eventName, event);\n        vm.eventListeners[eventName] = listener;\n      }\n\n      // set observers\n      vm.observeAttrSetObj(orgAttrs, $attrs, vm.map);\n      vm.singleInfoWindow = mapOptions.singleInfoWindow;\n\n      google.maps.event.trigger(vm.map, 'resize');\n\n      google.maps.event.addListenerOnce(vm.map, \"idle\", function () {\n        NgMap.addMap(vm);\n        if (mapOptions.zoomToIncludeMarkers) {\n          vm.zoomToIncludeMarkers();\n        }\n        //TODO: it's for backward compatibiliy. will be removed\n        $scope.map = vm.map;\n        $scope.$emit('mapInitialized', vm.map);\n\n        //callback\n        if ($attrs.mapInitialized) {\n          $parse($attrs.mapInitialized)($scope, {map: vm.map});\n        }\n      });\n\n\t  //add maximum zoom listeners if zoom-to-include-markers and and maximum-zoom are valid attributes\n\t  if (mapOptions.zoomToIncludeMarkers && mapOptions.maximumZoom) {\n\t    google.maps.event.addListener(vm.map, 'zoom_changed', function() {\n          if (vm.enableMaximumZoomCheck == true) {\n\t\t\tvm.enableMaximumZoomCheck = false;\n\t        google.maps.event.addListenerOnce(vm.map, 'bounds_changed', function() {\n\t\t      vm.map.setZoom(Math.min(mapOptions.maximumZoom, vm.map.getZoom()));\n\t\t    });\n\t  \t  }\n\t    });\n\t  }\n    };\n\n    $scope.google = google; //used by $scope.eval to avoid eval()\n\n    /**\n     * get map options and events\n     */\n    var orgAttrs = Attr2MapOptions.orgAttributes($element);\n    var filtered = Attr2MapOptions.filter($attrs);\n    var options = Attr2MapOptions.getOptions(filtered, {scope: $scope});\n    var controlOptions = Attr2MapOptions.getControlOptions(filtered);\n    var mapOptions = angular.extend(options, controlOptions);\n    var mapEvents = Attr2MapOptions.getEvents($scope, filtered);\n    void 0;\n    Object.keys(mapEvents).length && void 0;\n\n    vm.mapOptions = mapOptions;\n    vm.mapEvents = mapEvents;\n    vm.eventListeners = {};\n\n    if (options.lazyInit) { // allows controlled initialization\n      // parse angular expression for dynamic ids\n      if (!!$attrs.id &&\n      \t  // starts with, at position 0\n\t  $attrs.id.indexOf(exprStartSymbol, 0) === 0 &&\n\t  // ends with\n\t  $attrs.id.indexOf(exprEndSymbol, $attrs.id.length - exprEndSymbol.length) !== -1) {\n        var idExpression = $attrs.id.slice(2,-2);\n        var mapId = $parse(idExpression)($scope);\n      } else {\n        var mapId = $attrs.id;\n      }\n      vm.map = {id: mapId}; //set empty, not real, map\n      NgMap.addMap(vm);\n    } else {\n      vm.initializeMap();\n    }\n\n    //Trigger Resize\n    if(options.triggerResize) {\n      google.maps.event.trigger(vm.map, 'resize');\n    }\n\n    $element.bind('$destroy', function() {\n      NgMapPool.returnMapInstance(vm.map);\n      NgMap.deleteMap(vm);\n    });\n  }; // __MapController\n\n  __MapController.$inject = [\n    '$scope', '$element', '$attrs', '$parse', '$interpolate', 'Attr2MapOptions', 'NgMap', 'NgMapPool', 'escapeRegexpFilter'\n  ];\n  angular.module('ngMap').controller('__MapController', __MapController);\n})();\n\n/**\n * @ngdoc directive\n * @name bicycling-layer\n * @param Attr2Options {service}\n *   convert html attribute to Google map api options\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n *\n *   <map zoom=\"13\" center=\"34.04924594193164, -118.24104309082031\">\n *     <bicycling-layer></bicycling-layer>\n *    </map>\n */\n(function() {\n  'use strict';\n  var parser;\n\n  var linkFunc = function(scope, element, attrs, mapController) {\n    mapController = mapController[0]||mapController[1];\n    var orgAttrs = parser.orgAttributes(element);\n    var filtered = parser.filter(attrs);\n    var options = parser.getOptions(filtered, {scope: scope});\n    var events = parser.getEvents(scope, filtered);\n\n    void 0;\n\n    var layer = getLayer(options, events);\n    mapController.addObject('bicyclingLayers', layer);\n    mapController.observeAttrSetObj(orgAttrs, attrs, layer);  //observers\n    element.bind('$destroy', function() {\n      mapController.deleteObject('bicyclingLayers', layer);\n    });\n  };\n\n  var getLayer = function(options, events) {\n    var layer = new google.maps.BicyclingLayer(options);\n    for (var eventName in events) {\n      google.maps.event.addListener(layer, eventName, events[eventName]);\n    }\n    return layer;\n  };\n\n  var bicyclingLayer= function(Attr2MapOptions) {\n    parser = Attr2MapOptions;\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n      link: linkFunc\n     };\n  };\n  bicyclingLayer.$inject = ['Attr2MapOptions'];\n\n  angular.module('ngMap').directive('bicyclingLayer', bicyclingLayer);\n})();\n\n/**\n * @ngdoc directive\n * @name custom-control\n * @param Attr2Options {service} convert html attribute to Google map api options\n * @param $compile {service} AngularJS $compile service\n * @description\n *   Build custom control and set to the map with position\n *\n *   Requires:  map directive\n *\n *   Restrict To:  Element\n *\n * @attr {String} position position of this control\n *        i.e. TOP_RIGHT\n * @attr {Number} index index of the control\n * @example\n *\n * Example:\n *  <map center=\"41.850033,-87.6500523\" zoom=\"3\">\n *    <custom-control id=\"home\" position=\"TOP_LEFT\" index=\"1\">\n *      <div style=\"background-color: white;\">\n *        <b>Home</b>\n *      </div>\n *    </custom-control>\n *  </map>\n *\n */\n(function() {\n  'use strict';\n  var parser, NgMap;\n\n  var linkFunc = function(scope, element, attrs, mapController, $transclude) {\n    mapController = mapController[0]||mapController[1];\n    var filtered = parser.filter(attrs);\n    var options = parser.getOptions(filtered, {scope: scope});\n    var events = parser.getEvents(scope, filtered);\n\n    /**\n     * build a custom control element\n     */\n    var customControlEl = element[0].parentElement.removeChild(element[0]);\n    var content = $transclude();\n    angular.element(customControlEl).append(content);\n\n    /**\n     * set events\n     */\n    for (var eventName in events) {\n      google.maps.event.addDomListener(customControlEl, eventName, events[eventName]);\n    }\n\n    mapController.addObject('customControls', customControlEl);\n    var position = options.position;\n    mapController.map.controls[google.maps.ControlPosition[position]].push(customControlEl);\n\n    element.bind('$destroy', function() {\n      mapController.deleteObject('customControls', customControlEl);\n    });\n  };\n\n  var customControl =  function(Attr2MapOptions, _NgMap_)  {\n    parser = Attr2MapOptions, NgMap = _NgMap_;\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n      link: linkFunc,\n      transclude: true\n    }; // return\n  };\n  customControl.$inject = ['Attr2MapOptions', 'NgMap'];\n\n  angular.module('ngMap').directive('customControl', customControl);\n})();\n\n/**\n * @ngdoc directive\n * @memberof ngmap\n * @name custom-marker\n * @param Attr2Options {service} convert html attribute to Google map api options\n * @param $timeout {service} AngularJS $timeout\n * @description\n *   Marker with html\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @attr {String} position required, position on map\n * @attr {Number} z-index optional\n * @attr {Boolean} visible optional\n * @example\n *\n * Example:\n *   <map center=\"41.850033,-87.6500523\" zoom=\"3\">\n *     <custom-marker position=\"41.850033,-87.6500523\">\n *       <div>\n *         <b>Home</b>\n *       </div>\n *     </custom-marker>\n *   </map>\n *\n */\n/* global document */\n(function() {\n  'use strict';\n  var parser, $timeout, $compile, NgMap;\n\n  var CustomMarker = function(options) {\n    options = options || {};\n\n    this.el = document.createElement('div');\n    this.el.style.display = 'inline-block';\n    this.el.style.visibility = \"hidden\";\n    this.visible = true;\n    for (var key in options) { /* jshint ignore:line */\n     this[key] = options[key];\n    }\n  };\n\n  var setCustomMarker = function() {\n\n    CustomMarker.prototype = new google.maps.OverlayView();\n\n    CustomMarker.prototype.setContent = function(html, scope) {\n      this.el.innerHTML = html;\n      this.el.style.position = 'absolute';\n      if (scope) {\n        $compile(angular.element(this.el).contents())(scope);\n      }\n    };\n\n    CustomMarker.prototype.getDraggable = function() {\n      return this.draggable;\n    };\n\n    CustomMarker.prototype.setDraggable = function(draggable) {\n      this.draggable = draggable;\n    };\n\n    CustomMarker.prototype.getPosition = function() {\n      return this.position;\n    };\n\n    CustomMarker.prototype.setPosition = function(position) {\n      position && (this.position = position); /* jshint ignore:line */\n      var _this = this;\n      if (this.getProjection() && typeof this.position.lng == 'function') {\n        void 0;\n        var setPosition = function() {\n          if (!_this.getProjection()) { return; }\n          var posPixel = _this.getProjection().fromLatLngToDivPixel(_this.position);\n          var x = Math.round(posPixel.x - (_this.el.offsetWidth/2));\n          var y = Math.round(posPixel.y - _this.el.offsetHeight - 10); // 10px for anchor\n          _this.el.style.left = x + \"px\";\n          _this.el.style.top = y + \"px\";\n          _this.el.style.visibility = \"visible\";\n        };\n        if (_this.el.offsetWidth && _this.el.offsetHeight) {\n          setPosition();\n        } else {\n          //delayed left/top calculation when width/height are not set instantly\n          $timeout(setPosition, 300);\n        }\n      }\n    };\n\n    CustomMarker.prototype.setZIndex = function(zIndex) {\n      zIndex && (this.zIndex = zIndex); /* jshint ignore:line */\n      this.el.style.zIndex = this.zIndex;\n    };\n\n    CustomMarker.prototype.getVisible = function() {\n      return this.visible;\n    };\n\n    CustomMarker.prototype.setVisible = function(visible) {\n      this.el.style.display = visible ? 'inline-block' : 'none';\n      this.visible = visible;\n    };\n\n    CustomMarker.prototype.addClass = function(className) {\n      var classNames = this.el.className.trim().split(' ');\n      (classNames.indexOf(className) == -1) && classNames.push(className); /* jshint ignore:line */\n      this.el.className = classNames.join(' ');\n    };\n\n    CustomMarker.prototype.removeClass = function(className) {\n      var classNames = this.el.className.split(' ');\n      var index = classNames.indexOf(className);\n      (index > -1) && classNames.splice(index, 1); /* jshint ignore:line */\n      this.el.className = classNames.join(' ');\n    };\n\n    CustomMarker.prototype.onAdd = function() {\n      this.getPanes().overlayMouseTarget.appendChild(this.el);\n    };\n\n    CustomMarker.prototype.draw = function() {\n      this.setPosition();\n      this.setZIndex(this.zIndex);\n      this.setVisible(this.visible);\n    };\n\n    CustomMarker.prototype.onRemove = function() {\n      this.el.parentNode.removeChild(this.el);\n      //this.el = null;\n    };\n  };\n\n  var linkFunc = function(orgHtml, varsToWatch) {\n    //console.log('orgHtml', orgHtml, 'varsToWatch', varsToWatch);\n\n    return function(scope, element, attrs, mapController) {\n      mapController = mapController[0]||mapController[1];\n      var orgAttrs = parser.orgAttributes(element);\n\n      var filtered = parser.filter(attrs);\n      var options = parser.getOptions(filtered, {scope: scope});\n      var events = parser.getEvents(scope, filtered);\n\n      /**\n       * build a custom marker element\n       */\n      element[0].style.display = 'none';\n      void 0;\n      var customMarker = new CustomMarker(options);\n\n      $timeout(function() { //apply contents, class, and location after it is compiled\n\n        scope.$watch('[' + varsToWatch.join(',') + ']', function() {\n          customMarker.setContent(orgHtml, scope);\n        }, true);\n\n        customMarker.setContent(element[0].innerHTML, scope);\n        var classNames = element[0].firstElementChild.className;\n        customMarker.addClass('custom-marker');\n        customMarker.addClass(classNames);\n        void 0;\n\n        if (!(options.position instanceof google.maps.LatLng)) {\n          NgMap.getGeoLocation(options.position).then(\n                function(latlng) {\n                  customMarker.setPosition(latlng);\n                }\n          );\n        }\n\n      });\n\n      void 0;\n      for (var eventName in events) { /* jshint ignore:line */\n        google.maps.event.addDomListener(\n          customMarker.el, eventName, events[eventName]);\n      }\n      mapController.addObject('customMarkers', customMarker);\n\n      //set observers\n      mapController.observeAttrSetObj(orgAttrs, attrs, customMarker);\n\n      element.bind('$destroy', function() {\n        //Is it required to remove event listeners when DOM is removed?\n        mapController.deleteObject('customMarkers', customMarker);\n      });\n\n    }; // linkFunc\n  };\n\n\n  var customMarkerDirective = function(\n      _$timeout_, _$compile_, $interpolate, Attr2MapOptions, _NgMap_, escapeRegExp\n    )  {\n    parser = Attr2MapOptions;\n    $timeout = _$timeout_;\n    $compile = _$compile_;\n    NgMap = _NgMap_;\n\n    var exprStartSymbol = $interpolate.startSymbol();\n    var exprEndSymbol = $interpolate.endSymbol();\n    var exprRegExp = new RegExp(escapeRegExp(exprStartSymbol) + '([^' + exprEndSymbol.substring(0, 1) + ']+)' + escapeRegExp(exprEndSymbol), 'g');\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n      compile: function(element) {\n        setCustomMarker();\n        element[0].style.display ='none';\n        var orgHtml = element.html();\n        var matches = orgHtml.match(exprRegExp);\n        var varsToWatch = [];\n        //filter out that contains '::', 'this.'\n        (matches || []).forEach(function(match) {\n          var toWatch = match.replace(exprStartSymbol,'').replace(exprEndSymbol,'');\n          if (match.indexOf('::') == -1 &&\n            match.indexOf('this.') == -1 &&\n            varsToWatch.indexOf(toWatch) == -1) {\n            varsToWatch.push(match.replace(exprStartSymbol,'').replace(exprEndSymbol,''));\n          }\n        });\n\n        return linkFunc(orgHtml, varsToWatch);\n      }\n    }; // return\n  };// function\n  customMarkerDirective.$inject =\n    ['$timeout', '$compile', '$interpolate', 'Attr2MapOptions', 'NgMap', 'escapeRegexpFilter'];\n\n  angular.module('ngMap').directive('customMarker', customMarkerDirective);\n})();\n\n/**\n * @ngdoc directive\n * @name directions\n * @description\n *   Enable directions on map.\n *   e.g., origin, destination, draggable, waypoints, etc\n *\n *   Requires:  map directive\n *\n *   Restrict To:  Element\n *\n * @attr {String} DirectionsRendererOptions\n *   [Any DirectionsRendererOptions](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRendererOptions)\n * @attr {String} DirectionsRequestOptions\n *   [Any DirectionsRequest options](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRequest)\n * @example\n *  <map zoom=\"14\" center=\"37.7699298, -122.4469157\">\n *    <directions\n *      draggable=\"true\"\n *      panel=\"directions-panel\"\n *      travel-mode=\"{{travelMode}}\"\n *      waypoints=\"[{location:'kingston', stopover:true}]\"\n *      origin=\"{{origin}}\"\n *      destination=\"{{destination}}\">\n *    </directions>\n *  </map>\n */\n/* global document */\n(function() {\n  'use strict';\n  var NgMap, $timeout, NavigatorGeolocation;\n\n  var getDirectionsRenderer = function(options, events) {\n    if (options.panel) {\n      options.panel = document.getElementById(options.panel) ||\n        document.querySelector(options.panel);\n    }\n    var renderer = new google.maps.DirectionsRenderer(options);\n    for (var eventName in events) {\n      google.maps.event.addListener(renderer, eventName, events[eventName]);\n    }\n    return renderer;\n  };\n\n  var updateRoute = function(renderer, options) {\n    var directionsService = new google.maps.DirectionsService();\n\n    /* filter out valid keys only for DirectionsRequest object*/\n    var request = options;\n    request.travelMode = request.travelMode || 'DRIVING';\n    var validKeys = [\n      'origin', 'destination', 'travelMode', 'transitOptions', 'unitSystem',\n      'durationInTraffic', 'waypoints', 'optimizeWaypoints', \n      'provideRouteAlternatives', 'avoidHighways', 'avoidTolls', 'region'\n    ];\n    for(var key in request){\n      (validKeys.indexOf(key) === -1) && (delete request[key]);\n    }\n\n    if(request.waypoints) {\n      // Check fo valid values\n      if(request.waypoints == \"[]\" || request.waypoints === \"\") {\n        delete request.waypoints;\n      }\n    }\n\n    var showDirections = function(request) {\n      directionsService.route(request, function(response, status) {\n        if (status == google.maps.DirectionsStatus.OK) {\n          $timeout(function() {\n            renderer.setDirections(response);\n          });\n        }\n      });\n    };\n\n    if (request.origin && request.destination) {\n      if (request.origin == 'current-location') {\n        NavigatorGeolocation.getCurrentPosition().then(function(ll) {\n          request.origin = new google.maps.LatLng(ll.coords.latitude, ll.coords.longitude);\n          showDirections(request);\n        });\n      } else if (request.destination == 'current-location') {\n        NavigatorGeolocation.getCurrentPosition().then(function(ll) {\n          request.destination = new google.maps.LatLng(ll.coords.latitude, ll.coords.longitude);\n          showDirections(request);\n        });\n      } else {\n        showDirections(request);\n      }\n    }\n  };\n\n  var directions = function(\n      Attr2MapOptions, _$timeout_, _NavigatorGeolocation_, _NgMap_) {\n    var parser = Attr2MapOptions;\n    NgMap = _NgMap_;\n    $timeout = _$timeout_;\n    NavigatorGeolocation = _NavigatorGeolocation_;\n\n    var linkFunc = function(scope, element, attrs, mapController) {\n      mapController = mapController[0]||mapController[1];\n\n      var orgAttrs = parser.orgAttributes(element);\n      var filtered = parser.filter(attrs);\n      var options = parser.getOptions(filtered, {scope: scope});\n      var events = parser.getEvents(scope, filtered);\n      var attrsToObserve = parser.getAttrsToObserve(orgAttrs);\n\n      var renderer = getDirectionsRenderer(options, events);\n      mapController.addObject('directionsRenderers', renderer);\n\n      attrsToObserve.forEach(function(attrName) {\n        (function(attrName) {\n          attrs.$observe(attrName, function(val) {\n            if (attrName == 'panel') {\n              $timeout(function(){\n                var panel =\n                  document.getElementById(val) || document.querySelector(val);\n                void 0;\n                panel && renderer.setPanel(panel);\n              });\n            } else if (options[attrName] !== val) { //apply only if changed\n              var optionValue = parser.toOptionValue(val, {key: attrName});\n              void 0;\n              options[attrName] = optionValue;\n              updateRoute(renderer, options);\n            }\n          });\n        })(attrName);\n      });\n\n      NgMap.getMap().then(function() {\n        updateRoute(renderer, options);\n      });\n      element.bind('$destroy', function() {\n        mapController.deleteObject('directionsRenderers', renderer);\n      });\n    };\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n      link: linkFunc\n    };\n  }; // var directions\n  directions.$inject =\n    ['Attr2MapOptions', '$timeout', 'NavigatorGeolocation', 'NgMap'];\n\n  angular.module('ngMap').directive('directions', directions);\n})();\n\n\n/**\n * @ngdoc directive\n * @name drawing-manager\n * @param Attr2Options {service} convert html attribute to Google map api options\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n * Example:\n *\n *  <map zoom=\"13\" center=\"37.774546, -122.433523\" map-type-id=\"SATELLITE\">\n *    <drawing-manager\n *      on-overlaycomplete=\"onMapOverlayCompleted()\"\n *      position=\"ControlPosition.TOP_CENTER\"\n *      drawingModes=\"POLYGON,CIRCLE\"\n *      drawingControl=\"true\"\n *      circleOptions=\"fillColor: '#FFFF00';fillOpacity: 1;strokeWeight: 5;clickable: false;zIndex: 1;editable: true;\" >\n *    </drawing-manager>\n *  </map>\n *\n *  TODO: Add remove button.\n *  currently, for our solution, we have the shapes/markers in our own\n *  controller, and we use some css classes to change the shape button\n *  to a remove button (<div>X</div>) and have the remove operation in our own controller.\n */\n(function() {\n  'use strict';\n  angular.module('ngMap').directive('drawingManager', [\n    'Attr2MapOptions', function(Attr2MapOptions) {\n    var parser = Attr2MapOptions;\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var filtered = parser.filter(attrs);\n        var options = parser.getOptions(filtered, {scope: scope});\n        var controlOptions = parser.getControlOptions(filtered);\n        var events = parser.getEvents(scope, filtered);\n\n        /**\n         * set options\n         */\n        var drawingManager = new google.maps.drawing.DrawingManager({\n          drawingMode: options.drawingmode,\n          drawingControl: options.drawingcontrol,\n          drawingControlOptions: controlOptions.drawingControlOptions,\n          circleOptions:options.circleoptions,\n          markerOptions:options.markeroptions,\n          polygonOptions:options.polygonoptions,\n          polylineOptions:options.polylineoptions,\n          rectangleOptions:options.rectangleoptions\n        });\n\n        //Observers\n        attrs.$observe('drawingControlOptions', function (newValue) {\n          drawingManager.drawingControlOptions = parser.getControlOptions({drawingControlOptions: newValue}).drawingControlOptions;\n          drawingManager.setDrawingMode(null);\n          drawingManager.setMap(mapController.map);\n        });\n\n\n        /**\n         * set events\n         */\n        for (var eventName in events) {\n          google.maps.event.addListener(drawingManager, eventName, events[eventName]);\n        }\n\n        mapController.addObject('mapDrawingManager', drawingManager);\n\n        element.bind('$destroy', function() {\n          mapController.deleteObject('mapDrawingManager', drawingManager);\n        });\n      }\n    }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @name dynamic-maps-engine-layer\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n * Example:\n *   <map zoom=\"14\" center=\"[59.322506, 18.010025]\">\n *     <dynamic-maps-engine-layer\n *       layer-id=\"06673056454046135537-08896501997766553811\">\n *     </dynamic-maps-engine-layer>\n *    </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('dynamicMapsEngineLayer', [\n    'Attr2MapOptions', function(Attr2MapOptions) {\n    var parser = Attr2MapOptions;\n\n    var getDynamicMapsEngineLayer = function(options, events) {\n      var layer = new google.maps.visualization.DynamicMapsEngineLayer(options);\n\n      for (var eventName in events) {\n        google.maps.event.addListener(layer, eventName, events[eventName]);\n      }\n\n      return layer;\n    };\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var filtered = parser.filter(attrs);\n        var options = parser.getOptions(filtered, {scope: scope});\n        var events = parser.getEvents(scope, filtered, events);\n\n        var layer = getDynamicMapsEngineLayer(options, events);\n        mapController.addObject('mapsEngineLayers', layer);\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @name fusion-tables-layer\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n * Example:\n *   <map zoom=\"11\" center=\"41.850033, -87.6500523\">\n *     <fusion-tables-layer query=\"{\n *       select: 'Geocodable address',\n *       from: '1mZ53Z70NsChnBMm-qEYmSDOvLXgrreLTkQUvvg'}\">\n *     </fusion-tables-layer>\n *   </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('fusionTablesLayer', [\n    'Attr2MapOptions', function(Attr2MapOptions) {\n    var parser = Attr2MapOptions;\n\n    var getLayer = function(options, events) {\n      var layer = new google.maps.FusionTablesLayer(options);\n\n      for (var eventName in events) {\n        google.maps.event.addListener(layer, eventName, events[eventName]);\n      }\n\n      return layer;\n    };\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var filtered = parser.filter(attrs);\n        var options = parser.getOptions(filtered, {scope: scope});\n        var events = parser.getEvents(scope, filtered, events);\n        void 0;\n\n        var layer = getLayer(options, events);\n        mapController.addObject('fusionTablesLayers', layer);\n        element.bind('$destroy', function() {\n          mapController.deleteObject('fusionTablesLayers', layer);\n        });\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @name heatmap-layer\n * @param Attr2Options {service} convert html attribute to Google map api options\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n *\n * <map zoom=\"11\" center=\"[41.875696,-87.624207]\">\n *   <heatmap-layer data=\"taxiData\"></heatmap-layer>\n * </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('heatmapLayer', [\n    'Attr2MapOptions', '$window', function(Attr2MapOptions, $window) {\n    var parser = Attr2MapOptions;\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var filtered = parser.filter(attrs);\n\n        /**\n         * set options\n         */\n        var options = parser.getOptions(filtered, {scope: scope});\n        options.data = $window[attrs.data] || scope[attrs.data];\n        if (options.data instanceof Array) {\n          options.data = new google.maps.MVCArray(options.data);\n        } else {\n          throw \"invalid heatmap data\";\n        }\n        var layer = new google.maps.visualization.HeatmapLayer(options);\n\n        /**\n         * set events\n         */\n        var events = parser.getEvents(scope, filtered);\n        void 0;\n\n        mapController.addObject('heatmapLayers', layer);\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @name info-window\n * @param Attr2MapOptions {service}\n *   convert html attribute to Google map api options\n * @param $compile {service} $compile service\n * @description\n *  Defines infoWindow and provides compile method\n *\n *  Requires:  map directive\n *\n *  Restrict To:  Element\n *\n *  NOTE: this directive should **NOT** be used with `ng-repeat`\n *  because InfoWindow itself is a template, and a template must be\n *  reused by each marker, thus, should not be redefined repeatedly\n *  by `ng-repeat`.\n *\n * @attr {Boolean} visible\n *   Indicates to show it when map is initialized\n * @attr {Boolean} visible-on-marker\n *   Indicates to show it on a marker when map is initialized\n * @attr {Expression} geo-callback\n *   if position is an address, the expression is will be performed\n *   when geo-lookup is successful. e.g., geo-callback=\"showDetail()\"\n * @attr {String} &lt;InfoWindowOption> Any InfoWindow options,\n *   https://developers.google.com/maps/documentation/javascript/reference?csw=1#InfoWindowOptions\n * @attr {String} &lt;InfoWindowEvent> Any InfoWindow events,\n *   https://developers.google.com/maps/documentation/javascript/reference\n * @example\n * Usage:\n *   <map MAP_ATTRIBUTES>\n *    <info-window id=\"foo\" ANY_OPTIONS ANY_EVENTS\"></info-window>\n *   </map>\n *\n * Example:\n *  <map center=\"41.850033,-87.6500523\" zoom=\"3\">\n *    <info-window id=\"1\" position=\"41.850033,-87.6500523\" >\n *      <div ng-non-bindable>\n *        Chicago, IL<br/>\n *        LatLng: {{chicago.lat()}}, {{chicago.lng()}}, <br/>\n *        World Coordinate: {{worldCoordinate.x}}, {{worldCoordinate.y}}, <br/>\n *        Pixel Coordinate: {{pixelCoordinate.x}}, {{pixelCoordinate.y}}, <br/>\n *        Tile Coordinate: {{tileCoordinate.x}}, {{tileCoordinate.y}} at Zoom Level {{map.getZoom()}}\n *      </div>\n *    </info-window>\n *  </map>\n */\n/* global google */\n(function() {\n  'use strict';\n\n  var infoWindow = function(Attr2MapOptions, $compile, $q, $templateRequest, $timeout, $parse, NgMap)  {\n    var parser = Attr2MapOptions;\n\n    var getInfoWindow = function(options, events, element) {\n      var infoWindow;\n\n      /**\n       * set options\n       */\n      if (options.position && !(options.position instanceof google.maps.LatLng)) {\n        delete options.position;\n      }\n      infoWindow = new google.maps.InfoWindow(options);\n\n      /**\n       * set events\n       */\n      for (var eventName in events) {\n        if (eventName) {\n          google.maps.event.addListener(infoWindow, eventName, events[eventName]);\n        }\n      }\n\n      /**\n       * set template and template-related functions\n       * it must have a container element with ng-non-bindable\n       */\n      var templatePromise = $q(function(resolve) {\n        if (angular.isString(element)) {\n          $templateRequest(element).then(function (requestedTemplate) {\n            resolve(angular.element(requestedTemplate).wrap('<div>').parent());\n          }, function(message) {\n            throw \"info-window template request failed: \" + message;\n          });\n        }\n        else {\n          resolve(element);\n        }\n      }).then(function(resolvedTemplate) {\n        var template = resolvedTemplate.html().trim();\n        if (angular.element(template).length != 1) {\n          throw \"info-window working as a template must have a container\";\n        }\n        infoWindow.__template = template.replace(/\\s?ng-non-bindable[='\"]+/,\"\");\n      });\n\n      infoWindow.__open = function(map, scope, anchor) {\n        templatePromise.then(function() {\n          $timeout(function() {\n            anchor && (scope.anchor = anchor);\n            var el = $compile(infoWindow.__template)(scope);\n            infoWindow.setContent(el[0]);\n            scope.$apply();\n            if (anchor && anchor.getPosition) {\n              infoWindow.open(map, anchor);\n            } else if (anchor && anchor instanceof google.maps.LatLng) {\n              infoWindow.open(map);\n              infoWindow.setPosition(anchor);\n            } else {\n              infoWindow.open(map);\n            }\n            var infoWindowContainerEl = infoWindow.content.parentElement.parentElement.parentElement;\n            infoWindowContainerEl.className = \"ng-map-info-window\";\n          });\n        });\n      };\n\n      return infoWindow;\n    };\n\n    var linkFunc = function(scope, element, attrs, mapController) {\n      mapController = mapController[0]||mapController[1];\n\n      element.css('display','none');\n\n      var orgAttrs = parser.orgAttributes(element);\n      var filtered = parser.filter(attrs);\n      var options = parser.getOptions(filtered, {scope: scope});\n      var events = parser.getEvents(scope, filtered);\n\n      var infoWindow = getInfoWindow(options, events, options.template || element);\n      var address;\n      if (options.position && !(options.position instanceof google.maps.LatLng)) {\n        address = options.position;\n      }\n      if (address) {\n        NgMap.getGeoLocation(address).then(function(latlng) {\n          infoWindow.setPosition(latlng);\n          infoWindow.__open(mapController.map, scope, latlng);\n          var geoCallback = attrs.geoCallback;\n          geoCallback && $parse(geoCallback)(scope);\n        });\n      }\n\n      mapController.addObject('infoWindows', infoWindow);\n      mapController.observeAttrSetObj(orgAttrs, attrs, infoWindow);\n\n      mapController.showInfoWindow =\n      mapController.map.showInfoWindow = mapController.showInfoWindow ||\n        function(p1, p2, p3) { //event, id, marker\n          var id = typeof p1 == 'string' ? p1 : p2;\n          var marker = typeof p1 == 'string' ? p2 : p3;\n          if (typeof marker == 'string') {\n            //Check if markers if defined to avoid odd 'undefined' errors\n            if (\n              typeof mapController.map.markers != \"undefined\"\n              && typeof mapController.map.markers[marker] != \"undefined\") {\n                marker = mapController.map.markers[marker];\n            } else if (\n              //additionally check if that marker is a custom marker\n              typeof mapController.map.customMarkers !== \"undefined\"\n              && typeof mapController.map.customMarkers[marker] !== \"undefined\") {\n                marker = mapController.map.customMarkers[marker];\n            } else {\n              //Better error output if marker with that id is not defined\n              throw new Error(\"Cant open info window for id \" + marker + \". Marker or CustomMarker is not defined\")\n            }\n          }\n\n          var infoWindow = mapController.map.infoWindows[id];\n          var anchor = marker ? marker : (this.getPosition ? this : null);\n          infoWindow.__open(mapController.map, scope, anchor);\n          if(mapController.singleInfoWindow) {\n            if(mapController.lastInfoWindow) {\n              scope.hideInfoWindow(mapController.lastInfoWindow);\n            }\n            mapController.lastInfoWindow = id;\n          }\n        };\n\n      mapController.hideInfoWindow =\n      mapController.map.hideInfoWindow = mapController.hideInfoWindow ||\n        function(p1, p2) {\n          var id = typeof p1 == 'string' ? p1 : p2;\n          var infoWindow = mapController.map.infoWindows[id];\n          infoWindow.close();\n        };\n\n      //TODO DEPRECATED\n      scope.showInfoWindow = mapController.map.showInfoWindow;\n      scope.hideInfoWindow = mapController.map.hideInfoWindow;\n\n      var map = infoWindow.mapId ? {id:infoWindow.mapId} : 0;\n      NgMap.getMap(map).then(function(map) {\n        infoWindow.visible && infoWindow.__open(map, scope);\n        if (infoWindow.visibleOnMarker) {\n          var markerId = infoWindow.visibleOnMarker;\n          infoWindow.__open(map, scope, map.markers[markerId]);\n        }\n      });\n\n    }; //link\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n      link: linkFunc\n    };\n\n  }; // infoWindow\n  infoWindow.$inject =\n    ['Attr2MapOptions', '$compile', '$q', '$templateRequest', '$timeout', '$parse', 'NgMap'];\n\n  angular.module('ngMap').directive('infoWindow', infoWindow);\n})();\n\n/**\n * @ngdoc directive\n * @name kml-layer\n * @param Attr2MapOptions {service} convert html attribute to Google map api options\n * @description\n *   renders Kml layer on a map\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @attr {Url} url url of the kml layer\n * @attr {KmlLayerOptions} KmlLayerOptions\n *   (https://developers.google.com/maps/documentation/javascript/reference#KmlLayerOptions) \n * @attr {String} &lt;KmlLayerEvent> Any KmlLayer events,\n *   https://developers.google.com/maps/documentation/javascript/reference\n * @example\n * Usage:\n *   <map MAP_ATTRIBUTES>\n *    <kml-layer ANY_KML_LAYER ANY_KML_LAYER_EVENTS\"></kml-layer>\n *   </map>\n *\n * Example:\n *\n * <map zoom=\"11\" center=\"[41.875696,-87.624207]\">\n *   <kml-layer url=\"https://gmaps-samples.googlecode.com/svn/trunk/ggeoxml/cta.kml\" >\n *   </kml-layer>\n * </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('kmlLayer', [\n    'Attr2MapOptions', function(Attr2MapOptions) {\n    var parser = Attr2MapOptions;\n\n    var getKmlLayer = function(options, events) {\n      var kmlLayer = new google.maps.KmlLayer(options);\n      for (var eventName in events) {\n        google.maps.event.addListener(kmlLayer, eventName, events[eventName]);\n      }\n      return kmlLayer;\n    };\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var orgAttrs = parser.orgAttributes(element);\n        var filtered = parser.filter(attrs);\n        var options = parser.getOptions(filtered, {scope: scope});\n        var events = parser.getEvents(scope, filtered);\n        void 0;\n\n        var kmlLayer = getKmlLayer(options, events);\n        mapController.addObject('kmlLayers', kmlLayer);\n        mapController.observeAttrSetObj(orgAttrs, attrs, kmlLayer);  //observers\n        element.bind('$destroy', function() {\n          mapController.deleteObject('kmlLayers', kmlLayer);\n        });\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @name map-data\n * @param Attr2MapOptions {service}\n *   convert html attribute to Google map api options\n * @description\n *   set map data\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @wn {String} method-name, run map.data[method-name] with attribute value\n * @example\n * Example:\n *\n *  <map zoom=\"11\" center=\"[41.875696,-87.624207]\">\n *    <map-data load-geo-json=\"https://storage.googleapis.com/maps-devrel/google.json\"></map-data>\n *   </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('mapData', [\n    'Attr2MapOptions', 'NgMap', function(Attr2MapOptions, NgMap) {\n    var parser = Attr2MapOptions;\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0] || mapController[1];\n        var filtered = parser.filter(attrs);\n        var options = parser.getOptions(filtered, {scope: scope});\n        var events = parser.getEvents(scope, filtered, events);\n\n        void 0;\n        NgMap.getMap(mapController.map.id).then(function(map) {\n          //options\n          for (var key in options) {\n            var val = options[key];\n            if (typeof scope[val] === \"function\") {\n              map.data[key](scope[val]);\n            } else {\n              map.data[key](val);\n            }\n          }\n\n          //events\n          for (var eventName in events) {\n            map.data.addListener(eventName, events[eventName]);\n          }\n        });\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @name map-lazy-load\n * @param Attr2Options {service} convert html attribute to Google map api options\n * @description\n *  Requires: Delay the initialization of map directive\n *    until the map is ready to be rendered\n *  Restrict To: Attribute\n *\n * @attr {String} map-lazy-load\n *    Maps api script source file location.\n *    Example:\n *      'https://maps.google.com/maps/api/js'\n * @attr {String} map-lazy-load-params\n *   Maps api script source file location via angular scope variable.\n *   Also requires the map-lazy-load attribute to be present in the directive.\n *   Example: In your controller, set\n *     $scope.googleMapsURL = 'https://maps.google.com/maps/api/js?v=3.20&client=XXXXXenter-api-key-hereXXXX'\n *\n * @example\n * Example:\n *\n *   <div map-lazy-load=\"http://maps.google.com/maps/api/js\">\n *     <map center=\"Brampton\" zoom=\"10\">\n *       <marker position=\"Brampton\"></marker>\n *     </map>\n *   </div>\n *\n *   <div map-lazy-load=\"http://maps.google.com/maps/api/js\"\n *        map-lazy-load-params=\"{{googleMapsUrl}}\">\n *     <map center=\"Brampton\" zoom=\"10\">\n *       <marker position=\"Brampton\"></marker>\n *     </map>\n *   </div>\n */\n/* global window, document */\n(function() {\n  'use strict';\n  var $timeout, $compile, src, savedHtml = [], elements = [];\n\n  var preLinkFunc = function(scope, element, attrs) {\n    var mapsUrl = attrs.mapLazyLoadParams || attrs.mapLazyLoad;\n\n    if(window.google === undefined || window.google.maps === undefined) {\n      elements.push({\n        scope: scope,\n        element: element,\n        savedHtml: savedHtml[elements.length],\n      });\n\n      window.lazyLoadCallback = function() {\n        void 0;\n        $timeout(function() { /* give some time to load */\n          elements.forEach(function(elm) {\n              elm.element.html(elm.savedHtml);\n              $compile(elm.element.contents())(elm.scope);\n          });\n        }, 100);\n      };\n\n      var scriptEl = document.createElement('script');\n      void 0;\n\n      scriptEl.src = mapsUrl +\n        (mapsUrl.indexOf('?') > -1 ? '&' : '?') +\n        'callback=lazyLoadCallback';\n\n        if (!document.querySelector('script[src=\"' + scriptEl.src + '\"]')) {\n          document.body.appendChild(scriptEl);\n        }\n    } else {\n      element.html(savedHtml);\n      $compile(element.contents())(scope);\n    }\n  };\n\n  var compileFunc = function(tElement, tAttrs) {\n\n    (!tAttrs.mapLazyLoad) && void 0;\n    savedHtml.push(tElement.html());\n    src = tAttrs.mapLazyLoad;\n\n    /**\n     * if already loaded, stop processing it\n     */\n    if(window.google !== undefined && window.google.maps !== undefined) {\n      return false;\n    }\n\n    tElement.html('');  // will compile again after script is loaded\n\n    return {\n      pre: preLinkFunc\n    };\n  };\n\n  var mapLazyLoad = function(_$compile_, _$timeout_) {\n    $compile = _$compile_, $timeout = _$timeout_;\n    return {\n      compile: compileFunc\n    };\n  };\n  mapLazyLoad.$inject = ['$compile','$timeout'];\n\n  angular.module('ngMap').directive('mapLazyLoad', mapLazyLoad);\n})();\n\n/**\n * @ngdoc directive\n * @name map-type\n * @param Attr2MapOptions {service} \n *   convert html attribute to Google map api options\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n * Example:\n *\n *   <map zoom=\"13\" center=\"34.04924594193164, -118.24104309082031\">\n *     <map-type name=\"coordinate\" object=\"coordinateMapType\"></map-type>\n *   </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('mapType', ['$parse', 'NgMap',\n    function($parse, NgMap) {\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var mapTypeName = attrs.name, mapTypeObject;\n        if (!mapTypeName) {\n          throw \"invalid map-type name\";\n        }\n        mapTypeObject = $parse(attrs.object)(scope);\n        if (!mapTypeObject) {\n          throw \"invalid map-type object\";\n        }\n\n        NgMap.getMap().then(function(map) {\n          map.mapTypes.set(mapTypeName, mapTypeObject);\n        });\n        mapController.addObject('mapTypes', mapTypeObject);\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @memberof ngMap\n * @name ng-map\n * @param Attr2Options {service}\n *  convert html attribute to Google map api options\n * @description\n * Implementation of {@link __MapController}\n * Initialize a Google map within a `<div>` tag\n *   with given options and register events\n *\n * @attr {Expression} map-initialized\n *   callback function when map is initialized\n *   e.g., map-initialized=\"mycallback(map)\"\n * @attr {Expression} geo-callback if center is an address or current location,\n *   the expression is will be executed when geo-lookup is successful.\n *   e.g., geo-callback=\"showMyStoreInfo()\"\n * @attr {Array} geo-fallback-center\n *   The center of map incase geolocation failed. i.e. [0,0]\n * @attr {Object} geo-location-options\n *  The navigator geolocation options.\n *  e.g., { maximumAge: 3000, timeout: 5000, enableHighAccuracy: true }.\n *  If none specified, { timeout: 5000 }.\n *  If timeout not specified, timeout: 5000 added\n * @attr {Boolean} zoom-to-include-markers\n *  When true, map boundary will be changed automatially\n *  to include all markers when initialized\n * @attr {Boolean} default-style\n *  When false, the default styling,\n *  `display:block;height:300px`, will be ignored.\n * @attr {String} &lt;MapOption> Any Google map options,\n *  https://developers.google.com/maps/documentation/javascript/reference?csw=1#MapOptions\n * @attr {String} &lt;MapEvent> Any Google map events,\n *  https://rawgit.com/allenhwkim/angularjs-google-maps/master/build/map_events.html\n * @attr {Boolean} single-info-window\n *  When true the map will only display one info window at the time,\n *  if not set or false,\n *  everytime an info window is open it will be displayed with the othe one.\n * @attr {Boolean} trigger-resize\n *  Default to false.  Set to true to trigger resize of the map.  Needs to be done anytime you resize the map\n * @example\n * Usage:\n *   <map MAP_OPTIONS_OR_MAP_EVENTS ..>\n *     ... Any children directives\n *   </map>\n *\n * Example:\n *   <map center=\"[40.74, -74.18]\" on-click=\"doThat()\">\n *   </map>\n *\n *   <map geo-fallback-center=\"[40.74, -74.18]\" zoom-to-inlude-markers=\"true\">\n *   </map>\n */\n(function () {\n  'use strict';\n\n  var mapDirective = function () {\n    return {\n      restrict: 'AE',\n      controller: '__MapController',\n      controllerAs: 'ngmap'\n    };\n  };\n\n  angular.module('ngMap').directive('map', [mapDirective]);\n  angular.module('ngMap').directive('ngMap', [mapDirective]);\n})();\n\n/**\n * @ngdoc directive\n * @name maps-engine-layer\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n * Example:\n *  <map zoom=\"14\" center=\"[59.322506, 18.010025]\">\n *    <maps-engine-layer layer-id=\"06673056454046135537-08896501997766553811\">\n *    </maps-engine-layer>\n *  </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('mapsEngineLayer', ['Attr2MapOptions', function(Attr2MapOptions) {\n    var parser = Attr2MapOptions;\n\n    var getMapsEngineLayer = function(options, events) {\n      var layer = new google.maps.visualization.MapsEngineLayer(options);\n\n      for (var eventName in events) {\n        google.maps.event.addListener(layer, eventName, events[eventName]);\n      }\n\n      return layer;\n    };\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var filtered = parser.filter(attrs);\n        var options = parser.getOptions(filtered, {scope: scope});\n        var events = parser.getEvents(scope, filtered, events);\n        void 0;\n\n        var layer = getMapsEngineLayer(options, events);\n        mapController.addObject('mapsEngineLayers', layer);\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @name marker\n * @param Attr2Options {service} convert html attribute to Google map api options\n * @param NavigatorGeolocation It is used to find the current location\n * @description\n *  Draw a Google map marker on a map with given options and register events\n *\n *  Requires:  map directive\n *\n *  Restrict To:  Element\n *\n * @attr {String} position address, 'current', or [latitude, longitude]\n *  example:\n *    '1600 Pennsylvania Ave, 20500  Washingtion DC',\n *    'current position',\n *    '[40.74, -74.18]'\n * @attr {Boolean} centered if set, map will be centered with this marker\n * @attr {Expression} geo-callback if position is an address,\n *   the expression is will be performed when geo-lookup is successful.\n *   e.g., geo-callback=\"showStoreInfo()\"\n * @attr {Boolean} no-watcher if true, no attribute observer is added.\n *   Useful for many ng-repeat\n * @attr {String} &lt;MarkerOption>\n *   [Any Marker options](https://developers.google.com/maps/documentation/javascript/reference?csw=1#MarkerOptions)\n * @attr {String} &lt;MapEvent>\n *   [Any Marker events](https://developers.google.com/maps/documentation/javascript/reference)\n * @example\n * Usage:\n *   <map MAP_ATTRIBUTES>\n *    <marker ANY_MARKER_OPTIONS ANY_MARKER_EVENTS\"></MARKER>\n *   </map>\n *\n * Example:\n *   <map center=\"[40.74, -74.18]\">\n *    <marker position=\"[40.74, -74.18]\" on-click=\"myfunc()\"></div>\n *   </map>\n *\n *   <map center=\"the cn tower\">\n *    <marker position=\"the cn tower\" on-click=\"myfunc()\"></div>\n *   </map>\n */\n/* global google */\n(function() {\n  'use strict';\n  var parser, $parse, NgMap;\n\n  var getMarker = function(options, events) {\n    var marker;\n\n    if (NgMap.defaultOptions.marker) {\n      for (var key in NgMap.defaultOptions.marker) {\n        if (typeof options[key] == 'undefined') {\n          void 0;\n          options[key] = NgMap.defaultOptions.marker[key];\n        }\n      }\n    }\n\n    if (!(options.position instanceof google.maps.LatLng)) {\n      options.position = new google.maps.LatLng(0,0);\n    }\n    marker = new google.maps.Marker(options);\n\n    /**\n     * set events\n     */\n    if (Object.keys(events).length > 0) {\n      void 0;\n    }\n    for (var eventName in events) {\n      if (eventName) {\n        google.maps.event.addListener(marker, eventName, events[eventName]);\n      }\n    }\n\n    return marker;\n  };\n\n  var linkFunc = function(scope, element, attrs, mapController) {\n    mapController = mapController[0]||mapController[1];\n\n    var orgAttrs = parser.orgAttributes(element);\n    var filtered = parser.filter(attrs);\n    var markerOptions = parser.getOptions(filtered, scope, {scope: scope});\n    var markerEvents = parser.getEvents(scope, filtered);\n    void 0;\n\n    var address;\n    if (!(markerOptions.position instanceof google.maps.LatLng)) {\n      address = markerOptions.position;\n    }\n    var marker = getMarker(markerOptions, markerEvents);\n    mapController.addObject('markers', marker);\n    if (address) {\n      NgMap.getGeoLocation(address).then(function(latlng) {\n        marker.setPosition(latlng);\n        markerOptions.centered && marker.map.setCenter(latlng);\n        var geoCallback = attrs.geoCallback;\n        geoCallback && $parse(geoCallback)(scope);\n      });\n    }\n\n    //set observers\n    mapController.observeAttrSetObj(orgAttrs, attrs, marker); /* observers */\n\n    element.bind('$destroy', function() {\n      mapController.deleteObject('markers', marker);\n    });\n  };\n\n  var marker = function(Attr2MapOptions, _$parse_, _NgMap_) {\n    parser = Attr2MapOptions;\n    $parse = _$parse_;\n    NgMap = _NgMap_;\n\n    return {\n      restrict: 'E',\n      require: ['^?map','?^ngMap'],\n      link: linkFunc\n    };\n  };\n\n  marker.$inject = ['Attr2MapOptions', '$parse', 'NgMap'];\n  angular.module('ngMap').directive('marker', marker);\n\n})();\n\n/**\n * @ngdoc directive\n * @name overlay-map-type\n * @param Attr2MapOptions {service} convert html attribute to Google map api options\n * @param $window {service}\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n * Example:\n *\n * <map zoom=\"13\" center=\"34.04924594193164, -118.24104309082031\">\n *   <overlay-map-type index=\"0\" object=\"coordinateMapType\"></map-type>\n * </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('overlayMapType', [\n    'NgMap', function(NgMap) {\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var initMethod = attrs.initMethod || \"insertAt\";\n        var overlayMapTypeObject = scope[attrs.object];\n\n        NgMap.getMap().then(function(map) {\n          if (initMethod == \"insertAt\") {\n            var index = parseInt(attrs.index, 10);\n            map.overlayMapTypes.insertAt(index, overlayMapTypeObject);\n          } else if (initMethod == \"push\") {\n            map.overlayMapTypes.push(overlayMapTypeObject);\n          }\n        });\n        mapController.addObject('overlayMapTypes', overlayMapTypeObject);\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @name places-auto-complete\n * @param Attr2MapOptions {service} convert html attribute to Google map api options\n * @description\n *   Provides address auto complete feature to an input element\n *   Requires: input tag\n *   Restrict To: Attribute\n *\n * @attr {AutoCompleteOptions}\n *   [Any AutocompleteOptions](https://developers.google.com/maps/documentation/javascript/3.exp/reference#AutocompleteOptions)\n *\n * @example\n * Example:\n *   <script src=\"https://maps.googleapis.com/maps/api/js?libraries=places\"></script>\n *   <input places-auto-complete types=\"['geocode']\" on-place-changed=\"myCallback(place)\" component-restrictions=\"{country:'au'}\"/>\n */\n/* global google */\n(function() {\n  'use strict';\n\n  var placesAutoComplete = function(Attr2MapOptions, $timeout) {\n    var parser = Attr2MapOptions;\n\n    var linkFunc = function(scope, element, attrs, ngModelCtrl) {\n      if (attrs.placesAutoComplete ==='false') {\n        return false;\n      }\n      var filtered = parser.filter(attrs);\n      var options = parser.getOptions(filtered, {scope: scope});\n      var events = parser.getEvents(scope, filtered);\n      var autocomplete = new google.maps.places.Autocomplete(element[0], options);\n      for (var eventName in events) {\n        google.maps.event.addListener(autocomplete, eventName, events[eventName]);\n      }\n\n      var updateModel = function() {\n        $timeout(function(){\n          ngModelCtrl && ngModelCtrl.$setViewValue(element.val());\n        },100);\n      };\n      google.maps.event.addListener(autocomplete, 'place_changed', updateModel);\n      element[0].addEventListener('change', updateModel);\n\n      attrs.$observe('types', function(val) {\n        if (val) {\n          var optionValue = parser.toOptionValue(val, {key: 'types'});\n          autocomplete.setTypes(optionValue);\n        }\n      });\n\t  \n\t  attrs.$observe('componentRestrictions', function (val) {\n\t\t if (val) {\n\t\t   autocomplete.setComponentRestrictions(scope.$eval(val));\n\t\t }\n\t   });\n    };\n\t\n    return {\n      restrict: 'A',\n      require: '?ngModel',\n      link: linkFunc\n    };\n  };\n\n  placesAutoComplete.$inject = ['Attr2MapOptions', '$timeout'];\n  angular.module('ngMap').directive('placesAutoComplete', placesAutoComplete);\n})();\n\n/**\n * @ngdoc directive\n * @name shape\n * @param Attr2MapOptions {service} convert html attribute to Google map api options\n * @description\n *   Initialize a Google map shape in map with given options and register events\n *   The shapes are:\n *     . circle\n *     . polygon\n *     . polyline\n *     . rectangle\n *     . groundOverlay(or image)\n *\n *   Requires:  map directive\n *\n *   Restrict To:  Element\n *\n * @attr {Boolean} centered if set, map will be centered with this marker\n * @attr {Expression} geo-callback if shape is a circle and the center is\n *   an address, the expression is will be performed when geo-lookup\n *   is successful. e.g., geo-callback=\"showDetail()\"\n * @attr {String} &lt;OPTIONS>\n *   For circle, [any circle options](https://developers.google.com/maps/documentation/javascript/reference#CircleOptions)\n *   For polygon, [any polygon options](https://developers.google.com/maps/documentation/javascript/reference#PolygonOptions)\n *   For polyline, [any polyline options](https://developers.google.com/maps/documentation/javascript/reference#PolylineOptions)\n *   For rectangle, [any rectangle options](https://developers.google.com/maps/documentation/javascript/reference#RectangleOptions)\n *   For image, [any groundOverlay options](https://developers.google.com/maps/documentation/javascript/reference#GroundOverlayOptions)\n * @attr {String} &lt;MapEvent> [Any Shape events](https://developers.google.com/maps/documentation/javascript/reference)\n * @example\n * Usage:\n *   <map MAP_ATTRIBUTES>\n *    <shape name=SHAPE_NAME ANY_SHAPE_OPTIONS ANY_SHAPE_EVENTS\"></MARKER>\n *   </map>\n *\n * Example:\n *\n *   <map zoom=\"11\" center=\"[40.74, -74.18]\">\n *     <shape id=\"polyline\" name=\"polyline\" geodesic=\"true\"\n *       stroke-color=\"#FF0000\" stroke-opacity=\"1.0\" stroke-weight=\"2\"\n *       path=\"[[40.74,-74.18],[40.64,-74.10],[40.54,-74.05],[40.44,-74]]\" >\n *     </shape>\n *   </map>\n *\n *   <map zoom=\"11\" center=\"[40.74, -74.18]\">\n *     <shape id=\"polygon\" name=\"polygon\" stroke-color=\"#FF0000\"\n *       stroke-opacity=\"1.0\" stroke-weight=\"2\"\n *       paths=\"[[40.74,-74.18],[40.64,-74.18],[40.84,-74.08],[40.74,-74.18]]\" >\n *     </shape>\n *   </map>\n *\n *   <map zoom=\"11\" center=\"[40.74, -74.18]\">\n *     <shape id=\"rectangle\" name=\"rectangle\" stroke-color='#FF0000'\n *       stroke-opacity=\"0.8\" stroke-weight=\"2\"\n *       bounds=\"[[40.74,-74.18], [40.78,-74.14]]\" editable=\"true\" >\n *     </shape>\n *   </map>\n *\n *   <map zoom=\"11\" center=\"[40.74, -74.18]\">\n *     <shape id=\"circle\" name=\"circle\" stroke-color='#FF0000'\n *       stroke-opacity=\"0.8\"stroke-weight=\"2\"\n *       center=\"[40.70,-74.14]\" radius=\"4000\" editable=\"true\" >\n *     </shape>\n *   </map>\n *\n *   <map zoom=\"11\" center=\"[40.74, -74.18]\">\n *     <shape id=\"image\" name=\"image\"\n *       url=\"https://www.lib.utexas.edu/maps/historical/newark_nj_1922.jpg\"\n *       bounds=\"[[40.71,-74.22],[40.77,-74.12]]\" opacity=\"0.7\"\n *       clickable=\"true\">\n *     </shape>\n *   </map>\n *\n *  For full-working example, please visit\n *    [shape example](https://rawgit.com/allenhwkim/angularjs-google-maps/master/build/shape.html)\n */\n/* global google */\n(function() {\n  'use strict';\n\n  var getShape = function(options, events) {\n    var shape;\n\n    var shapeName = options.name;\n    delete options.name;  //remove name bcoz it's not for options\n    void 0;\n\n    /**\n     * set options\n     */\n    switch(shapeName) {\n      case \"circle\":\n        if (!(options.center instanceof google.maps.LatLng)) {\n          options.center = new google.maps.LatLng(0,0);\n        } \n        shape = new google.maps.Circle(options);\n        break;\n      case \"polygon\":\n        shape = new google.maps.Polygon(options);\n        break;\n      case \"polyline\":\n        shape = new google.maps.Polyline(options);\n        break;\n      case \"rectangle\":\n        shape = new google.maps.Rectangle(options);\n        break;\n      case \"groundOverlay\":\n      case \"image\":\n        var url = options.url;\n        var opts = {opacity: options.opacity, clickable: options.clickable, id:options.id};\n        shape = new google.maps.GroundOverlay(url, options.bounds, opts);\n        break;\n    }\n\n    /**\n     * set events\n     */\n    for (var eventName in events) {\n      if (events[eventName]) {\n        google.maps.event.addListener(shape, eventName, events[eventName]);\n      }\n    }\n    return shape;\n  };\n\n  var shape = function(Attr2MapOptions, $parse, NgMap) {\n    var parser = Attr2MapOptions;\n\n    var linkFunc = function(scope, element, attrs, mapController) {\n      mapController = mapController[0]||mapController[1];\n\n      var orgAttrs = parser.orgAttributes(element);\n      var filtered = parser.filter(attrs);\n      var shapeOptions = parser.getOptions(filtered, {scope: scope});\n      var shapeEvents = parser.getEvents(scope, filtered);\n\n      var address, shapeType;\n      shapeType = shapeOptions.name;\n      if (!(shapeOptions.center instanceof google.maps.LatLng)) {\n        address = shapeOptions.center;\n      }\n      var shape = getShape(shapeOptions, shapeEvents);\n      mapController.addObject('shapes', shape);\n\n      if (address && shapeType == 'circle') {\n        NgMap.getGeoLocation(address).then(function(latlng) {\n          shape.setCenter(latlng);\n          shape.centered && shape.map.setCenter(latlng);\n          var geoCallback = attrs.geoCallback;\n          geoCallback && $parse(geoCallback)(scope);\n        });\n      }\n\n      //set observers\n      mapController.observeAttrSetObj(orgAttrs, attrs, shape);\n      element.bind('$destroy', function() {\n        mapController.deleteObject('shapes', shape);\n      });\n    };\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n      link: linkFunc\n     }; // return\n  };\n  shape.$inject = ['Attr2MapOptions', '$parse', 'NgMap'];\n\n  angular.module('ngMap').directive('shape', shape);\n\n})();\n\n/**\n * @ngdoc directive\n * @name streetview-panorama\n * @param Attr2MapOptions {service} convert html attribute to Google map api options\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @attr container Optional, id or css selector, if given, streetview will be in the given html element\n * @attr {String} &lt;StreetViewPanoramaOption>\n *   [Any Google StreetViewPanorama options](https://developers.google.com/maps/documentation/javascript/reference?csw=1#StreetViewPanoramaOptions)\n * @attr {String} &lt;StreetViewPanoramaEvent>\n *   [Any Google StreetViewPanorama events](https://developers.google.com/maps/documentation/javascript/reference#StreetViewPanorama)\n *\n * @example\n *   <map zoom=\"11\" center=\"[40.688738,-74.043871]\" >\n *     <street-view-panorama\n *       click-to-go=\"true\"\n *       disable-default-ui=\"true\"\n *       disable-double-click-zoom=\"true\"\n *       enable-close-button=\"true\"\n *       pano=\"my-pano\"\n *       position=\"40.688738,-74.043871\"\n *       pov=\"{heading:0, pitch: 90}\"\n *       scrollwheel=\"false\"\n *       visible=\"true\">\n *     </street-view-panorama>\n *   </map>\n */\n/* global google, document */\n(function() {\n  'use strict';\n\n  var streetViewPanorama = function(Attr2MapOptions, NgMap) {\n    var parser = Attr2MapOptions;\n\n    var getStreetViewPanorama = function(map, options, events) {\n      var svp, container;\n      if (options.container) {\n        container = document.getElementById(options.container);\n        container = container || document.querySelector(options.container);\n      }\n      if (container) {\n        svp = new google.maps.StreetViewPanorama(container, options);\n      } else {\n        svp = map.getStreetView();\n        svp.setOptions(options);\n      }\n\n      for (var eventName in events) {\n        eventName &&\n          google.maps.event.addListener(svp, eventName, events[eventName]);\n      }\n      return svp;\n    };\n\n    var linkFunc = function(scope, element, attrs) {\n      var filtered = parser.filter(attrs);\n      var options = parser.getOptions(filtered, {scope: scope});\n      var controlOptions = parser.getControlOptions(filtered);\n      var svpOptions = angular.extend(options, controlOptions);\n\n      var svpEvents = parser.getEvents(scope, filtered);\n      void 0;\n\n      NgMap.getMap().then(function(map) {\n        var svp = getStreetViewPanorama(map, svpOptions, svpEvents);\n\n        map.setStreetView(svp);\n        (!svp.getPosition()) && svp.setPosition(map.getCenter());\n        google.maps.event.addListener(svp, 'position_changed', function() {\n          if (svp.getPosition() !== map.getCenter()) {\n            map.setCenter(svp.getPosition());\n          }\n        });\n        //needed for geo-callback\n        var listener =\n          google.maps.event.addListener(map, 'center_changed', function() {\n            svp.setPosition(map.getCenter());\n            google.maps.event.removeListener(listener);\n          });\n      });\n\n    }; //link\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n      link: linkFunc\n    };\n\n  };\n  streetViewPanorama.$inject = ['Attr2MapOptions', 'NgMap'];\n\n  angular.module('ngMap').directive('streetViewPanorama', streetViewPanorama);\n})();\n\n/**\n * @ngdoc directive\n * @name traffic-layer\n * @param Attr2MapOptions {service} convert html attribute to Google map api options\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n * Example:\n *\n *   <map zoom=\"13\" center=\"34.04924594193164, -118.24104309082031\">\n *     <traffic-layer></traffic-layer>\n *    </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('trafficLayer', [\n    'Attr2MapOptions', function(Attr2MapOptions) {\n    var parser = Attr2MapOptions;\n\n    var getLayer = function(options, events) {\n      var layer = new google.maps.TrafficLayer(options);\n      for (var eventName in events) {\n        google.maps.event.addListener(layer, eventName, events[eventName]);\n      }\n      return layer;\n    };\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var orgAttrs = parser.orgAttributes(element);\n        var filtered = parser.filter(attrs);\n        var options = parser.getOptions(filtered, {scope: scope});\n        var events = parser.getEvents(scope, filtered);\n        void 0;\n\n        var layer = getLayer(options, events);\n        mapController.addObject('trafficLayers', layer);\n        mapController.observeAttrSetObj(orgAttrs, attrs, layer);  //observers\n        element.bind('$destroy', function() {\n          mapController.deleteObject('trafficLayers', layer);\n        });\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc directive\n * @name transit-layer\n * @param Attr2MapOptions {service} convert html attribute to Google map api options\n * @description\n *   Requires:  map directive\n *   Restrict To:  Element\n *\n * @example\n * Example:\n *\n *  <map zoom=\"13\" center=\"34.04924594193164, -118.24104309082031\">\n *    <transit-layer></transit-layer>\n *  </map>\n */\n(function() {\n  'use strict';\n\n  angular.module('ngMap').directive('transitLayer', [\n    'Attr2MapOptions', function(Attr2MapOptions) {\n    var parser = Attr2MapOptions;\n\n    var getLayer = function(options, events) {\n      var layer = new google.maps.TransitLayer(options);\n      for (var eventName in events) {\n        google.maps.event.addListener(layer, eventName, events[eventName]);\n      }\n      return layer;\n    };\n\n    return {\n      restrict: 'E',\n      require: ['?^map','?^ngMap'],\n\n      link: function(scope, element, attrs, mapController) {\n        mapController = mapController[0]||mapController[1];\n\n        var orgAttrs = parser.orgAttributes(element);\n        var filtered = parser.filter(attrs);\n        var options = parser.getOptions(filtered, {scope: scope});\n        var events = parser.getEvents(scope, filtered);\n        void 0;\n\n        var layer = getLayer(options, events);\n        mapController.addObject('transitLayers', layer);\n        mapController.observeAttrSetObj(orgAttrs, attrs, layer);  //observers\n        element.bind('$destroy', function() {\n          mapController.deleteObject('transitLayers', layer);\n        });\n      }\n     }; // return\n  }]);\n})();\n\n/**\n * @ngdoc filter\n * @name camel-case\n * @description\n *   Converts string to camel cased\n */\n(function() {\n  'use strict';\n\n  var SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\n  var MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\n  var camelCaseFilter = function() {\n    return function(name) {\n      return name.\n        replace(SPECIAL_CHARS_REGEXP,\n          function(_, separator, letter, offset) {\n            return offset ? letter.toUpperCase() : letter;\n        }).\n        replace(MOZ_HACK_REGEXP, 'Moz$1');\n    };\n  };\n\n  angular.module('ngMap').filter('camelCase', camelCaseFilter);\n})();\n\n/**\n * @ngdoc filter\n * @name escape-regex\n * @description\n *   Escapes all regex special characters in a string\n */\n(function() {\n  'use strict';\n\n\n\n  var escapeRegexpFilter = function() {\n    return function(string) {\n\t\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t\t};\n  };\n\n  angular.module('ngMap').filter('escapeRegexp', escapeRegexpFilter);\n})();\n\n/**\n * @ngdoc filter\n * @name jsonize\n * @description\n *   Converts json-like string to json string\n */\n(function() {\n  'use strict';\n\n  var jsonizeFilter = function() {\n    return function(str) {\n      try {       // if parsable already, return as it is\n        JSON.parse(str);\n        return str;\n      } catch(e) { // if not parsable, change little\n        return str\n          // wrap keys without quote with valid double quote\n          .replace(/([\\$\\w]+)\\s*:/g,\n            function(_, $1) {\n              return '\"'+$1+'\":';\n            }\n          )\n          // replacing single quote wrapped ones to double quote\n          .replace(/'([^']+)'/g,\n            function(_, $1) {\n              return '\"'+$1+'\"';\n            }\n          )\n          .replace(/''/g, '\"\"');\n      }\n    };\n  };\n\n  angular.module('ngMap').filter('jsonize', jsonizeFilter);\n})();\n\n/**\n * @ngdoc service\n * @name Attr2MapOptions\n * @description\n *   Converts tag attributes to options used by google api v3 objects\n */\n/* global google */\n(function() {\n  'use strict';\n\n  //i.e. \"2015-08-12T06:12:40.858Z\"\n  var isoDateRE =\n    /^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/;\n\n  var Attr2MapOptions = function(\n      $parse, $timeout, $log, $interpolate, NavigatorGeolocation, GeoCoder,\n      camelCaseFilter, jsonizeFilter, escapeRegExp\n    ) {\n\n    var exprStartSymbol = $interpolate.startSymbol();\n    var exprEndSymbol = $interpolate.endSymbol();\n\n    /**\n     * Returns the attributes of an element as hash\n     * @memberof Attr2MapOptions\n     * @param {HTMLElement} el html element\n     * @returns {Hash} attributes\n     */\n    var orgAttributes = function(el) {\n      (el.length > 0) && (el = el[0]);\n      var orgAttributes = {};\n      for (var i=0; i<el.attributes.length; i++) {\n        var attr = el.attributes[i];\n        orgAttributes[attr.name] = attr.value;\n      }\n      return orgAttributes;\n    };\n\n    var getJSON = function(input) {\n      var re =/^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; //lat,lng\n      if (input.match(re)) {\n        input = \"[\"+input+\"]\";\n      }\n      return JSON.parse(jsonizeFilter(input));\n    };\n    \n    var getLatLng = function(input) {\n      var output = input;\n      if (input[0].constructor == Array) { \n        if ((input[0][0].constructor == Array && input[0][0].length == 2) || input[0][0].constructor == Object) {\n            var preoutput;\n            var outputArray = [];\n            for (var i = 0; i < input.length; i++) {\n                preoutput = input[i].map(function(el){\n                    return new google.maps.LatLng(el[0], el[1]);\n                });\n                outputArray.push(preoutput);\n            }\n            output = outputArray;\n        } else {\n            output = input.map(function(el) {\n                return new google.maps.LatLng(el[0], el[1]);\n            });\n        }\n      } else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n        output = new google.maps.LatLng(output[0], output[1]);\n      }\n      return output;\n    };\n\n    var toOptionValue = function(input, options) {\n      var output;\n      try { // 1. Number?\n        output = getNumber(input);\n      } catch(err) {\n        try { // 2. JSON?\n          var output = getJSON(input);\n          if (output instanceof Array) {\n            if (output[0].constructor == Object) {\n              output = output;\n            } else if (output[0] instanceof Array) {\n              if (output[0][0].constructor == Object) {\n                output = output;\n              } else {\n                output = getLatLng(output);\n              }\n            } else {\n                output = getLatLng(output);\n            }\n          }\n          // JSON is an object (not array or null)\n          else if (output === Object(output)) {\n            // check for nested hashes and convert to Google API options\n            var newOptions = options;\n            newOptions.doNotConverStringToNumber = true;\n            output = getOptions(output, newOptions);\n          }\n        } catch(err2) {\n          // 3. Google Map Object function Expression. i.e. LatLng(80,-49)\n          if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n            try {\n              var exp = \"new google.maps.\"+input;\n              output = eval(exp); /* jshint ignore:line */\n            } catch(e) {\n              output = input;\n            }\n          // 4. Google Map Object constant Expression. i.e. MayTypeId.HYBRID\n          } else if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) {\n            try {\n              var matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n              output = google.maps[matches[1]][matches[2]];\n            } catch(e) {\n              output = input;\n            }\n          // 5. Google Map Object constant Expression. i.e. HYBRID\n          } else if (input.match(/^[A-Z]+$/)) {\n            try {\n              var capitalizedKey = options.key.charAt(0).toUpperCase() +\n                options.key.slice(1);\n              if (options.key.match(/temperatureUnit|windSpeedUnit|labelColor/)) {\n                capitalizedKey = capitalizedKey.replace(/s$/,\"\");\n                output = google.maps.weather[capitalizedKey][input];\n              } else {\n                output = google.maps[capitalizedKey][input];\n              }\n            } catch(e) {\n              output = input;\n            }\n          // 6. Date Object as ISO String\n          } else if (input.match(isoDateRE)) {\n            try {\n              output = new Date(input);\n            } catch(e) {\n              output = input;\n            }\n          // 7. evaluate dynamically bound values\n        } else if (input.match(new RegExp('^' + escapeRegExp(exprStartSymbol))) && options.scope) {\n            try {\n              var expr = input.replace(new RegExp(escapeRegExp(exprStartSymbol)),'').replace(new RegExp(escapeRegExp(exprEndSymbol), 'g'),'');\n              output = options.scope.$eval(expr);\n            } catch (err) {\n              output = input;\n            }\n          } else {\n            output = input;\n          }\n        } // catch(err2)\n      } // catch(err)\n\n      // convert output more for center and position\n      if (\n        (options.key == 'center' || options.key == 'position') &&\n        output instanceof Array\n      ) {\n        output = new google.maps.LatLng(output[0], output[1]);\n      }\n\n      // convert output more for shape bounds\n      if (options.key == 'bounds' && output instanceof Array) {\n        output = new google.maps.LatLngBounds(output[0], output[1]);\n      }\n\n      // convert output more for shape icons\n      if (options.key == 'icons' && output instanceof Array) {\n\n        for (var i=0; i<output.length; i++) {\n          var el = output[i];\n          if (el.icon.path.match(/^[A-Z_]+$/)) {\n            el.icon.path =  google.maps.SymbolPath[el.icon.path];\n          }\n        }\n      }\n\n      // convert output more for marker icon\n      if (options.key == 'icon' && output instanceof Object) {\n        if ((\"\"+output.path).match(/^[A-Z_]+$/)) {\n          output.path = google.maps.SymbolPath[output.path];\n        }\n        for (var key in output) { //jshint ignore:line\n          var arr = output[key];\n          if (key == \"anchor\" || key == \"origin\" || key == \"labelOrigin\") {\n            output[key] = new google.maps.Point(arr[0], arr[1]);\n          } else if (key == \"size\" || key == \"scaledSize\") {\n            output[key] = new google.maps.Size(arr[0], arr[1]);\n          }\n        }\n      }\n\n      return output;\n    };\n\n    var getAttrsToObserve = function(attrs) {\n      var attrsToObserve = [];\n      var exprRegExp = new RegExp(escapeRegExp(exprStartSymbol) + '.*' + escapeRegExp(exprEndSymbol), 'g');\n\n      if (!attrs.noWatcher) {\n        for (var attrName in attrs) { //jshint ignore:line\n          var attrValue = attrs[attrName];\n          if (attrValue && attrValue.match(exprRegExp)) { // if attr value is {{..}}\n            attrsToObserve.push(camelCaseFilter(attrName));\n          }\n        }\n      }\n\n      return attrsToObserve;\n    };\n\n    /**\n     * filters attributes by skipping angularjs methods $.. $$..\n     * @memberof Attr2MapOptions\n     * @param {Hash} attrs tag attributes\n     * @returns {Hash} filterd attributes\n     */\n    var filter = function(attrs) {\n      var options = {};\n      for(var key in attrs) {\n        if (key.match(/^\\$/) || key.match(/^ng[A-Z]/)) {\n          void(0);\n        } else {\n          options[key] = attrs[key];\n        }\n      }\n      return options;\n    };\n\n    /**\n     * converts attributes hash to Google Maps API v3 options\n     * ```\n     *  . converts numbers to number\n     *  . converts class-like string to google maps instance\n     *    i.e. `LatLng(1,1)` to `new google.maps.LatLng(1,1)`\n     *  . converts constant-like string to google maps constant\n     *    i.e. `MapTypeId.HYBRID` to `google.maps.MapTypeId.HYBRID`\n     *    i.e. `HYBRID\"` to `google.maps.MapTypeId.HYBRID`\n     * ```\n     * @memberof Attr2MapOptions\n     * @param {Hash} attrs tag attributes\n     * @param {Hash} options\n     * @returns {Hash} options converted attributess\n     */\n    var getOptions = function(attrs, params) {\n      params = params || {};\n      var options = {};\n      for(var key in attrs) {\n        if (attrs[key] || attrs[key] === 0) {\n          if (key.match(/^on[A-Z]/)) { //skip events, i.e. on-click\n            continue;\n          } else if (key.match(/ControlOptions$/)) { // skip controlOptions\n            continue;\n          } else {\n            // nested conversions need to be typechecked\n            // (non-strings are fully converted)\n            if (typeof attrs[key] !== 'string') {\n              options[key] = attrs[key];\n            } else {\n              if (params.doNotConverStringToNumber &&\n                attrs[key].match(/^[0-9]+$/)\n              ) {\n                options[key] = attrs[key];\n              } else {\n                options[key] = toOptionValue(attrs[key], {key: key, scope: params.scope});\n              }\n            }\n          }\n        } // if (attrs[key])\n      } // for(var key in attrs)\n      return options;\n    };\n\n    /**\n     * converts attributes hash to scope-specific event function\n     * @memberof Attr2MapOptions\n     * @param {scope} scope angularjs scope\n     * @param {Hash} attrs tag attributes\n     * @returns {Hash} events converted events\n     */\n    var getEvents = function(scope, attrs) {\n      var events = {};\n      var toLowercaseFunc = function($1){\n        return \"_\"+$1.toLowerCase();\n      };\n      var EventFunc = function(attrValue) {\n        // funcName(argsStr)\n        var matches = attrValue.match(/([^\\(]+)\\(([^\\)]*)\\)/);\n        var funcName = matches[1];\n        var argsStr = matches[2].replace(/event[ ,]*/,'');  //remove string 'event'\n        var argsExpr = $parse(\"[\"+argsStr+\"]\"); //for perf when triggering event\n        return function(event) {\n          var args = argsExpr(scope); //get args here to pass updated model values\n          function index(obj,i) {return obj[i];}\n          var f = funcName.split('.').reduce(index, scope);\n          f && f.apply(this, [event].concat(args));\n          $timeout( function() {\n            scope.$apply();\n          });\n        };\n      };\n\n      for(var key in attrs) {\n        if (attrs[key]) {\n          if (!key.match(/^on[A-Z]/)) { //skip if not events\n            continue;\n          }\n\n          //get event name as underscored. i.e. zoom_changed\n          var eventName = key.replace(/^on/,'');\n          eventName = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n          eventName = eventName.replace(/([A-Z])/g, toLowercaseFunc);\n\n          var attrValue = attrs[key];\n          events[eventName] = new EventFunc(attrValue);\n        }\n      }\n      return events;\n    };\n\n    /**\n     * control means map controls, i.e streetview, pan, etc, not a general control\n     * @memberof Attr2MapOptions\n     * @param {Hash} filtered filtered tag attributes\n     * @returns {Hash} Google Map options\n     */\n    var getControlOptions = function(filtered) {\n      var controlOptions = {};\n      if (typeof filtered != 'object') {\n        return false;\n      }\n\n      for (var attr in filtered) {\n        if (filtered[attr]) {\n          if (!attr.match(/(.*)ControlOptions$/)) {\n            continue; // if not controlOptions, skip it\n          }\n\n          //change invalid json to valid one, i.e. {foo:1} to {\"foo\": 1}\n          var orgValue = filtered[attr];\n          var newValue = orgValue.replace(/'/g, '\"');\n          newValue = newValue.replace(/([^\"]+)|(\"[^\"]+\")/g, function($0, $1, $2) {\n            if ($1) {\n              return $1.replace(/([a-zA-Z0-9]+?):/g, '\"$1\":');\n            } else {\n              return $2;\n            }\n          });\n          try {\n            var options = JSON.parse(newValue);\n            for (var key in options) { //assign the right values\n              if (options[key]) {\n                var value = options[key];\n                if (typeof value === 'string') {\n                  value = value.toUpperCase();\n                } else if (key === \"mapTypeIds\") {\n                  value = value.map( function(str) {\n                    if (str.match(/^[A-Z]+$/)) { // if constant\n                      return google.maps.MapTypeId[str.toUpperCase()];\n                    } else { // else, custom map-type\n                      return str;\n                    }\n                  });\n                }\n\n                if (key === \"style\") {\n                  var str = attr.charAt(0).toUpperCase() + attr.slice(1);\n                  var objName = str.replace(/Options$/,'')+\"Style\";\n                  options[key] = google.maps[objName][value];\n                } else if (key === \"position\") {\n                  options[key] = google.maps.ControlPosition[value];\n                } else {\n                  options[key] = value;\n                }\n              }\n            }\n            controlOptions[attr] = options;\n          } catch (e) {\n            void 0;\n          }\n        }\n      } // for\n\n      return controlOptions;\n    };\n\n    return {\n      filter: filter,\n      getOptions: getOptions,\n      getEvents: getEvents,\n      getControlOptions: getControlOptions,\n      toOptionValue: toOptionValue,\n      getAttrsToObserve: getAttrsToObserve,\n      orgAttributes: orgAttributes\n    }; // return\n\n  };\n  Attr2MapOptions.$inject= [\n    '$parse', '$timeout', '$log', '$interpolate', 'NavigatorGeolocation', 'GeoCoder',\n    'camelCaseFilter', 'jsonizeFilter', 'escapeRegexpFilter'\n  ];\n\n  angular.module('ngMap').service('Attr2MapOptions', Attr2MapOptions);\n})();\n\n/**\n * @ngdoc service\n * @name GeoCoder\n * @description\n *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *   service for Google Geocoder service\n */\n(function() {\n  'use strict';\n  var $q;\n  /**\n   * @memberof GeoCoder\n   * @param {Hash} options\n   *   https://developers.google.com/maps/documentation/geocoding/#geocoding\n   * @example\n   * ```\n   *   GeoCoder.geocode({address: 'the cn tower'}).then(function(result) {\n   *     //... do something with result\n   *   });\n   * ```\n   * @returns {HttpPromise} Future object\n   */\n  var geocodeFunc = function(options) {\n    var deferred = $q.defer();\n    var geocoder = new google.maps.Geocoder();\n    geocoder.geocode(options, function (results, status) {\n      if (status == google.maps.GeocoderStatus.OK) {\n        deferred.resolve(results);\n      } else {\n        deferred.reject(status);\n      }\n    });\n    return deferred.promise;\n  };\n\n  var GeoCoder = function(_$q_) {\n    $q = _$q_;\n    return {\n      geocode : geocodeFunc\n    };\n  };\n  GeoCoder.$inject = ['$q'];\n\n  angular.module('ngMap').service('GeoCoder', GeoCoder);\n})();\n\n/**\n * @ngdoc service\n * @name GoogleMapsApi\n * @description\n *   Load Google Maps API Service\n */\n(function() {\n  'use strict';\n  var $q;\n  var $timeout;\n\n  var GoogleMapsApi = function(_$q_, _$timeout_) {\n    $q = _$q_;\n    $timeout = _$timeout_;\n\n    return {\n\n      /**\n       * Load google maps into document by creating a script tag\n       * @memberof GoogleMapsApi\n       * @param {string} mapsUrl\n       * @example\n       *   GoogleMapsApi.load(myUrl).then(function() {\n       *     console.log('google map has been loaded')\n       *   });\n       */\n      load: function (mapsUrl) {\n\n        var deferred = $q.defer();\n\n        if (window.google === undefined || window.google.maps === undefined) {\n\n          window.lazyLoadCallback = function() {\n            $timeout(function() { /* give some time to load */\n              deferred.resolve(window.google)\n            }, 100);\n          };\n\n          var scriptEl = document.createElement('script');\n          scriptEl.src = mapsUrl +\n            (mapsUrl.indexOf('?') > -1 ? '&' : '?') +\n            'callback=lazyLoadCallback';\n\n          if (!document.querySelector('script[src=\"' + scriptEl.src + '\"]')) {\n            document.body.appendChild(scriptEl);\n          }\n        } else {\n          deferred.resolve(window.google)\n        }\n\n        return deferred.promise;\n      }\n\n    }\n  }\n  GoogleMapsApi.$inject = ['$q', '$timeout'];\n\n  angular.module('ngMap').service('GoogleMapsApi', GoogleMapsApi);\n})();\n\n\n\n/**\n * @ngdoc service\n * @name NavigatorGeolocation\n * @description\n *  Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *  service for navigator.geolocation methods\n */\n/* global google */\n(function() {\n  'use strict';\n  var $q;\n\n  /**\n   * @memberof NavigatorGeolocation\n   * @param {Object} geoLocationOptions the navigator geolocations options.\n   *  i.e. { maximumAge: 3000, timeout: 5000, enableHighAccuracy: true }.\n   *  If none specified, { timeout: 5000 }. \n   *  If timeout not specified, timeout: 5000 added\n   * @param {function} success success callback function\n   * @param {function} failure failure callback function\n   * @example\n   * ```\n   *  NavigatorGeolocation.getCurrentPosition()\n   *    .then(function(position) {\n   *      var lat = position.coords.latitude, lng = position.coords.longitude;\n   *      .. do something lat and lng\n   *    });\n   * ```\n   * @returns {HttpPromise} Future object\n   */\n  var getCurrentPosition = function(geoLocationOptions) {\n    var deferred = $q.defer();\n    if (navigator.geolocation) {\n\n      if (geoLocationOptions === undefined) {\n        geoLocationOptions = { timeout: 5000 };\n      }\n      else if (geoLocationOptions.timeout === undefined) {\n        geoLocationOptions.timeout = 5000;\n      }\n\n      navigator.geolocation.getCurrentPosition(\n        function(position) {\n          deferred.resolve(position);\n        }, function(evt) {\n          void 0;\n          deferred.reject(evt);\n        },\n        geoLocationOptions\n      );\n    } else {\n      deferred.reject(\"Browser Geolocation service failed.\");\n    }\n    return deferred.promise;\n  };\n\n  var NavigatorGeolocation = function(_$q_) {\n    $q = _$q_;\n    return {\n      getCurrentPosition: getCurrentPosition\n    };\n  };\n  NavigatorGeolocation.$inject = ['$q'];\n\n  angular.module('ngMap').\n    service('NavigatorGeolocation', NavigatorGeolocation);\n})();\n\n/**\n * @ngdoc factory\n * @name NgMapPool\n * @description\n *   Provide map instance to avoid memory leak\n */\n(function() {\n  'use strict';\n  /**\n   * @memberof NgMapPool\n   * @desc map instance pool\n   */\n  var mapInstances = [];\n  var $window, $document, $timeout;\n\n  var add = function(el) {\n    var mapDiv = $document.createElement(\"div\");\n    mapDiv.style.width = \"100%\";\n    mapDiv.style.height = \"100%\";\n    el.appendChild(mapDiv);\n    var map = new $window.google.maps.Map(mapDiv, {});\n    mapInstances.push(map);\n    return map;\n  };\n\n  var findById = function(el, id) {\n    var notInUseMap;\n    for (var i=0; i<mapInstances.length; i++) {\n      var map = mapInstances[i];\n      if (map.id == id && !map.inUse) {\n        var mapDiv = map.getDiv();\n        el.appendChild(mapDiv);\n        notInUseMap = map;\n        break;\n      }\n    }\n    return notInUseMap;\n  };\n\n  var findUnused = function(el) { //jshint ignore:line\n    var notInUseMap;\n    for (var i=0; i<mapInstances.length; i++) {\n      var map = mapInstances[i];\n      if (map.id) {\n        continue;\n      }\n      if (!map.inUse) {\n        var mapDiv = map.getDiv();\n        el.appendChild(mapDiv);\n        notInUseMap = map;\n        break;\n      }\n    }\n    return notInUseMap;\n  };\n\n  /**\n   * @memberof NgMapPool\n   * @function getMapInstance\n   * @param {HtmlElement} el map container element\n   * @return map instance for the given element\n   */\n  var getMapInstance = function(el) {\n    var map = findById(el, el.id) || findUnused(el);\n    if (!map) {\n      map = add(el);\n    } else {\n      /* firing map idle event, which is used by map controller */\n      $timeout(function() {\n        google.maps.event.trigger(map, 'idle');\n      }, 100);\n    }\n    map.inUse = true;\n    return map;\n  };\n\n  /**\n   * @memberof NgMapPool\n   * @function returnMapInstance\n   * @param {Map} an instance of google.maps.Map\n   * @desc sets the flag inUse of the given map instance to false, so that it \n   * can be reused later\n   */\n  var returnMapInstance = function(map) {\n    map.inUse = false;\n  };\n  \n  /**\n   * @memberof NgMapPool\n   * @function resetMapInstances\n   * @desc resets mapInstance array\n   */\n  var resetMapInstances = function() {\n    for(var i = 0;i < mapInstances.length;i++) {\n        mapInstances[i] = null;\n    }\n    mapInstances = [];\n  };\n  \n  /**\n   * @memberof NgMapPool\n   * @function deleteMapInstance\n   * @desc delete a mapInstance\n   */\n  var deleteMapInstance= function(mapId) {\n\t  for( var i=0; i<mapInstances.length; i++ ) {\n\t\t  if( (mapInstances[i] !== null) && (mapInstances[i].id == mapId)) {\n\t\t\t  mapInstances[i]= null;\n\t\t\t  mapInstances.splice( i, 1 );\n\t\t  }\n\t  }\n  };\n\n  var NgMapPool = function(_$document_, _$window_, _$timeout_) {\n    $document = _$document_[0], $window = _$window_, $timeout = _$timeout_;\n\n    return {\n\t  mapInstances: mapInstances,\n      resetMapInstances: resetMapInstances,\n      getMapInstance: getMapInstance,\n      returnMapInstance: returnMapInstance,\n      deleteMapInstance: deleteMapInstance\n    };\n  };\n\n  NgMapPool.$inject = [ '$document', '$window', '$timeout'];\n\n  angular.module('ngMap').factory('NgMapPool', NgMapPool);\n\n})();\n\n/**\n * @ngdoc provider\n * @name NgMap\n * @description\n *  common utility service for ng-map\n */\n(function() {\n  'use strict';\n  var $window, $document, $q;\n  var NavigatorGeolocation, Attr2MapOptions, GeoCoder, camelCaseFilter, NgMapPool;\n\n  var mapControllers = {};\n\n  var getStyle = function(el, styleProp) {\n    var y;\n    if (el.currentStyle) {\n      y = el.currentStyle[styleProp];\n    } else if ($window.getComputedStyle) {\n      y = $document.defaultView.\n        getComputedStyle(el, null).\n        getPropertyValue(styleProp);\n    }\n    return y;\n  };\n\n  /**\n   * @memberof NgMap\n   * @function initMap\n   * @param id optional, id of the map. default 0\n   */\n  var initMap = function(id) {\n    var ctrl = mapControllers[id || 0];\n    if (!(ctrl.map instanceof google.maps.Map)) {\n      ctrl.initializeMap();\n      return ctrl.map;\n    } else {\n      void 0;\n    }\n  };\n\n  /**\n   * @memberof NgMap\n   * @function getMap\n   * @param {String} optional, id e.g., 'foo'\n   * @returns promise\n   */\n  var getMap = function(id, options) {\n    options = options || {};\n    id = typeof id === 'object' ? id.id : id;\n\n    var deferred = $q.defer();\n    var timeout = options.timeout || 10000;\n\n    function waitForMap(timeElapsed){\n      var keys = Object.keys(mapControllers);\n      var theFirstController = mapControllers[keys[0]];\n      if(id && mapControllers[id]){\n        deferred.resolve(mapControllers[id].map);\n      } else if (!id && theFirstController && theFirstController.map) {\n        deferred.resolve(theFirstController.map);\n      } else if (timeElapsed > timeout) {\n        deferred.reject('could not find map');\n      } else {\n        $window.setTimeout( function(){\n          waitForMap(timeElapsed+100);\n        }, 100);\n      }\n    }\n    waitForMap(0);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @memberof NgMap\n   * @function addMap\n   * @param mapController {__MapContoller} a map controller\n   * @returns promise\n   */\n  var addMap = function(mapCtrl) {\n    if (mapCtrl.map) {\n      var len = Object.keys(mapControllers).length;\n      mapControllers[mapCtrl.map.id || len] = mapCtrl;\n    }\n  };\n\n  /**\n   * @memberof NgMap\n   * @function deleteMap\n   * @param mapController {__MapContoller} a map controller\n   */\n  var deleteMap = function(mapCtrl) {\n    var len = Object.keys(mapControllers).length - 1;\n    var mapId = mapCtrl.map.id || len;\n    if (mapCtrl.map) {\n      for (var eventName in mapCtrl.eventListeners) {\n        void 0;\n        var listener = mapCtrl.eventListeners[eventName];\n        google.maps.event.removeListener(listener);\n      }\n      if (mapCtrl.map.controls) {\n        mapCtrl.map.controls.forEach(function(ctrl) {\n          ctrl.clear();\n        });\n      }\n    }\n\n    //Remove Heatmap Layers\n    if (mapCtrl.map.heatmapLayers) {\n      Object.keys(mapCtrl.map.heatmapLayers).forEach(function (layer) {\n        mapCtrl.deleteObject('heatmapLayers', mapCtrl.map.heatmapLayers[layer]);\n      });\n    }\n\n    NgMapPool.deleteMapInstance(mapId);\n\n    delete mapControllers[mapId];\n  };\n\n  /**\n   * @memberof NgMap\n   * @function getGeoLocation\n   * @param {String} address\n   * @param {Hash} options geo options\n   * @returns promise\n   */\n  var getGeoLocation = function(string, options) {\n    var deferred = $q.defer();\n    if (!string || string.match(/^current/i)) { // current location\n      NavigatorGeolocation.getCurrentPosition(options).then(\n        function(position) {\n          var lat = position.coords.latitude;\n          var lng = position.coords.longitude;\n          var latLng = new google.maps.LatLng(lat,lng);\n          deferred.resolve(latLng);\n        },\n        function(error) {\n          deferred.reject(error);\n        }\n      );\n    } else {\n      GeoCoder.geocode({address: string}).then(\n        function(results) {\n          deferred.resolve(results[0].geometry.location);\n        },\n        function(error) {\n          deferred.reject(error);\n        }\n      );\n      // var geocoder = new google.maps.Geocoder();\n      // geocoder.geocode(options, function (results, status) {\n      //   if (status == google.maps.GeocoderStatus.OK) {\n      //     deferred.resolve(results);\n      //   } else {\n      //     deferred.reject(status);\n      //   }\n      // });\n    }\n\n    return deferred.promise;\n  };\n\n  /**\n   * @memberof NgMap\n   * @function observeAndSet\n   * @param {String} attrName attribute name\n   * @param {Object} object A Google maps object to be changed\n   * @returns attribue observe function\n   */\n  var observeAndSet = function(attrName, object) {\n    void 0;\n    return function(val) {\n      if (val) {\n        var setMethod = camelCaseFilter('set-'+attrName);\n        var optionValue = Attr2MapOptions.toOptionValue(val, {key: attrName});\n        if (object[setMethod]) { //if set method does exist\n          void 0;\n          /* if an location is being observed */\n          if (attrName.match(/center|position/) &&\n            typeof optionValue == 'string') {\n            getGeoLocation(optionValue).then(function(latlng) {\n              object[setMethod](latlng);\n            });\n          } else {\n            object[setMethod](optionValue);\n          }\n        }\n      }\n    };\n  };\n\n  /**\n   * @memberof NgMap\n   * @function setStyle\n   * @param {HtmlElement} map contriner element\n   * @desc set display, width, height of map container element\n   */\n  var setStyle = function(el) {\n    //if style is not given to the map element, set display and height\n    var defaultStyle = el.getAttribute('default-style');\n    if (defaultStyle == \"true\") {\n      el.style.display = 'block';\n      el.style.height = '300px';\n    } else {\n      if (getStyle(el, 'display') != \"block\") {\n        el.style.display = 'block';\n      }\n      if (getStyle(el, 'height').match(/^(0|auto)/)) {\n        el.style.height = '300px';\n      }\n    }\n  };\n\n  angular.module('ngMap').provider('NgMap', function() {\n    var defaultOptions = {};\n\n    /**\n     * @memberof NgMap\n     * @function setDefaultOptions\n     * @param {Hash} options\n     * @example\n     *  app.config(function(NgMapProvider) {\n     *    NgMapProvider.setDefaultOptions({\n     *      marker: {\n     *        optimized: false\n     *      }\n     *    });\n     *  });\n     */\n    this.setDefaultOptions = function(options) {\n      defaultOptions = options;\n    };\n\n    var NgMap = function(\n        _$window_, _$document_, _$q_,\n        _NavigatorGeolocation_, _Attr2MapOptions_,\n        _GeoCoder_, _camelCaseFilter_, _NgMapPool_\n      ) {\n      $window = _$window_;\n      $document = _$document_[0];\n      $q = _$q_;\n      NavigatorGeolocation = _NavigatorGeolocation_;\n      Attr2MapOptions = _Attr2MapOptions_;\n      GeoCoder = _GeoCoder_;\n      camelCaseFilter = _camelCaseFilter_;\n      NgMapPool = _NgMapPool_;\n\n      return {\n        defaultOptions: defaultOptions,\n        addMap: addMap,\n        deleteMap: deleteMap,\n        getMap: getMap,\n        initMap: initMap,\n        setStyle: setStyle,\n        getGeoLocation: getGeoLocation,\n        observeAndSet: observeAndSet\n      };\n    };\n    NgMap.$inject = [\n      '$window', '$document', '$q',\n      'NavigatorGeolocation', 'Attr2MapOptions',\n      'GeoCoder', 'camelCaseFilter', 'NgMapPool'\n    ];\n\n    this.$get = NgMap;\n  });\n})();\n\n/**\n * @ngdoc service\n * @name StreetView\n * @description\n *  Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *  service for [Google StreetViewService]\n *  (https://developers.google.com/maps/documentation/javascript/streetview)\n */\n(function() {\n  'use strict';\n  var $q;\n\n  /**\n   * Retrieves panorama id from the given map (and or position)\n   * @memberof StreetView\n   * @param {map} map Google map instance\n   * @param {LatLng} latlng Google LatLng instance\n   *   default: the center of the map\n   * @example\n   *   StreetView.getPanorama(map).then(function(panoId) {\n   *     $scope.panoId = panoId;\n   *   });\n   * @returns {HttpPromise} Future object\n   */\n  var getPanorama = function(map, latlng) {\n    latlng = latlng || map.getCenter();\n    var deferred = $q.defer();\n    var svs = new google.maps.StreetViewService();\n    svs.getPanoramaByLocation( (latlng||map.getCenter), 100,\n      function (data, status) {\n        // if streetView available\n        if (status === google.maps.StreetViewStatus.OK) {\n          deferred.resolve(data.location.pano);\n        } else {\n          // no street view available in this range, or some error occurred\n          deferred.resolve(false);\n          //deferred.reject('Geocoder failed due to: '+ status);\n        }\n      }\n    );\n    return deferred.promise;\n  };\n\n  /**\n   * Set panorama view on the given map with the panorama id\n   * @memberof StreetView\n   * @param {map} map Google map instance\n   * @param {String} panoId Panorama id fro getPanorama method\n   * @example\n   *   StreetView.setPanorama(map, panoId);\n   */\n  var setPanorama = function(map, panoId) {\n    var svp = new google.maps.StreetViewPanorama(\n      map.getDiv(), {enableCloseButton: true}\n    );\n    svp.setPano(panoId);\n  };\n\n  var StreetView = function(_$q_) {\n    $q = _$q_;\n\n    return {\n      getPanorama: getPanorama,\n      setPanorama: setPanorama\n    };\n  };\n  StreetView.$inject = ['$q'];\n\n  angular.module('ngMap').service('StreetView', StreetView);\n})();\n\r\nreturn 'ngMap';\r\n}));//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 644:
/* no static exports found */
/* all exports used */
/*!*******************************************!*\
  !*** ./dashboard/static/style/index.scss ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(/*! !../../../~/css-loader!../../../~/sass-loader/lib/loader.js!./index.scss */ 343);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(/*! ../../../~/style-loader/addStyles.js */ 95)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZGFzaGJvYXJkL3N0YXRpYy9zdHlsZS9pbmRleC5zY3NzP2JlNjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vaW5kZXguc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vaW5kZXguc2Nzc1wiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9kYXNoYm9hcmQvc3RhdGljL3N0eWxlL2luZGV4LnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDY0NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 648:
/* no static exports found */
/* all exports used */
/*!******************************************************************!*\
  !*** ./~/vsGoogleAutocomplete/dist/vs-autocomplete-validator.js ***!
  \******************************************************************/
/***/ (function(module, exports) {

eval("/**\n * vsGoogleAutocomplete - v0.5.0 - 2015-11-29\n * https://github.com/vskosp/vsGoogleAutocomplete\n * Copyright (c) 2015 K.Polishchuk\n * License: MIT\n */\n(function (window, document) {\n'use strict';\nangular.module('vsGoogleAutocomplete').factory('vsEmbeddedValidatorsInjector', ['$injector', function($injector) {\n\tvar validatorsHash = [];\n\n\t/**\n\t * Class making embedded validator.\n\t * @constructor\n\t * @param {string} name - validator name.\n\t * @param {function(place)} validateMethod - function that will validate place.\n\t */\n\tfunction EmbeddedValidator(name, validateMethod) {\n\t\tthis.name = name;\n\t\tthis.validate = validateMethod;\n\t}\n\n\tfunction searchValidator(validatorName) {\n\t\tfor (var i = 0; i < validatorsHash.length; i++) {\n\t\t\tif(validatorsHash[i].name === validatorName)\n\t\t\t\treturn validatorsHash[i];\n\t\t}\n\t\treturn;\n\t}\n\n\tfunction getValidator(validatorName) {\n\t\tvar validator = searchValidator(validatorName);\n\t\tif(!validator) {\n\t\t\tvalidator = new EmbeddedValidator(validatorName, $injector.get(validatorName));\n\t\t\tvalidatorsHash.push(validator);\n\t\t}\n\t\treturn validator;\n\t}\n\n\tfunction getValidators(validatorsNamesList) {\n\t\tvar validatorsList = [];\n\t\tfor (var i = 0; i < validatorsNamesList.length; i++) {\n\t\t\tvar validator = getValidator(validatorsNamesList[i]);\n\t\t\tvalidatorsList.push(validator);\n\t\t}\n\t\treturn validatorsList;\n\t}\n\n\treturn {\n\t\tget: getValidators\n\t};\n}]);\n\nangular.module('vsGoogleAutocomplete').service('vsValidatorFactory', ['vsEmbeddedValidatorsInjector', function(vsEmbeddedValidatorsInjector) {\n\t/**\n\t * Class making validator associated with vsGoogleAutocomplete controller.\n\t * @constructor\n\t * @param {Array.<string>} validatorsNamesList - List of embedded validator names.\n\t */\n\tfunction Validator(validatorsNamesList) {\n\t\t// add default embedded validator name\n\t\tvalidatorsNamesList.unshift('vsGooglePlace');\n\n\t\tthis._embeddedValidators = vsEmbeddedValidatorsInjector.get(validatorsNamesList);\n\t\tthis.error = {};\n\t\tthis.valid = true;\n\t}\n\n\t/**\n\t * Runs all embedded validators and change the validity state.\n\t * @param {google.maps.places.PlaceResult} place - PlaceResult object.\n\t */\n\tValidator.prototype.validate = function(place) {\n\t\tvar validationErrorKey, isValid;\n\n\t\tfor (var i = 0; i < this._embeddedValidators.length; i++) {\n\t\t\tvalidationErrorKey = this._embeddedValidators[i].name;\n\n\t\t\t// runs embedded validator only if place is object\n\t\t\tif (angular.isObject(place)) {\n\t\t\t\tisValid = this._embeddedValidators[i].validate(place);\n\t\t\t} else {\n\t\t\t\tisValid = false;\n\t\t\t}\n\t\t\tthis._setValidity(validationErrorKey, isValid);\n\t\t}\n\t};\n\n\t/**\n\t * Sets validity.\n\t * @param {string} validationErrorKey - Error name.\n\t * @param {boolean} isValid - Valid status.\n\t */\n\tValidator.prototype._setValidity = function(validationErrorKey, isValid) {\n\t\t// set error\n\t\tif (typeof isValid != 'boolean') {\n\t\t\tdelete this.error[validationErrorKey];\n\t\t} else {\n\t\t\tif (!isValid) {\n\t\t\t\tthis.error[validationErrorKey] = true;\n\t\t\t} else {\n\t\t\t\tdelete this.error[validationErrorKey];\n\t\t\t}\n\t\t}\n\t\t// set validity\n\t\tif (this.error) {\n\t\t\tfor (var e in this.error) {\n\t\t\t\tthis.valid = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.valid = true;\n\t};\n\n\tthis.create = function(validatorsNamesList) {\n\t\treturn new Validator(validatorsNamesList);\n\t};\n}]);\n\nangular.module('vsGoogleAutocomplete').directive('vsAutocompleteValidator', ['vsValidatorFactory', function(vsValidatorFactory) {\n\t/**\n\t * Parse validator names from attribute.\n\t * @param {$compile.directive.Attributes} attrs Element attributes\n\t * @return {Array.<string>} Returns array of normalized validator names.\n\t */\n\tfunction parseValidatorNames(attrs) {\n\t\tvar attrValue = attrs.vsAutocompleteValidator,\n\t\t\tvalidatorNames = (attrValue!==\"\") ? attrValue.trim().split(',') : [];\n\n\t\t// normalize validator names\n\t\tfor (var i = 0; i < validatorNames.length; i++) {\n\t\t\tvalidatorNames[i] = attrs.$normalize(validatorNames[i]);\n\t\t}\n\n\t\treturn validatorNames;\n\t}\n\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: ['ngModel', 'vsGoogleAutocomplete'],\n\t\tlink: function(scope, element, attrs, controllers) {\n\t\t\t// controllers\n\t\t\tvar modelCtrl = controllers[0],\n\t\t\t\tautocompleteCtrl = controllers[1];\n\n\t\t\t// validator\n\t\t\tvar\tvalidatorNames = parseValidatorNames(attrs),\n\t\t\t\tvalidator = vsValidatorFactory.create(validatorNames);\n\n\t\t\t// add validator for ngModel\n\t\t\tmodelCtrl.$validators.vsAutocompleteValidator = function() {\n\t\t\t\treturn validator.valid;\n\t\t\t};\n\n\t\t\t// watch for updating place\n\t\t\tautocompleteCtrl.isolatedScope.$watch('vsPlace', function(place) {\n\t\t\t\t// validate place\n\t\t\t\tvalidator.validate(place);\n\n\t\t\t\t// set addr components to undefined if place is invalid\n\t\t\t\tif (!validator.valid) {\n\t\t\t\t\tautocompleteCtrl.updatePlaceComponents(undefined);\n\t\t\t\t}\n\n\t\t\t\t// call modelCtrl.$validators.vsAutocompleteValidator\n\t\t\t\tmodelCtrl.$validate();\n\t\t\t});\n\n\t\t\t// publish autocomplete errors\n\t\t\tmodelCtrl.vsAutocompleteErorr = validator.error;\n\t\t}\n\t};\n}]);\n\n\n//Validator - checks if place is valid Google address\nangular.module('vsGoogleAutocomplete').factory('vsGooglePlace', ['vsGooglePlaceUtility', function(vsGooglePlaceUtility) {\n\tfunction validate(place) {\n\t\treturn vsGooglePlaceUtility.isGooglePlace(place);\n\t}\n\n\treturn validate;\n}]);\n\n//Validator - checks if place is full street address (street number, street, ...)\nangular.module('vsGoogleAutocomplete').factory('vsStreetAddress', ['vsGooglePlaceUtility', function(vsGooglePlaceUtility) {\n\tvar PLACE_TYPES = [\"street_address\", \"premise\"];\n\n\tfunction validate(place) {\n\t\treturn vsGooglePlaceUtility.isContainTypes(place, PLACE_TYPES);\n\t}\n\n\treturn validate;\n}]);\n})(window, document);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 649:
/* no static exports found */
/* all exports used */
/*!***************************************************************!*\
  !*** ./~/vsGoogleAutocomplete/dist/vs-google-autocomplete.js ***!
  \***************************************************************/
/***/ (function(module, exports) {

eval("/**\n * vsGoogleAutocomplete - v0.5.0 - 2015-11-29\n * https://github.com/vskosp/vsGoogleAutocomplete\n * Copyright (c) 2015 K.Polishchuk\n * License: MIT\n */\n(function (window, document) {\n'use strict';\nangular.module('vsGoogleAutocomplete', []);\n\nangular.module('vsGoogleAutocomplete').factory('vsGooglePlaceUtility', function() {\n\tfunction isGooglePlace(place) {\n\t\tif (!place)\n\t\t\treturn false;\n\t\treturn !!place.place_id;\n\t}\n\n\tfunction isContainTypes(place, types) {\n\t\tvar placeTypes,\n\t\t\tplaceType,\n\t\t\ttype;\n\t\tif (!isGooglePlace(place))\n\t\t\treturn false;\n\t\tplaceTypes = place.types;\n\t\tfor (var i = 0; i < types.length; i++) {\n\t\t\ttype = types[i];\n\t\t\tfor (var j = 0; j < placeTypes.length; j++) {\n\t\t\t\tplaceType = placeTypes[j];\n\t\t\t\tif (placeType === type) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction getAddrComponent(place, componentTemplate) {\n\t\tvar result;\n\t\tif (!isGooglePlace(place))\n\t\t\treturn;\n\t\tfor (var i = 0; i < place.address_components.length; i++) {\n\t\t\tvar addressType = place.address_components[i].types[0];\n\t\t\tif (componentTemplate[addressType]) {\n\t\t\t\tresult = place.address_components[i][componentTemplate[addressType]];\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tfunction getPlaceId(place) {\n\t\tif (!isGooglePlace(place))\n\t\t\treturn;\n\t\treturn place.place_id;\n\t}\n\n\tfunction getStreetNumber(place) {\n\t\tvar COMPONENT_TEMPLATE = { street_number: 'short_name' },\n\t\t\tstreetNumber = getAddrComponent(place, COMPONENT_TEMPLATE);\n\t\treturn streetNumber;\n\t}\n\n\tfunction getStreet(place) {\n\t\tvar COMPONENT_TEMPLATE = { route: 'long_name' },\n\t\t\tstreet = getAddrComponent(place, COMPONENT_TEMPLATE);\n\t\treturn street;\n\t}\n\n\tfunction getCity(place) {\n\t\tvar COMPONENT_TEMPLATE = { locality: 'long_name' },\n\t\t\tcity = getAddrComponent(place, COMPONENT_TEMPLATE);\n\t\treturn city;\n\t}\n\n\tfunction getState(place) {\n\t\tvar COMPONENT_TEMPLATE = { administrative_area_level_1: 'short_name' },\n\t\t\tstate = getAddrComponent(place, COMPONENT_TEMPLATE);\n\t\treturn state;\n\t}\n\n\tfunction getDistrict(place) {\n\t\tvar COMPONENT_TEMPLATE = { administrative_area_level_2: 'short_name' },\n\t\t\tstate = getAddrComponent(place, COMPONENT_TEMPLATE);\n\t\treturn state;\n\t}\n\n\tfunction getCountryShort(place) {\n\t\tvar COMPONENT_TEMPLATE = { country: 'short_name' },\n\t\t\tcountryShort = getAddrComponent(place, COMPONENT_TEMPLATE);\n\t\treturn countryShort;\n\t}\n\n\tfunction getCountry(place) {\n\t\tvar COMPONENT_TEMPLATE = { country: 'long_name' },\n\t\t\tcountry = getAddrComponent(place, COMPONENT_TEMPLATE);\n\t\treturn country;\n\t}\n\tfunction getPostCode(place) {\n\t\tvar COMPONENT_TEMPLATE = { postal_code: 'long_name' },\n\t\t\tpostCode = getAddrComponent(place, COMPONENT_TEMPLATE);\n\t\treturn postCode;\n\t}\n\n\tfunction isGeometryExist(place) {\n\t\treturn angular.isObject(place) && angular.isObject(place.geometry);\n\t}\n\n\tfunction getLatitude(place) {\n\t\tif (!isGeometryExist(place)) return;\n\t\treturn place.geometry.location.lat();\n\t}\n\n\tfunction getLongitude(place) {\n\t\tif (!isGeometryExist(place)) return;\n\t\treturn place.geometry.location.lng();\n\t}\n\n\treturn {\n\t\tisGooglePlace: isGooglePlace,\n\t\tisContainTypes: isContainTypes,\n\t\tgetPlaceId: getPlaceId,\n\t\tgetStreetNumber: getStreetNumber,\n\t\tgetStreet: getStreet,\n\t\tgetCity: getCity,\n\t\tgetState: getState,\n\t\tgetCountryShort: getCountryShort,\n\t\tgetCountry: getCountry,\n\t\tgetLatitude: getLatitude,\n\t\tgetLongitude: getLongitude,\n\t\tgetPostCode: getPostCode,\n\t\tgetDistrict: getDistrict\n\t};\n});\n\nangular.module('vsGoogleAutocomplete').directive('vsGoogleAutocomplete', ['vsGooglePlaceUtility', '$timeout', function(vsGooglePlaceUtility, $timeout) {\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: ['vsGoogleAutocomplete', 'ngModel'],\n\t\tscope: {\n\t\t\tvsGoogleAutocomplete: '=',\n\t\t\tvsPlace: '=?',\n\t\t\tvsPlaceId: '=?',\n\t\t\tvsStreetNumber: '=?',\n\t\t\tvsStreet: '=?',\n\t\t\tvsCity: '=?',\n\t\t\tvsState: '=?',\n\t\t\tvsCountryShort: '=?',\n\t\t\tvsCountry: '=?',\n\t\t\tvsPostCode: '=?',\n\t\t\tvsLatitude: '=?',\n\t\t\tvsLongitude: '=?',\n\t\t\tvsDistrict: '=?'\n\t\t},\n\t\tcontroller: ['$scope', '$attrs', function($scope, $attrs) {\n\t\t\tthis.isolatedScope = $scope;\n\n\t\t\t/**\n\t\t\t * Updates address components associated with scope model.\n\t\t\t * @param {google.maps.places.PlaceResult} place PlaceResult object\n\t\t\t */\n\t\t\tthis.updatePlaceComponents = function(place) {\n\t\t\t\t$scope.vsPlaceId       = !!$attrs.vsPlaceId  && place     ? vsGooglePlaceUtility.getPlaceId(place)      : undefined;\n\t\t\t\t$scope.vsStreetNumber  = !!$attrs.vsStreetNumber && place ? vsGooglePlaceUtility.getStreetNumber(place) : undefined;\n\t\t\t\t$scope.vsStreet        = !!$attrs.vsStreet && place       ? vsGooglePlaceUtility.getStreet(place)       : undefined;\n\t\t\t\t$scope.vsCity          = !!$attrs.vsCity && place         ? vsGooglePlaceUtility.getCity(place)         : undefined;\n\t\t\t\t$scope.vsPostCode      = !!$attrs.vsPostCode && place     ? vsGooglePlaceUtility.getPostCode(place)     : undefined;\n\t\t\t\t$scope.vsState         = !!$attrs.vsState && place        ? vsGooglePlaceUtility.getState(place)        : undefined;\n\t\t\t\t$scope.vsCountryShort  = !!$attrs.vsCountryShort && place ? vsGooglePlaceUtility.getCountryShort(place) : undefined;\n\t\t\t\t$scope.vsCountry       = !!$attrs.vsCountry && place      ? vsGooglePlaceUtility.getCountry(place)      : undefined;\n\t\t\t\t$scope.vsLatitude      = !!$attrs.vsLatitude && place     ? vsGooglePlaceUtility.getLatitude(place)     : undefined;\n\t\t\t\t$scope.vsLongitude     = !!$attrs.vsLongitude && place    ? vsGooglePlaceUtility.getLongitude(place)    : undefined;\n\t\t\t\t$scope.vsDistrict      = !!$attrs.vsDistrict && place     ? vsGooglePlaceUtility.getDistrict(place)     : undefined;\n\t\t\t};\n\t\t}],\n\t\tlink: function(scope, element, attrs, ctrls) {\n\t\t\t// controllers\n\t\t\tvar autocompleteCtrl = ctrls[0],\n\t\t\t\tmodelCtrl = ctrls[1];\n\n\t\t\t// google.maps.places.Autocomplete instance (support google.maps.places.AutocompleteOptions)\n\t\t\tvar autocompleteOptions = scope.vsGoogleAutocomplete || {},\n\t\t\t\tautocomplete = new google.maps.places.Autocomplete(element[0], autocompleteOptions);\n\n\t\t\t// google place object\n\t\t\tvar place;\n\n\t\t\t// value for updating view\n\t\t\tvar\tviewValue;\n\n\t\t\t// updates view value and address components on place_changed google api event\n\t\t\tgoogle.maps.event.addListener(autocomplete, 'place_changed', function() {\n\t\t\t\tplace = autocomplete.getPlace();\n\t\t\t\tviewValue = place.formatted_address || modelCtrl.$viewValue;\n\t\t\t\tscope.$apply(function() {\n\t\t\t\t\tscope.vsPlace = place;\n\t\t\t\t\tautocompleteCtrl.updatePlaceComponents(place);\n\t\t\t\t\tmodelCtrl.$setViewValue(viewValue);\n\t\t\t\t\tmodelCtrl.$render();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// updates view value on focusout\n\t\t\telement.on('blur', function(event) {\n\t\t\t\tviewValue = (place && place.formatted_address) ? viewValue : modelCtrl.$viewValue;\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tscope.$apply(function() {\n\t\t\t\t\t\tmodelCtrl.$setViewValue(viewValue);\n\t\t\t\t\t\tmodelCtrl.$render();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// prevent submitting form on enter\n\t\t\tgoogle.maps.event.addDomListener(element[0], 'keydown', function(e) {\n\t\t\t\tif (e.keyCode == 13) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n\n})(window, document);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 652:
/* no static exports found */
/* all exports used */
/*!***********************************!*\
  !*** multi ./dashboard/static/js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/massimo/IdeaProjects/dsp-explorer/dashboard/static/js */299);


/***/ })

},[652]);